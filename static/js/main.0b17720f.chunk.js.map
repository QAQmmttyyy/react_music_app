{"version":3,"sources":["components/PlaylistDetail/images/playall.png","context/PlayerContext.js","components/PlaylistCover/PlaylistCover.jsx","components/PlaylistDetail/PlaylistDetail.jsx","components/Loading/Loading.jsx","components/Search/Search.jsx","components/Slide/Slide.jsx","components/BannerSlider/BannerSlider.jsx","components/Playlists/Playlists.jsx","components/MiniPlayer/MiniPlayer.jsx","components/FullPlayer/FullPlayer.jsx","components/PlayingList/PlayingList.jsx","components/Player/Player.jsx","App.jsx","serviceWorker.js","index.js","images/cover-placeholder.png"],"names":["module","exports","__webpack_require__","p","context","React","createContext","PlaylistCover","_this$props","this","props","src","style","playCount","react_default","a","createElement","className","alt","Component","Item","list_default","PlaylistDetail","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initScroll","SWrapperRef","current","scroll","BScroll","bounce","refreshScroll","refresh","destroyScroll","destroy","getPldData","pldUrl","concat","process","plID","window","fetch","then","response","statusText","json","data","setState","plDetail","catch","reason","console","log","state","createRef","funcPlayallOrAddall","_","cloneDeep","songlist","ev","funcPlaySong","songIndex","stopPropagation","_this2","match","location","history","search","split","hasOwnProperty","_this$state$plDetail","coverUrl","title","author","songNum","playNum","parseInt","PlayerContext","Consumer","_ref","playerState","playAll","playSong","addAll","listItemArr","map","song","idx","id","name","artists","album","artistsTitle","artist","join","key","activeStyle","backgroundColor","onClick","handlePlaySong","nav_bar_default","icon","icon_default","type","onLeftClick","goBack","ref","playingList","length","paddingBottom","components_PlaylistCover_PlaylistCover","width","height","avatarUrl","handleClickPlayallOrAddall","PlayIcon","backgroundImage","Loading","Brief","Search","submit","value","showSearchKeywordBox","showSearchResultBox","isLoading","historyKws","historyKeywords","cpHistoryKws","slice","push","uniqCpHistoryKws","uniq","localStorage","setItem","JSON","stringify","searchApi","encoded","encodeURI","method","headers","Accept","mode","status","resultData","Body","pic","link","picUrl","searchResult","change","keyword","clear","focus","showSearchBox","cancel","handleClickKeyword","val","target","textContent","clearHistoryKeywords","removeItem","hotKeywords","getItem","parse","_this$state","resultContent","Search_Item","multipleLine","textAlign","search_bar_default","manualFocusInst","cancelText","placeholder","onSubmit","onChange","onClear","onFocus","onBlur","onCancel","react_transition_group","in","timeout","mountOnEnter","unmountOnExit","kw","components_Loading_Loading","Slide","update","slide","init","_setSlideWidth","prev","next","clearTimeout","timer","currentPageIndex","showDot","_initDots","_initSlide","autoPlay","_play","isResize","children","slideGroupRef","slideWidth","slideRef","clientWidth","i","child","addClass","loop","threshold","scrollX","scrollY","momentum","snap","speed","click","on","_onScrollEnd","pageIndex","getCurrentPage","pageX","dots","Array","setInterval","interval","hasClass","el","RegExp","test","newClass","addEventListener","enabled","resizeTimer","setTimeout","isInTransition","defaultProps","BannerSlider","banners","components_Slide_Slide","Playlists","getPlaylists","plsUrl","playlists","rcmdPlaylists","homeLink","curPage","rcmdlist","playlist","Link","to","position","top","left","allPlContent","Playlists_Item","thumb","Playlists_Brief","Fragment","components_Search_Search","components_BannerSlider_BannerSlider","renderHeader","MiniPlayer","transitionClass","curSong","isPauseIcon","clickPlayPauseHandler","toggleFullplayer","togglePlayingList","extraContent","contentItem","isEmpty","MiniPlayer_Item","extra","imgSrc","includes","CoverPlaceholder","MiniPlayer_Brief","FullPlayer","getLyric","lrcUrl","songId","text","lrcArr","lyric","timestampArr","forEach","lrc","matchPart","timestampParts","trim","timestamp","parseFloat","isNaN","curLyricIndex","handleClickLyric","showCover","showLyric","handleClickCover","diffSong","playState","clickPrevBtnHandler","clickNextBtnHandler","clickModeBtnHandler","changeProgressHandler","afterChangeProgressHandler","duration","curTime","playProgress","curTimestamp","navBarTitleCnt","lyricContent","translateY","maxTranslateY","findLastIndex","lrcCls","progress","play","pause","curSongIndex","transition","transform","slider_default","marginLeft","marginRight","paddingTop","defaultValue","min","max","step","handleStyle","marginTop","border","trackStyle","railStyle","onAfterChange","curVal","PlayingList","deleteSong","clearPlaylist","extraClearBtn","extraCloseBtn","PlayingList_Item","onTouchStart","Player","showFullplayer","showPlayingList","modeIndex","audioRef","handleChangeProgress","bind","assertThisInitialized","handleAfterChangeProgress","audioAmount","isPause","songUrlApi","currentSong","playMode","desc","isNoAudio","paused","pauseAudio","playAudio","funcPlay","funcPause","getIndex","nextIndex","prevCurTime","curTimeStr","timeFormat","toFixed","audio","currentTime","old","index","loadProgress","audioElem","error","code","load","timeNum","minutes","seconds","minStr","secStr","isPrev","undefined","Math","random","_this3","isToReset","l_lang","onDurationChange","handleDurationChange","onTimeUpdate","handleTimeUpdate","onEnded","handleEnded","onError","handleAudioError","components_MiniPlayer_MiniPlayer","handleClickPlayPause","onExited","components_FullPlayer_FullPlayer","handleClickPrevBtn","handleClickNextBtn","handleClickModeBtn","components_PlayingList_PlayingList","listData","App","isLogin","addSongToNext","localData","appState","l_array","remove","songToAdd","differenceBy","splice","apply","toConsumableArray","indexToInsert","matchedSongIdx","findIndex","_this4","BrowserRouter","Provider","Switch","Route","exact","path","component","components_Player_Player","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b17720f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/playall.8f22f49d.png\";","import React from 'react';\n\nconst context = React.createContext();\nexport default context;\n","import React from 'react';\n\nimport './PlaylistCover.less';\n\nclass PlaylistCover extends React.Component {\n  render() {\n    const { src, style, playCount } = this.props;\n\n    return (\n      <div className=\"pl-cover\" style={style}>\n        <img \n          className=\"cover\" \n          src={src}\n          alt=\"cover\"\n        />\n        <span className=\"u-earp play-num\">{playCount}</span>\n      </div>\n    );\n  }\n}\n\nexport default PlaylistCover;","import React from 'react';\nimport { NavBar, Icon, List } from 'antd-mobile';\nimport BScroll from 'better-scroll';\n\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport PlayIcon from './images/playall.png';\nimport PlaylistCover from '../PlaylistCover/PlaylistCover.jsx';\n\nimport './PlaylistDetail.less';\n\nconst Item = List.Item;\n\nclass PlaylistDetail extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      plDetail: {}\n    };\n    this.plID = '';\n\n    this.SWrapperRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.initScroll();\n    this.getPldData();\n  }\n\n  componentDidUpdate() {\n    this.refreshScroll();\n  }\n\n  componentWillUnmount() {\n    this.scroll && this.scroll.destroy();\n  }\n  \n  initScroll = () => {\n    if (!this.SWrapperRef.current) {\n      return;\n    }\n\n    this.scroll = new BScroll(this.SWrapperRef.current, {\n      bounce: false,\n    });\n  }\n\n  refreshScroll = () => {\n    this.scroll && this.scroll.refresh();\n  }\n\n  destroyScroll = () => {\n    this.scroll.destroy();\n  }\n\n  getPldData = () => {\n    // p0 页数 可变\n    const pldUrl = `${\n      process.env.PUBLIC_URL\n    }/api_mock_data/playlist_detail/all/pl-${this.plID}.json`;\n  \n    window.fetch(pldUrl).then(\n      response => response.statusText === 'OK' ? response.json() : {}\n    ).then(\n      data => {\n        this.setState({ plDetail: data });\n      }\n    ).catch(\n      reason => console.log(reason)\n    );\n  }\n\n  handleClickPlayallOrAddall(funcPlayallOrAddall) {\n    const songlist = _.cloneDeep(this.state.plDetail.songlist);\n    funcPlayallOrAddall(songlist);\n  }\n\n  handlePlaySong(ev, funcPlaySong, songIndex) {\n    ev.stopPropagation();\n    funcPlaySong(_.cloneDeep(this.state.plDetail.songlist[songIndex]));\n  }\n\n  render() {\n    const { match,location, history } = this.props\n    console.log(location);\n    console.log(match);\n    this.plID = location.search.split('=')[1];\n\n    if (this.state.plDetail.hasOwnProperty('id')) {\n      \n      const {\n        coverUrl,\n        title,\n        author,\n        songNum,\n        playNum,\n        songlist,\n      } = this.state.plDetail;\n  \n      const playCount = playNum >= 10000 ? `${parseInt(playNum / 10000)}万` : playNum;\n\n      \n      return (\n        <PlayerContext.Consumer>\n          {({ playerState, playAll, addAll, playSong }) => {\n\n            const listItemArr = songlist.map((song, idx) => {\n              const {\n                id,\n                name,\n                artists,\n                album,\n              } = song;\n      \n              let artistsTitle = artists.map(\n                artist => artist.name\n              ).join('/');\n      \n              return (\n                <Item \n                  key={id}\n                  className=\"mty-list-item\"\n                  activeStyle={{\n                    backgroundColor: '#ccc'\n                  }}\n                  onClick={(ev) => {this.handlePlaySong(ev, playSong, idx)}}\n                >\n                  <div className=\"s-index\">{idx + 1}</div>\n                  <div className=\"s-detail-wrap\">\n                    <div className=\"s-info\">\n                      <div className=\"s-name f-thide\">\n                        {name}\n                      </div>\n                      <div className=\"s-artists-alb f-thide\">\n                        {artistsTitle} - {album.name}\n                      </div>\n                    </div>\n                  </div>\n                </Item>\n              );\n            });\n\n            return (\n              <div className=\"PlaylistDetail\">\n                <NavBar\n                  className=\"my-pld-navbar\"\n                  icon={<Icon type=\"left\"/>}\n                  onLeftClick={() => history.goBack()}\n                >\n                  歌单\n                </NavBar>\n                \n                <div \n                  ref={this.SWrapperRef}\n                  className=\"scroll-wrapper\"\n                  style={playerState.playingList.length ? {paddingBottom: '56px'} : {paddingBottom: '0px'}}\n                >\n                  <div className=\"scroll-content\">\n\n                    {/* info sec 可抽出为容器组件 */}\n                    <section className=\"my-plinfo-wrap\">\n                      <PlaylistCover\n                        src={`${coverUrl}?param=512y512`}\n                        style={{\n                          width: '1.12rem',\n                          height: '1.12rem',\n                        }}\n                        playCount={playCount}\n                      />\n\n                      {/* intro */}\n                      <div className=\"plinfo-right\">\n                        <h2 className=\"f-brk title\">\n                          {title}\n                        </h2>\n                        <div className=\"author f-thide\">\n                          <div className=\"avatar\">\n                            <img src={author.avatarUrl} alt=\"ava\" />\n                          </div>\n                          {author.name}\n                        </div>\n                      </div>\n                    </section>\n                    \n                    {/* plyall btn */}\n                    <div className=\"playall-btn-wrapper\">\n                      <Item \n                        className=\"mty-list-item\"\n                        activeStyle={{\n                          backgroundColor: '#ddd'\n                        }}\n                        onClick={() => {this.handleClickPlayallOrAddall(playAll)}}\n                      > \n                        <div className=\"playall-btn\">\n                          <img \n                            src={PlayIcon} \n                            alt=\"playicon\"\n                          />\n                          <span>播放全部</span>\n                          <span className=\"song-num\">\n                            共({songNum})首\n                          </span>\n                        </div>\n                      </Item>\n                    </div>\n                    {/* song list */}\n                    <List>\n                      {listItemArr}\n                    </List>\n\n                  </div>\n                </div>\n\n                {/* 模糊背景 可抽出为组件 */}\n                <div className=\"bg-wrap\">\n                  <div \n                    className=\"fullscreen-blur-bg\" \n                    style={{\n                      backgroundImage: `url(${coverUrl}?param=512y512)`\n                    }}\n                  >\n                  </div>\n                </div>\n              </div>\n            );\n          }}\n        </PlayerContext.Consumer>\n      );\n\n    } else {\n      // TODO 占位符元素\n      return (\n        <div></div>\n        // <Loading key=\"loading\"/>\n      );\n    }\n  }\n}\n\nexport default PlaylistDetail;","import React from 'react';\nimport './Loading.less';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <i className=\"loading-icon\"></i>\n        <p className=\"loading-text\">正在加载</p>\n      </div>\n    );\n  }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { SearchBar, List } from 'antd-mobile';\nimport { Transition } from 'react-transition-group';\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport Loading from '../Loading/Loading';\nimport './Search.less';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: '',\n      hotKeywords: ['起风了', 'A妹新专辑', '有可能的夜晚', '出山', '流浪地球', 'Counting Sheep', '空心', '水星记', '东西', '梦龙'],\n      historyKeywords: [],\n      searchResult: [],\n      showSearchBox: false,\n      showSearchKeywordBox: false,\n      showSearchResultBox: false,\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    const historyKeywords = window.localStorage.getItem('historyKeywords');\n    if (historyKeywords) {\n      this.setState({ historyKeywords: JSON.parse(historyKeywords) });\n    }\n  }\n\n  submit = (value) => {\n    if (value) {\n      \n      // set loading\n      this.setState({\n        showSearchKeywordBox: false,\n        showSearchResultBox: true,\n        isLoading: true,\n      });\n  \n      // set localstorage\n      const historyKws = this.state.historyKeywords;\n      let cpHistoryKws = [];\n      if (historyKws && historyKws.length) {\n        cpHistoryKws = historyKws.slice(0);\n        cpHistoryKws.push(value);\n      } else {\n        cpHistoryKws.push(value);\n      }\n      const uniqCpHistoryKws = _.uniq(cpHistoryKws);\n      window.localStorage.setItem('historyKeywords', JSON.stringify(uniqCpHistoryKws));\n      // console.log(cpHistoryKws);\n  \n      // req, url encode?\n      const searchApi = `https://api.mlwei.com/music/api/wy/?key=523077333&id=${value}&type=so&cache=0&nu=60`;\n      \n      const encoded = encodeURI(searchApi);\n      // console.log(encoded);\n      window.fetch(\n        encoded,\n        {\n          method: 'GET',\n          headers: {\n            'Accept': '*'\n          },\n          mode: 'cors'\n        }\n      ).then(\n        response => {\n          // console.log(response);\n          return response.status === 200 ? response.json() : {};\n        }\n      ).then(\n        data => {\n          // console.log('data',data);\n          let resultData = [];\n          if (data.Body) {\n            \n            resultData = data.Body.map(song => {\n              const { author, id, pic, title } = song;\n              return {\n                id: id,\n                link: `/song?id=${id}`,\n                name: title,\n                artists: [{name: author}],\n                album: {picUrl: pic}\n              };\n            });\n          }\n          // console.log('resultData',resultData);\n          this.setState({\n            historyKeywords: uniqCpHistoryKws,\n            searchResult: resultData,\n            isLoading: false,\n          });\n        }\n      ).catch(\n        reason => {\n          console.log(reason);\n          this.setState({\n            historyKeywords: cpHistoryKws,\n            isLoading: false,\n          });\n        }\n      );\n    }\n  }\n\n  change= (value) => {\n    this.setState({ keyword: value });\n  }\n\n  clear = () => {\n    // unshow result/ show search-keyword-box\n    this.setState({ keyword: '' });\n  }\n\n  focus = () => {\n    // show search-keyword-box\n    console.log('focus');\n    this.setState({\n      showSearchBox: true,\n      showSearchKeywordBox: true,\n      showSearchResultBox: false,\n      isLoading: false,\n    });\n  }\n\n  cancel = () => {\n    // unshow search-keyword-box/result\n    this.setState({\n      keyword: '',\n      showSearchBox: false,\n      showSearchKeywordBox: false,\n      showSearchResultBox: false,\n      isLoading: false,\n    })\n  }\n\n  handlePlaySong = (ev, funcPlaySong, songIndex) => {\n    ev.stopPropagation();\n    funcPlaySong(_.cloneDeep(this.state.searchResult[songIndex]));\n  }\n\n  handleClickKeyword = (ev) => {\n    ev.stopPropagation();\n    // this.manualFocusInst.focus();\n    const val = ev.target.textContent;\n    console.log(val);\n    if (ev.target.className === 'item') {\n      this.setState({ keyword: val });\n      this.submit(val);\n    }\n  }\n\n  clearHistoryKeywords = (ev) => {\n    ev.stopPropagation();\n    window.localStorage.removeItem('historyKeywords');\n    this.setState({ historyKeywords: [] });\n  }\n\n  render() {\n    const {\n      hotKeywords,\n      historyKeywords,\n      searchResult,\n      showSearchBox,\n      showSearchKeywordBox,\n      showSearchResultBox,\n      isLoading,\n    } =this.state;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playSong }) => {\n          let resultContent;\n          if (searchResult && searchResult.length) {\n            resultContent = searchResult.map((song, idx) => {\n      \n              const { id, name, artists } = song;\n        \n              return (\n                <Item \n                  key={id}\n                  className=\"result-list-item\"\n                  activeStyle={{ backgroundColor: '#ccc' }}\n                  onClick={(ev) => {this.handlePlaySong(ev, playSong, idx)}}\n                  multipleLine\n                >\n                  {name}\n                  <Brief>{artists.map(val => val.name).join('/')}</Brief>\n                </Item>\n              );\n            });\n      \n          } else {\n            resultContent = (\n              <div style={{height:'100vh',textAlign: 'center'}}>网络出了点问题</div>\n            );\n          }\n\n          return (\n            <div className=\"my-search\">\n              <SearchBar\n                ref={ref => this.manualFocusInst = ref}\n                value={this.state.keyword}\n                cancelText=\"返回\"\n                placeholder=\"Search\"\n                onSubmit={this.submit}\n                onChange={this.change}\n                onClear={this.clear}\n                onFocus={this.focus}\n                onBlur={() => console.log('onBlur')}\n                onCancel={this.cancel}\n              />\n              \n              {showSearchBox ? (\n                <div className=\"search-box\">\n                  {/* hot history */}\n                  <Transition\n                    in={showSearchKeywordBox}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    // onExited={() => this.setState({showSearchKeywordBox: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div\n                          className={`search-keyword-box fade fade-${status}`}\n                          onClick={(ev) => this.handleClickKeyword(ev)}\n                        >\n                          <div className=\"hot-keyword\">\n                            <h4 className=\"title\">热门搜索</h4>\n                            <ul>\n                              {hotKeywords.map((kw, idx) => (\n                                <li\n                                  key={idx}\n                                  className=\"item\"\n                                >\n                                  {kw}\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                          {historyKeywords.length > 0 ? (\n                            <div className=\"history-keyword\">\n                              <h4 className=\"title\">\n                                搜索历史\n                                <i\n                                  className=\"delete-btn\"\n                                  onClick={(ev) => this.clearHistoryKeywords(ev)}\n                                ></i>\n                              </h4>\n                              <ul>\n                                {historyKeywords.map((kw, idx) => (\n                                  <li\n                                    key={idx}\n                                    className=\"item\"\n                                  >\n                                    {kw}\n                                  </li>\n                                ))}\n                              </ul>\n                            </div>\n                          ) : null}\n                        </div>\n                      );\n                    }}\n                  </Transition>\n\n                  {/* result */}\n                  <Transition\n                    in={showSearchResultBox}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    // onExited={() => this.setState({showSearchResultBox: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div className={`search-result-box fade fade-${status}`}>\n                          {isLoading ? (\n                            <Loading />\n                          ) : (\n                            <List>{resultContent}</List>\n                          )}\n                        </div>\n                      );\n                    }}\n                  </Transition>\n                  {/* loading */}\n                  {/* <Transition\n                    in={isLoading}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    onExited={() => this.setState({isLoading: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div className={`search-loading-box fade fade-${status}`}>\n                          <Loading />\n                        </div>\n                      );\n                    }}\n                  </Transition> */}\n                </div>\n              ) : null}\n\n            </div>\n            \n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport BScroll from 'better-scroll';\n\nimport './Slide.less';\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      dots: [],\n      currentPageIndex: 0,\n    }\n    this.slideRef = React.createRef()\n    this.slideGroupRef = React.createRef()\n  }\n\n  componentDidMount() {\n    this.update()\n\n    window.addEventListener('resize', () => {\n      if (!this.slide || !this.slide.enabled) {\n        return\n      }\n      window.clearTimeout(this.resizeTimer)\n      this.resizeTimer = window.setTimeout(() => {\n        if (this.slide.isInTransition) {\n          this._onScrollEnd()\n        } else {\n          if (this.props.autoPlay) {\n            this._play()\n          }\n        }\n        this.refresh()\n      }, 60)\n    })\n  }\n  componentWillMount() {\n    // this.slide.disable()\n    window.clearTimeout(this.timer)\n  }\n  // methods: \n  update = () => {\n    if (this.slide) {\n      this.slide.destroy()\n    }\n    this.init()\n  }\n  refresh = () => {\n    this._setSlideWidth(true)\n    this.slide.refresh()\n  }\n  prev = () => {\n    this.slide.prev()\n  }\n  next = () => {\n    this.slide.next()\n  }\n  init = () => {\n    window.clearTimeout(this.timer)\n    this.setState({currentPageIndex: 0})\n    this._setSlideWidth()\n    if (this.props.showDot) {\n      this._initDots()\n    }\n    this._initSlide()\n    if (this.props.autoPlay) {\n      this._play()\n    }\n  }\n  _setSlideWidth = (isResize) => {\n    this.children = this.slideGroupRef.current.children\n    let width = 0\n    let slideWidth = this.slideRef.current.clientWidth\n    for (let i = 0; i < this.children.length; i++) {\n      let child = this.children[i]\n      this.addClass(child, 'slide-item')\n      child.style.width = slideWidth + 'px'\n      width += slideWidth\n    }\n    if (this.props.loop && !isResize) {\n      width += 2 * slideWidth\n    }\n    this.slideGroupRef.current.style.width = width + 'px'\n  }\n  _initSlide = () => {\n    console.log(this.props.threshold)\n    this.slide = new BScroll(this.slideRef.current, {\n      scrollX: true,\n      scrollY: false,\n      momentum: false,\n      snap: {\n        loop: this.props.loop,\n        threshold: this.props.threshold,\n        speed: this.props.speed\n      },\n      bounce: false,\n      stopPropagation: true,\n      click: this.props.click\n    })\n    this.slide.on('scrollEnd', this._onScrollEnd)\n    this.slide.on('touchEnd', () => {\n      if (this.props.autoPlay) {\n        this._play()\n      }\n    })\n    this.slide.on('beforeScrollStart', () => {\n      if (this.props.autoPlay) {\n        window.clearTimeout(this.timer)\n      }\n    })\n  }\n  _onScrollEnd = () => {\n    let pageIndex = this.slide.getCurrentPage().pageX\n    this.setState({currentPageIndex: pageIndex})\n    if (this.autoPlay) {\n      this._play()\n    }\n  }\n  _initDots = () => {\n    let dots = new Array(this.children.length)\n    for (let idx = 0; idx < dots.length; idx++) {\n      dots[idx] = idx;\n    }\n    this.setState({dots: dots})\n  }\n  _play = () => {\n    window.clearTimeout(this.timer)\n    this.timer = window.setInterval(() => {\n      this.slide.next()\n    }, this.props.interval)\n  }\n  // common method dom\n  hasClass = (el, className) => {\n    let reg = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)')\n    return reg.test(el.className)\n  }\n  \n  addClass = (el, className) => {\n    if (this.hasClass(el, className)) {\n      return\n    }\n  \n    let newClass = el.className.split(' ')\n    newClass.push(className)\n    el.className = newClass.join(' ')\n  }\n\n  render() {\n    const { dots, currentPageIndex } = this.state;\n\n    return (\n      <div className=\"slide\" ref={this.slideRef}>\n        <div className=\"slide-group\" ref={this.slideGroupRef}>\n          {this.props.children}\n        </div>\n        {this.props.showDot ? (\n          <div className=\"dots\">\n            {dots.map((val, idx) => (\n              <span\n                key={idx}\n                className={\n                  `dot ${currentPageIndex === idx ? 'active':''}`\n                }\n              ></span>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nSlide.defaultProps = {\n  loop: true,\n  autoPlay: true,\n  interval: 4000,\n  showDot: true,\n  click: true,\n  threshold: 0.3,\n  speed: 400,\n}\n\nexport default Slide;","import React, { Component } from 'react';\nimport Slide from '../Slide/Slide';\n\nclass BannerSlider extends Component {\n  state = {\n    banners: [\n      'https://p1.music.126.net/PzonwsvcSEEsr-uhJXE2_g==/109951163871296308.jpg',\n      'https://p1.music.126.net/thHP6ooWw893Ccfk_iXG5w==/109951163866743145.jpg',\n      'https://p1.music.126.net/VO_0urbXu_PytHjhjfj4Zw==/109951163871298888.jpg',\n      'https://p1.music.126.net/kEGOOxh_p6H7UHKuOOFkFg==/109951163871789068.jpg',\n      'https://p1.music.126.net/wa7Oxq5yysZgGBvOlivwEg==/109951163871318124.jpg'\n    ]\n  }\n  render() {\n    const { banners } = this.state;\n\n    return (\n      <Slide>\n        {banners.map((val, idx) => (\n          <div key={idx}>\n            <img src={val} alt=\"banner\"/>\n          </div>\n        ))}\n      </Slide>\n    );\n  }\n}\n\nexport default BannerSlider;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List } from 'antd-mobile';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport './Playlists.less';\n// import Loading from '../Loading/Loading.jsx';\nimport Search from '../Search/Search';\nimport PlaylistCover from '../PlaylistCover/PlaylistCover.jsx';\nimport BannerSlider from '../BannerSlider/BannerSlider';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\n// TODO: 无限加载\nclass Playlists extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      rcmdPlaylists: [\n        {\n          \"id\": 2406347748,\n          \"coverUrl\": \"http://p2.music.126.net/tkQ6Zb_eBdUsFAeD6PM-2A==/109951163547241213.jpg\",\n          \"name\": \"2018全美音乐奖提名名单（AMAs）\",\n          \"link\": \"/playlist?id=2406347748\",\n          \"playCount\": \"126万\",\n          \"author\": {\n            \"name\": \"DoubleRainbow_\",\n            \"homeLink\": \"/user/home?id=3226705\"\n          }\n        }, {\n          \"id\": 2439954234,\n          \"coverUrl\": \"http://p2.music.126.net/dBdq_Rs_pexuA8GqkZLcKA==/109951163599919632.jpg\",\n          \"name\": \"听首情歌说唱 | 做个甜甜的梦\",\n          \"link\": \"/playlist?id=2439954234\",\n          \"playCount\": \"211万\",\n          \"author\": {\n            \"name\": \"章若楠nn\",\n            \"homeLink\": \"/user/home?id=640698142\"\n          }\n        }, {\n          \"id\": 2497731034,\n          \"coverUrl\": \"http://p2.music.126.net/AtlN3uAvGczoL-xQN7FTtQ==/109951163643083559.jpg\",\n          \"name\": \"初恋糖配料表：你的马尾辫和衬衫味道\",\n          \"link\": \"/playlist?id=2497731034\",\n          \"playCount\": \"542万\",\n          \"author\": {\n            \"name\": \"驴子鬼\",\n            \"homeLink\": \"/user/home?id=246029257\"\n          }\n        }, {\n          \"id\": 2390539027,\n          \"coverUrl\": \"http://p2.music.126.net/8BZpZdDiDZatIiQMJnoKyg==/109951163736178562.jpg\",\n          \"name\": \"那些超带感的英文歌曲~『一秒沦陷』\",\n          \"link\": \"/playlist?id=2390539027\",\n          \"playCount\": \"351万\",\n          \"author\": {\n            \"name\": \"Mysterious-Box\",\n            \"homeLink\": \"/user/home?id=1558934331\"\n          }\n        }, {\n          \"id\": 2554253084,\n          \"coverUrl\": \"http://p2.music.126.net/mP8ulkyTDGmoj6jlZ_sblQ==/109951163722284832.jpg\",\n          \"name\": \"Future Bass丨醉寻心涧跳动的梦幻电子⚡️\",\n          \"link\": \"/playlist?id=2554253084\",\n          \"playCount\": \"61万\",\n          \"author\": {\n            \"name\": \"Kirin电子站\",\n            \"homeLink\": \"/user/home?id=1489420441\"\n          }\n        }, {\n          \"id\": 2312165875,\n          \"coverUrl\": \"http://p2.music.126.net/Cl0-NpZ0ESTDjJ1HmZ33KA==/109951163460576279.jpg\",\n          \"name\": \"100首华语民谣，因为懂得才有共鸣\",\n          \"link\": \"/playlist?id=2312165875\",\n          \"playCount\": \"1107万\",\n          \"author\": {\n            \"name\": \"情思天鹅\",\n            \"homeLink\": \"/user/home?id=108952364\"\n          }\n        }\n      ],\n      playlists: [],\n    };\n    this.curPage = 0;\n  }\n\n  componentDidMount() {\n    this.getPlaylists(this.curPage);\n  }\n\n  getPlaylists = (pageIndex) => {\n    const plsUrl = `${\n      process.env.PUBLIC_URL\n    }/api_mock_data/playlists/all/p${pageIndex}.json`;\n\n    window.fetch(plsUrl).then(\n      response => response.status === 200 ? response.json() : ''\n    ).then(\n      data => {\n        this.setState({ playlists: data });\n      }\n    ).catch(\n      reason => console.log(reason)\n    );\n  }\n\n  render() {\n    const { history } = this.props;\n    const { rcmdPlaylists, playlists } =this.state;\n\n    // tuijian gedan\n    const rcmdlist = rcmdPlaylists.map((playlist) => {\n      const {\n        id,\n        coverUrl,\n        name,\n        link,\n        playCount,\n      } = playlist;\n\n      return (\n        <Link key={id} className=\"pl-li\" to={link}>\n          <div className=\"cover-wrapper\">\n            <PlaylistCover\n              src={`${coverUrl}?param=512y512`}\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n              }}\n              playCount={playCount}\n            />\n          </div>\n          <p className=\"dec\">{name}</p>\n        </Link>\n      );\n    });\n    //  quanbu gedan\n    const allPlContent = playlists && playlists.map((playlist) => {\n      const {\n        id,\n        coverUrl,\n        name,\n        link,\n        playCount,\n        author,\n      } = playlist;\n\n      return (\n        <Item\n          key={id}\n          thumb={`${coverUrl}?param=512y512`}\n          onClick={() => history.push(link)}\n          multipleLine\n        >\n          {name} <Brief>{`${author.name} · ${playCount}次播放`}</Brief>\n        </Item>\n      );\n    });\n\n    return (\n      <PlayerContext.Consumer>\n        {({playerState}) => (\n          <React.Fragment>\n            <Search />\n            <div\n              className=\"playlists\"\n              style={playerState.playingList.length ? {paddingBottom: '56px'} : {paddingBottom: '0px'}}\n            >\n              <BannerSlider/>\n              <div key=\"cate\" className=\"pl-cat\">\n                推荐歌单\n              </div>\n              <div key=\"cvrlst\" className=\"pl-cvrlst\">\n                {rcmdlist}\n              </div>\n              {/* all pl */}\n              <List renderHeader={() => '全部歌单'}>\n                {allPlContent}\n              </List>\n            </div>\n          </React.Fragment>\n        )}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Playlists;\n","import React, { Component } from 'react';\nimport { List } from \"antd-mobile\";\n\nimport _ from 'lodash';\n\nimport CoverPlaceholder from '../../images/cover-placeholder.png';\nimport './MiniPlayer.less';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nclass MiniPlayer extends Component {\n\n  render() {\n    let {\n      transitionClass,\n      curSong,\n      isPauseIcon,\n      clickPlayPauseHandler,\n      toggleFullplayer,\n      togglePlayingList,\n    } = this.props;\n    // test\n    // curSong = {\n    //   \"id\": 437608773,\n    //   \"name\": \"无法长大\",\n    //   \"artists\": [{\n    //     \"name\": \"赵雷\",\n    //     \"link\": \"/artist?id=6731\"\n    //   }],\n    //   \"album\": {\n    //     \"name\": \"无法长大\",\n    //     \"link\": \"/album?id=34943558\",\n    //     \"picUrl\": \"http://p1.music.126.net/zy9EZ2dcsofYlVAn-nb-wA==/3412884129074161.jpg\"\n    //   },\n    // };\n\n    // play plp btns\n    const extraContent = (\n      <div className=\"miniplayer-btns-wrapper\">\n        <div \n          className={`btn ${isPauseIcon ? 'pause' : 'play'}-icon`}\n          onClick={clickPlayPauseHandler}\n        ></div>\n        <div\n          className=\"btn playlist-icon\"\n          onClick={togglePlayingList}\n        ></div>\n      </div>\n    );\n\n    let contentItem = null;\n\n    if (_.isEmpty(curSong)) {\n      contentItem = (\n        <Item\n          className=\"miniplayer-content\"\n          extra={extraContent}\n          multipleLine\n        >\n          听我想听的歌\n        </Item>\n      );\n    } else {\n      const {\n        name,\n        artists,\n        album,\n      } = curSong;\n  \n      // album cover \n      let imgSrc = '';\n      // 判断条件可能要改\n      if (album.picUrl && album.picUrl.length && album.picUrl.includes('http')) {\n        imgSrc = `${album.picUrl}`;\n      } else {\n        imgSrc = CoverPlaceholder;\n      }\n\n      contentItem = (\n        <Item\n          className=\"miniplayer-content\"\n          thumb={imgSrc}\n          extra={extraContent}\n          onClick={toggleFullplayer}\n          activeStyle={{ backgroundColor: '#fff'}}\n          multipleLine\n        >\n          {name}\n          <Brief>{artists.map(val => val.name).join('/')}</Brief>\n        </Item>\n      );\n    }\n\n    return (\n      <div className={`miniplayer ${transitionClass}`}>\n        {contentItem}\n      </div>\n    );\n  }\n}\n \nexport default MiniPlayer;","import React from 'react';\nimport { NavBar, Icon, Slider } from 'antd-mobile';\nimport { Transition } from 'react-transition-group';\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport CoverPlaceholder from '../../images/cover-placeholder.png';\nimport './FullPlayer.less';\n\nclass FullPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      lyric: [],\n      timestampArr: [],\n      showCover: true,\n      showLyric: false,\n    };\n\n    this.songId = 0;\n    this.diffSong = false;\n    this.curLyricIndex = -1;\n  }\n\n  componentDidMount() {\n    this.getLyric();\n  }\n  componentDidUpdate() {\n    if (this.diffSong) {\n      this.getLyric();\n    }\n  }\n\n  getLyric = () => {\n    // const lrcUrl = `/api_mock_data/lyric/lyric-${this.songId}.json`;\n    // const lrcUrl = `/api_mock_data/lyric/lyric-64063.json`;\n    const lrcUrl = `https://api.mlwei.com/music/api/wy/?key=523077333&cache=1&type=lrc&id=${this.songId}`;\n    console.log(lrcUrl);\n    \n    window.fetch(\n      lrcUrl,\n      {\n        method: 'GET',\n        headers: {\n          'Accept': '*'\n        },\n        mode: 'cors'\n      }\n    ).then(\n      response => {\n        console.log(response);\n        return response.status === 200 ? response.text() : null;\n      }\n    ).then(\n      data => {\n        if (data) {\n          \n          console.log(data);\n          const lrcArr = data.split('\\n');\n          // state\n          const \n            lyric = [],\n            timestampArr = [];\n  \n          lrcArr.forEach((lrc) => {\n            const matchPart = lrc.match(/\\[(.*)\\](.*)/);\n  \n            if (matchPart) {\n              \n              const \n                timestampParts = matchPart[1].trim().split(':'),\n                part1 = parseInt(timestampParts[0]) * 60,\n                part2 = parseFloat(timestampParts[1]),\n                timestamp = part1 + part2;\n              \n              if (!isNaN(timestamp)) {\n                lyric.push(matchPart[2].trim());\n                timestampArr.push(timestamp);\n              }\n            }\n          });\n  \n          console.log(lyric);\n          console.log(timestampArr);\n  \n          this.setState({\n            lyric: lyric,\n            timestampArr: timestampArr,\n            curLyricIndex: 0,\n          });\n        }\n      }\n    ).catch(\n      reason => {\n        console.log(reason);\n        this.setState({\n          lyric: [],\n          timestampArr: [],\n        });\n      }\n    );\n  }\n\n  handleClickLyric = () => {\n    this.setState({\n      showCover: true,\n      showLyric: false,\n    });\n  }\n  handleClickCover = () => {\n    this.setState({\n      showCover: false,\n      showLyric: true,\n    });\n  }\n\n  render() {\n    let {\n      transitionClass,\n      curSong,\n      playState,\n      mode,\n      clickPlayPauseHandler,\n      clickPrevBtnHandler,\n      clickNextBtnHandler,\n      clickModeBtnHandler,\n      changeProgressHandler,\n      afterChangeProgressHandler,\n      toggleFullplayer,\n      togglePlayingList,\n    } = this.props;\n\n    const { lyric, timestampArr, showCover, showLyric } = this.state;\n\n    if (_.isEmpty(curSong)) {\n      return (\n        <div className={`fullplayer ${transitionClass}`}>\n          <NavBar\n            className=\"my-fullplayer-navbar\"\n            icon={<Icon type=\"down\"/>}\n            onLeftClick={toggleFullplayer}\n          >\n            听我想听的歌\n          </NavBar>\n\n          <div className=\"mid-wrapper\">\n            <div className=\"cd-box\">\n              <div className=\"cd-wrapper\">\n                <div className=\"cd\">\n                  <img\n                    className=\"image\"\n                    src={CoverPlaceholder}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"background\"></div>\n        </div>\n      );\n    }\n\n    // else\n    const { id, name, artists, album} = curSong;\n\n    const {\n      duration,\n      curTime,\n      playProgress,\n      isPauseIcon,\n      curTimestamp,\n    } = playState;\n\n    this.diffSong = this.songId !== id;\n    this.songId = id;\n\n    const navBarTitleCnt = (\n      <div className=\"navbar-title-content\">\n        <p className=\"song-name f-thide\">{name}</p>\n        <p className=\"artists-name f-thide\">\n          - {artists.map(val => val.name).join('/')} -\n        </p>\n      </div>\n    );\n\n    // lyric\n    let \n      curLyricIndex = 0,\n      lyricContent = null,\n      translateY = 0,\n      maxTranslateY = 0;\n\n    if (lyric.length) {\n      // curLyricIndex\n      curLyricIndex = _.findLastIndex(timestampArr, val => val < curTimestamp);\n      this.curLyricIndex = curLyricIndex;\n      // lyricContent\n      lyricContent = lyric.map((val, idx) => {\n        const lrcCls = `sentence${\n          idx === curLyricIndex ? ' is-curSentence' : ''\n        }`;\n\n        const sentenceEl = (\n          <p \n            id={idx}\n            key={idx}\n            style={(val === '') ? {height: '18px'} : {}}\n            className={lrcCls}\n          >\n            {val}\n          </p>\n        );\n\n        return sentenceEl;\n      });\n\n      // 34px 为一行歌词的行高\n      translateY = 128 - curLyricIndex * 40;\n      maxTranslateY = 128 - lyric.length * 40;\n\n      if (translateY < maxTranslateY) {\n        translateY = maxTranslateY;\n      }\n    }\n\n    // album cover \n    let imgSrc = '';\n    // 判断条件可能要改\n    if (album.picUrl && album.picUrl.length && album.picUrl.includes('http')) {\n      imgSrc = `${album.picUrl}`;\n    } else {\n      imgSrc = CoverPlaceholder;\n    }\n\n    const progress = parseFloat(playProgress);\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, play, pause }) => {\n          const {\n            curSongIndex,\n          } = playerState;\n\n          return (\n            <div className={`fullplayer ${transitionClass}`}>\n              <NavBar\n                className=\"my-fullplayer-navbar\"\n                icon={<Icon type=\"down\"/>}\n                onLeftClick={toggleFullplayer}\n              >\n                {navBarTitleCnt}\n              </NavBar>\n\n              <div className=\"mid-wrapper\">\n                {/* cd */}\n                <Transition\n                  in={showCover}\n                  timeout={200}\n                  mountOnEnter\n                  unmountOnExit\n                >\n                  {(status) => {\n                    return (\n                      <div\n                        className={`cd-box fade fade-${status}`}\n                        onClick={() => this.handleClickCover()}\n                      >\n                        <div className=\"cd-wrapper\">\n                          <div className=\"cd\">\n                            <img\n                              className=\"image\"\n                              src={imgSrc}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }}\n                </Transition>\n\n                {/* lyric */}\n                <Transition\n                  in={showLyric}\n                  timeout={200}\n                  mountOnEnter\n                  unmountOnExit\n                >\n                  {(status) => {\n                    return (\n                      <div\n                        className={`lyric-box fade fade-${status}`}\n                        onClick={() => this.handleClickLyric()}\n                      >\n                        {lyricContent ? (\n                          <div \n                            className=\"lyric\"\n                            style={{\n                              transition: 'transform 0.35s ease-out 0s',\n                              transform: `translateY(${translateY}px)`,\n                            }}\n                          >\n                            {lyricContent}\n                          </div>\n                        ) : (\n                          <p className=\"no-lyric\">暂无歌词</p>\n                        )}\n                      </div>\n                    );\n                  }}\n                </Transition>\n              </div>\n\n              <div className=\"btm-wrapper\">\n                <div className=\"progress-wrapper\">\n\n                  <p className=\"time time-cur\">{curTime}</p>\n                  \n                  <Slider\n                    style={{\n                      marginLeft: 12,\n                      marginRight: 12,\n                      paddingTop: 22,\n                      paddingBottom: 24,\n                    }}\n                    defaultValue={0}\n                    min={0}\n                    max={100}\n                    step={0.1}\n                    value={progress}\n                    handleStyle={{\n                      marginLeft: '-8px',\n                      marginTop: '-7px',\n                      width: '16px',\n                      height: '16px',\n                      border: 'none',\n                    }}\n                    trackStyle={{\n                      backgroundColor: '#ffd426'\n                    }}\n                    railStyle={{\n                      backgroundColor: 'rgba(225,225,225, 0.4)'\n                    }}\n                    onChange={(value) => {\n                      pause();\n                      changeProgressHandler(value);\n                    }}\n                    onAfterChange={(curVal) => {\n                      afterChangeProgressHandler(curVal);\n                      play(curSongIndex);\n                    }}\n                  />\n\n                  <p className=\"time time-dur\">{duration}</p>\n                </div>\n\n                <div className=\"operators\">\n                  <div\n                    className={`btn ${mode}-icon`}\n                    onClick={clickModeBtnHandler}\n                  ></div>\n                  <div\n                    className=\"btn prev-icon\"\n                    onClick={clickPrevBtnHandler}\n                  ></div>\n                  <div\n                    className={`btn ${isPauseIcon ? 'pause' : 'play'}-icon`}\n                    onClick={clickPlayPauseHandler}\n                  ></div>\n                  <div\n                    className=\"btn next-icon\"\n                    onClick={clickNextBtnHandler}\n                  ></div>\n                  <div\n                    className=\"btn list-icon\"\n                    onClick={togglePlayingList}\n                  ></div>\n                </div>\n              </div>\n\n              <div className=\"background\">\n                <img \n                  width=\"100%\"\n                  height=\"100%\"\n                  src={imgSrc}\n                />\n              </div>\n            </div>\n\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default FullPlayer;","import React from 'react';\nimport { List } from 'antd-mobile';\n\nimport PlayerContext from '../../context/PlayerContext';\n\nimport './PlayingList.less';\n\nconst Item = List.Item;\n\nclass PlayingList extends React.Component {\n  render() {\n    const { transitionClass, togglePlayingList } = this.props;\n    \n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, play, deleteSong, clearPlaylist }) => {\n          const {\n            playingList,\n            curSongIndex,\n          } = playerState;\n\n          const extraClearBtn = (\n            <div\n              className=\"btn delete-icon\"\n              onClick={() => clearPlaylist()}\n            ></div>\n          );\n\n          const listItemArr = playingList.map((song, idx) => {\n            const {\n              id,\n              name,\n              artists,\n            } = song;\n    \n            const extraCloseBtn = (\n              <div\n                className=\"btn close-icon\"\n                onClick={(ev) => {\n                  ev.stopPropagation();\n                  deleteSong(idx);\n                }}\n              ></div>\n            );\n\n            return (\n              <Item \n                key={id}\n                className={`${curSongIndex === idx ? 'active-song' : ''}`}\n                extra={extraCloseBtn}\n                onClick={() => play(idx)}\n              >\n                {name}\n                <span className=\"song-artists-alb\">\n                  {' - ' + artists.map(val => val.name).join('/')}\n                </span>\n              </Item>\n            );\n          });\n\n          return (\n            <div \n              className={`playing-list ${transitionClass}`}\n              onTouchStart={(ev) => ev.stopPropagation()}\n            >\n              <Item\n                extra={extraClearBtn}\n                multipleLine\n              >\n                播放列表\n                <span className=\"song-num\">\n                  共({playingList.length})首\n                </span>\n              </Item>\n              <List>\n                {listItemArr}\n              </List>\n              <Item\n                className=\"close-btn\"\n                onClick={togglePlayingList}\n                multipleLine\n              >\n                关闭\n              </Item>\n            </div>\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default PlayingList;","import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport l_lang from 'lodash/lang';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport MiniPlayer from '../MiniPlayer/MiniPlayer.jsx';\nimport FullPlayer from '../FullPlayer/FullPlayer.jsx';\nimport PlayingList from '../PlayingList/PlayingList.jsx';\n\n// import './Player.less';\n\nclass Player extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modeIndex: 0,\n      duration: '00:00',\n      curTime: '00:00',\n      playProgress: '0',\n      curTimestamp: 0, // 歌词相关\n      isPauseIcon: false,\n      // showMiniplayer: false,\n      showFullplayer: false,\n      showPlayingList: false,\n    };\n    this.audioRef = React.createRef();\n    this.handleChangeProgress = this.handleChangeProgress.bind(this);\n    this.handleAfterChangeProgress = this.handleAfterChangeProgress.bind(this);\n\n    this.curSongIndex = -1;\n    this.audioAmount = 0;\n    this.isPause = true; // 指示 进行播放还是暂停\n    this.songUrlApi = 'https://music.163.com/song/media/outer/url?id='; // ?id=350909 会返回一个重定向响应\n    this.currentSong = {};\n\n    this.playMode = [\n      {\n        desc: '列表循环',\n        className: 'loop',\n      },\n      {\n        desc: '单曲循环',\n        className: 'single',\n      },\n      {\n        desc: '随机播放',\n        className: 'random',\n      }\n    ];\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n    if (this.isNoAudio()) {\n      return;\n    }\n    if (this.isPause) {\n      if (!(this.audioRef.current.paused)) {\n        this.pauseAudio();\n      }\n    } else {\n      if (this.audioRef.current.paused) {\n        this.playAudio();\n      }\n    }\n  }\n\n  playAudio() {\n    this.audioRef.current.play().then(() => {\n      console.log('play.then');\n      this.setState({ isPauseIcon: true });\n    }, (reason) => {\n      console.log(reason);\n    });\n  }\n\n  pauseAudio() {\n    this.audioRef.current.pause();\n    this.setState({ isPauseIcon: false });\n  }\n\n  handleClickPlayPause(ev, funcPlay, funcPause) {\n    ev.stopPropagation();\n    if (this.isNoAudio()) {\n      return;\n    }\n    if (this.audioRef.current.paused) {\n      const index = this.curSongIndex;\n      funcPlay(index);\n    } else {\n      funcPause();\n    }\n  }\n\n  handleClickPrevBtn(funcPlay) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    this.setState({ playProgress: '0' });\n    const index = this.getIndex(true);\n    funcPlay(index);\n  }\n\n  handleClickNextBtn(funcPlay) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    this.setState({ playProgress: '0' });\n    const index = this.getIndex();\n    funcPlay(index);\n  }\n\n  handleClickModeBtn() {\n    if (this.isNoAudio()) {\n      return;\n    }\n    const nextIndex = (this.state.modeIndex + 1) % this.playMode.length;\n\n    this.audioRef.current.loop = nextIndex === 1;\n    this.setState({ modeIndex: nextIndex });\n  }\n\n  handleChangeProgress(value) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    const\n      prevCurTime = this.state.curTime,\n      duration = this.audioRef.current.duration;\n\n    const\n      curTimeStr = this.timeFormat(parseFloat((value / 100 * duration).toFixed(6))),\n      progress = `${value}%`;\n\n      if (prevCurTime !== curTimeStr) {\n        this.setState({\n          curTime: curTimeStr,\n          playProgress: progress,\n        });\n      } else {\n        this.setState({ playProgress: progress });\n      }\n  }\n\n  handleAfterChangeProgress(value) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    const audio = this.audioRef.current;\n    audio.currentTime = parseFloat((value / 100 * audio.duration).toFixed(6));\n  }\n\n  toggleFullplayer = () => {\n    this.setState(state => ({\n      showFullplayer: !state.showFullplayer\n    }));\n  }\n\n  togglePlayingList = (ev) => {\n    ev.stopPropagation();\n    this.setState(state => ({\n      showPlayingList: !state.showPlayingList\n    }));\n  }\n  \n  // audio\n  handleDurationChange() {\n    console.log('handleDurationChange');\n    this.setState({\n      duration: this.timeFormat(this.audioRef.current.duration),\n      playProgress: '0',\n      curTime: '00:00'\n    });\n  }\n\n  handleTimeUpdate() {\n    const\n      old = this.state.curTime,\n      duration = this.audioRef.current.duration,\n      currentTime = this.audioRef.current.currentTime;\n    \n    const\n      curTimeStr = this.timeFormat(currentTime),\n      progress = `${(currentTime / duration * 100).toFixed(2)}%`;\n  \n    if (old !== curTimeStr) {\n      this.setState({\n        curTime: curTimeStr,\n        playProgress: progress,\n        curTimestamp: currentTime,\n      });\n    } else {\n\n      if (currentTime === duration) {\n        this.setState({ \n          playProgress: progress,\n          curTimestamp: currentTime,\n        });\n      } else {\n        this.setState({ curTimestamp: currentTime });\n      }\n    }\n  }\n\n  handleEnded(funcPlay) {\n    const index = this.getIndex();\n    this.setState({ loadProgress: '0', playProgress: '0' });\n    funcPlay(index);\n  }\n\n  handleAudioError() {\n    const audioElem = this.audioRef.current;\n    console.log(audioElem.error);\n    \n    // TODO 完善无版权歌曲处理\n    if (audioElem.error.code === 2) {\n      audioElem.load();\n      audioElem.currentTime = parseFloat(this.state.playProgress) / 100;\n      console.log(this.state.playProgress);\n    }\n  }\n\n  // Util\n  isNoAudio() {\n    return (this.audioAmount === 0);\n  }\n\n  timeFormat(timeNum) {// mm:ss\n    const minutes = parseInt(`${timeNum / 60}`),  // 商\n          seconds = parseInt(`${timeNum % 60}`),  // 余数\n          minStr = minutes < 10 ? `0${minutes}` : `${minutes}`,\n          secStr = seconds < 10 ? `0${seconds}` : `${seconds}`;\n\n    return `${minStr}:${secStr}`;\n  }\n\n  getIndex(isPrev) {\n    if (isPrev === undefined) {\n      isPrev = false;\n    }\n    let index = 0;\n    switch (this.state.modeIndex) {\n      case 0:\n      case 1:\n        if (isPrev) {\n          index = (\n              this.curSongIndex - 1 + this.audioAmount\n            ) % this.audioAmount;\n        } else {\n          index = (this.curSongIndex + 1) % this.audioAmount;\n        }\n        break;\n      case 2:\n        index = parseInt(Math.random() * this.audioAmount);\n        break;\n      default:\n        break;\n    }\n    return index;\n  }\n\n  render() {\n    const { showFullplayer, showPlayingList } = this.state;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, play, pause, deleteSong, clearPlaylist }) => {\n          const {\n            playingList,\n            currentSong,\n            curSongIndex,\n            isPause,\n          } = playerState;\n\n          this.curSongIndex = curSongIndex;\n          this.audioAmount = playingList.length;\n          this.isPause = isPause;\n          this.currentSong = currentSong;\n          this.isToReset = l_lang.isEmpty(currentSong);\n\n          return (\n            <div className=\"audio-controls-panel\">\n              {/* music */}\n              <audio \n                ref={this.audioRef}\n                src={\n                  currentSong && currentSong.link ? `${this.songUrlApi}${currentSong.id}` : ''\n                }\n                onDurationChange={() => this.handleDurationChange()}\n                onTimeUpdate={() => this.handleTimeUpdate()}\n                onEnded={() => this.handleEnded(play)}\n                onError={() => this.handleAudioError()}\n              >\n              </audio>\n              \n              {/* mini full都用transition 包裹，currentSong为空时，做退出的效果。\n              且各自内部也对currentSong为空的情况做处理。 */}\n              <Transition\n                in={!this.isToReset}\n                timeout={150}\n                mountOnEnter\n                unmountOnExit\n              >\n                {(status) => {\n                  return (\n                    <MiniPlayer\n                      transitionClass={`slide-up slide-up-${status}`}\n                      curSong={currentSong}\n                      isPauseIcon={this.state.isPauseIcon}\n                      clickPlayPauseHandler={(ev) => this.handleClickPlayPause(ev, play, pause)}\n                      toggleFullplayer={this.toggleFullplayer}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n          \n              <Transition\n                in={this.isToReset ? false : showFullplayer}\n                timeout={250}\n                mountOnEnter\n                unmountOnExit\n                onExited={() => this.setState({showFullplayer: false})}\n              >\n                {(status) => {\n                  return (\n                    <FullPlayer\n                      transitionClass={`slide-up slide-up-${status}`}\n                      curSong={currentSong}\n                      playState={this.state}\n                      mode={this.playMode[this.state.modeIndex].className}\n                      clickPlayPauseHandler={(ev) => this.handleClickPlayPause(ev, play, pause)}\n                      clickPrevBtnHandler={() => this.handleClickPrevBtn(play)}\n                      clickNextBtnHandler={() => this.handleClickNextBtn(play)}\n                      clickModeBtnHandler={() => this.handleClickModeBtn()}\n                      changeProgressHandler={this.handleChangeProgress}\n                      afterChangeProgressHandler={this.handleAfterChangeProgress}\n                      toggleFullplayer={this.toggleFullplayer}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n              \n              {/* plp */}\n              <Transition\n                in={this.isToReset ? false : showPlayingList}\n                timeout={250}\n                mountOnEnter\n                unmountOnExit\n                onExited={() => this.setState({showPlayingList: false})}\n              >\n                {(status) => {\n                  return (\n                    <PlayingList\n                      transitionClass={`slide-up slide-up-${status}`}\n                      listData={playingList}\n                      curSongIndex={curSongIndex}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n            </div>\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Player;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport l_array from 'lodash/array';\n\nimport PlayerContext from './context/PlayerContext';\nimport PlaylistDetail from './components/PlaylistDetail/PlaylistDetail.jsx';\nimport Playlists from './components/Playlists/Playlists.jsx';\nimport Player from './components/Player/Player.jsx';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      playingList: [],\n      currentSong: {},\n      curSongIndex: -1,\n      isPause: true,\n      isLogin: false\n    };\n    // bind this to method\n    this.play = this.play.bind(this);\n    this.pause = this.pause.bind(this);\n    this.deleteSong = this.deleteSong.bind(this);\n    this.clearPlaylist = this.clearPlaylist.bind(this);\n    this.playAll = this.playAll.bind(this);\n    this.addAll = this.addAll.bind(this);\n    this.playSong = this.playSong.bind(this);\n    this.addSongToNext = this.addSongToNext.bind(this);\n  }\n\n  componentDidMount() {\n    const localData = window.localStorage.getItem('playData');\n    this.setState(JSON.parse(localData));\n  }\n\n  componentDidUpdate() {\n    const { playingList, currentSong, curSongIndex } = this.state;\n    window.localStorage.setItem('playData',JSON.stringify({ playingList, currentSong, curSongIndex }));\n  }\n\n  play(index) {\n    if (index >= 0) {\n      if (index === this.state.curSongIndex) {\n        if (this.state.isPause) {\n          this.setState({ isPause: false });\n        }\n      } else {\n        this.setState({\n          currentSong: this.state.playingList[index],\n          curSongIndex: index,\n          isPause: false,\n        });\n      } \n    }\n  }\n\n  pause() {\n    this.setState({ isPause: true });\n  }\n\n  // 删除歌曲\n  deleteSong(songIndex) {\n    const appState = this.state;\n\n    const playingList = appState.playingList;\n    let curSongIndex = appState.curSongIndex;\n\n    l_array.remove(playingList, (val, idx) => idx === songIndex);\n\n    if (playingList.length) {\n      \n      if (songIndex < curSongIndex) {\n        this.setState({\n          playingList: playingList,\n          curSongIndex: curSongIndex - 1,\n        });\n      } else if (songIndex === curSongIndex) {\n\n        curSongIndex = songIndex === playingList.length ? 0 : songIndex;\n\n        this.setState({\n          playingList: playingList,\n          currentSong: playingList[curSongIndex],\n          curSongIndex: curSongIndex,\n          isPause: false,\n        });\n      } else {\n        this.setState({ playingList: playingList });\n      }\n      \n    } else {\n      this.clearPlaylist();\n    }\n  }\n\n  clearPlaylist() {\n    this.setState({\n      playingList: [],\n      currentSong: {},\n      curSongIndex: -1,\n      isPause: true,\n    });\n  }\n\n  playAll(songlist) {\n    this.setState({\n      playingList: songlist,\n      curSongIndex: -1,\n    }, () => this.play(0));\n  }\n\n  addAll(songlist) {\n    const playingList = this.state.playingList;\n\n    if (playingList.length) {\n\n      // 歌单间重复的歌曲也被去重了\n      const songToAdd = l_array.differenceBy(songlist, playingList, 'id');\n      console.log(songToAdd);\n\n      if (songToAdd.length) {\n        // 这一行直接以非 setState 的方式对 this.state 做了修改\n        playingList.splice(this.state.curSongIndex + 1, 0, ...songToAdd);\n        // 这一行只是单纯地要触发 render\n        this.setState({ playingList: playingList });\n      }\n    } else {\n      this.playAll(songlist);\n    }\n  }\n  // 添加并播放单首歌曲\n  playSong(song) {\n    const appState = this.state;\n    const playingList = appState.playingList;\n    const curSongIndex = appState.curSongIndex;\n    const indexToInsert = curSongIndex + 1;\n\n    if (playingList.length) {// 播放列表不为空\n\n      const matchedSongIdx = l_array.findIndex(playingList, ['id', song.id]);\n  \n      // 已有这首歌\n      if (matchedSongIdx !== -1) {\n        \n        if (matchedSongIdx === curSongIndex) {// 且为正在播放的歌\n          // 直接播放这首歌\n          this.play(matchedSongIdx);\n\n        } else if (matchedSongIdx < curSongIndex) {// 在正在播放的歌之前\n          // 添加到正播放的歌的后面\n          playingList.splice(indexToInsert, 0, song);\n          // 从原位置移除\n          playingList.splice(matchedSongIdx, 1);\n          // 更新 ui\n          this.setState({\n            playingList: playingList,\n            curSongIndex: curSongIndex - 1,\n          }, () => this.play(indexToInsert - 1));\n\n        } else {// 在正在播放的歌之后\n          // 从原位置移除\n          playingList.splice(matchedSongIdx, 1);\n          // 添加到正播放的歌的后面\n          playingList.splice(indexToInsert, 0, song);\n          // 更新 ui\n          this.setState({ playingList: playingList }, () => this.play(indexToInsert));\n        }\n\n      } else {// 没有这首歌\n        // 添加到正播放的歌的后面\n        playingList.splice(indexToInsert, 0, song);\n        console.log(playingList);\n        // 更新 ui\n        this.setState({ playingList: playingList }, () => this.play(indexToInsert));\n      }\n\n    } else {// 播放列表为空\n      this.setState({ playingList: [song] }, () => this.play(indexToInsert));\n    }\n  }\n  // 下一首播放\n  addSongToNext(song) {\n    const appState = this.state;\n    const playingList = appState.playingList;\n    const curSongIndex = appState.curSongIndex;\n    const indexToInsert = curSongIndex + 1;\n\n    if (playingList.length) {// 播放列表不为空\n\n      const matchedSongIdx = l_array.findIndex(playingList, ['id', song.id]);\n  \n      // 已有这首歌\n      if (matchedSongIdx !== -1) {\n        \n        if (matchedSongIdx === curSongIndex) {// 且为正在播放的歌\n          // 直接播放这首歌\n          this.play(matchedSongIdx); \n\n        } else if (matchedSongIdx < curSongIndex) {// 在正在播放的歌之前\n          // 添加到正播放的歌的后面\n          playingList.splice(indexToInsert, 0, song);\n          // 从原位置移除\n          playingList.splice(matchedSongIdx, 1);\n          // 更新 ui\n          this.setState({\n            playingList: playingList,\n            curSongIndex: curSongIndex - 1,\n          });\n\n        } else {// 在正在播放的歌之后\n          // 从原位置移除\n          playingList.splice(matchedSongIdx, 1);\n          // 添加到正播放的歌的后面\n          playingList.splice(indexToInsert, 0, song);\n          // 更新 ui\n          this.setState({ playingList: playingList });\n        }\n\n      } else {// 没有这首歌\n        // 添加到正播放的歌的后面\n        playingList.splice(indexToInsert, 0, song);\n        // 更新 ui\n        this.setState({ playingList: playingList });\n      }\n\n    } else {// 播放列表为空\n      this.setState({ playingList: [song] }, () => this.play(0));\n    }\n\n  }\n  // render\n  render() {\n    return (\n      <Router>\n        <PlayerContext.Provider \n          value={{\n            playerState: this.state,\n            play: this.play,\n            pause: this.pause,\n            deleteSong: this.deleteSong,\n            clearPlaylist: this.clearPlaylist,\n            playAll: this.playAll,\n            addAll: this.addAll,\n            playSong: this.playSong,\n            addSongToNext: this.addSongToNext,\n          }}\n        >\n          <Switch>\n            <Route exact path=\"/\" component={Playlists}/>\n            <Route path=\"/playlist\" component={PlaylistDetail}/>\n          </Switch>\n\n          <Player />\n          \n        </PlayerContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cover-placeholder.d45643b2.png\";"],"sourceRoot":""}