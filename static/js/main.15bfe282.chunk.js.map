{"version":3,"sources":["components/PlaylistDetail/images/playall.png","context/PlayerContext.js","components/PlaylistCover/PlaylistCover.jsx","components/PlaylistDetail/PlaylistDetail.jsx","components/Loading/Loading.jsx","components/Search/Search.jsx","components/Slide/Slide.jsx","components/BannerSlider/BannerSlider.jsx","components/Playlists/Playlists.jsx","components/MiniPlayer/MiniPlayer.jsx","components/FullPlayer/FullPlayer.jsx","components/PlayingList/PlayingList.jsx","components/Player/Player.jsx","App.jsx","serviceWorker.js","index.js","images/cover-placeholder.png"],"names":["module","exports","__webpack_require__","p","context","React","createContext","PlaylistCover","_this$props","this","props","src","style","playCount","react_default","a","createElement","className","alt","Component","Item","list_default","PlaylistDetail","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initScroll","SWrapperRef","current","scroll","BScroll","bounce","refreshScroll","refresh","destroyScroll","destroy","getPldData","pldUrl","concat","process","plID","window","fetch","then","response","statusText","json","data","setState","plDetail","catch","reason","console","log","state","createRef","funcPlayallOrAddall","_","cloneDeep","songlist","ev","funcPlaySong","songIndex","stopPropagation","_this2","location","history","search","split","hasOwnProperty","_this$state$plDetail","coverUrl","title","author","songNum","playNum","parseInt","PlayerContext","Consumer","_ref","playerState","playAll","playSong","addAll","listItemArr","map","song","idx","id","name","artists","album","artistsTitle","artist","join","key","activeStyle","backgroundColor","onClick","handlePlaySong","nav_bar_default","icon","icon_default","type","onLeftClick","goBack","ref","playingList","length","paddingBottom","components_PlaylistCover_PlaylistCover","width","height","avatarUrl","handleClickPlayallOrAddall","PlayIcon","backgroundImage","Loading","Brief","Search","submit","value","showSearchKeywordBox","showSearchResultBox","isLoading","historyKws","historyKeywords","cpHistoryKws","slice","push","uniqCpHistoryKws","uniq","localStorage","setItem","JSON","stringify","searchApi","encoded","encodeURI","method","headers","Accept","mode","status","resultData","Body","pic","link","picUrl","searchResult","change","keyword","clear","focus","showSearchBox","cancel","handleClickKeyword","val","target","textContent","clearHistoryKeywords","removeItem","hotKeywords","getItem","parse","_this$state","resultContent","Search_Item","multipleLine","textAlign","search_bar_default","manualFocusInst","cancelText","placeholder","onSubmit","onChange","onClear","onFocus","onBlur","onCancel","react_transition_group","in","timeout","mountOnEnter","unmountOnExit","kw","components_Loading_Loading","Slide","update","slide","init","_setSlideWidth","prev","next","clearTimeout","timer","currentPageIndex","showDot","_initDots","_initSlide","autoPlay","_play","isResize","children","slideGroupRef","slideWidth","slideRef","clientWidth","i","child","addClass","loop","threshold","scrollX","scrollY","momentum","snap","speed","click","on","_onScrollEnd","pageIndex","getCurrentPage","pageX","dots","Array","setInterval","interval","hasClass","el","RegExp","test","newClass","addEventListener","enabled","resizeTimer","setTimeout","isInTransition","defaultProps","BannerSlider","banners","components_Slide_Slide","Playlists","rcmdPlaylists","homeLink","playlists","getPlaylists","bind","assertThisInitialized","curPage","plsUrl","rcmdlist","playlist","Link","to","position","top","left","allPlContent","Playlists_Item","thumb","Playlists_Brief","Fragment","components_Search_Search","components_BannerSlider_BannerSlider","renderHeader","MiniPlayer","transitionClass","curSong","isPauseIcon","clickPlayPauseHandler","toggleFullplayer","togglePlayingList","extraContent","contentItem","isEmpty","MiniPlayer_Item","extra","imgSrc","includes","CoverPlaceholder","MiniPlayer_Brief","FullPlayer","getLyric","lrcUrl","songId","text","lrcArr","lyric","timestampArr","forEach","lrc","matchPart","match","timestampParts","trim","timestamp","parseFloat","isNaN","curLyricIndex","handleClickLyric","showCover","showLyric","handleClickCover","diffSong","playState","clickPrevBtnHandler","clickNextBtnHandler","clickModeBtnHandler","changeProgressHandler","afterChangeProgressHandler","duration","curTime","playProgress","curTimestamp","navBarTitleCnt","lyricContent","translateY","maxTranslateY","findLastIndex","lrcCls","progress","play","pause","curSongIndex","transition","transform","slider_default","marginLeft","marginRight","paddingTop","defaultValue","min","max","step","handleStyle","marginTop","border","trackStyle","railStyle","onAfterChange","curVal","PlayingList","deleteSong","clearPlaylist","extraClearBtn","extraCloseBtn","PlayingList_Item","onTouchStart","Player","showFullplayer","showPlayingList","modeIndex","audioRef","handleChangeProgress","handleAfterChangeProgress","audioAmount","isPause","songUrlApi","currentSong","playMode","desc","isNoAudio","paused","pauseAudio","playAudio","funcPlay","funcPause","getIndex","nextIndex","prevCurTime","curTimeStr","timeFormat","toFixed","audio","currentTime","old","index","loadProgress","audioElem","error","code","load","timeNum","minutes","seconds","minStr","secStr","isPrev","undefined","Math","random","_this3","isToReset","l_lang","onDurationChange","handleDurationChange","onTimeUpdate","handleTimeUpdate","onEnded","handleEnded","onError","handleAudioError","components_MiniPlayer_MiniPlayer","handleClickPlayPause","onExited","components_FullPlayer_FullPlayer","handleClickPrevBtn","handleClickNextBtn","handleClickModeBtn","components_PlayingList_PlayingList","listData","App","isLogin","addSongToNext","localData","appState","l_array","remove","songToAdd","differenceBy","splice","apply","toConsumableArray","indexToInsert","matchedSongIdx","findIndex","_this4","HashRouter","Provider","Switch","Route","exact","path","component","components_Player_Player","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15bfe282.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/playall.8f22f49d.png\";","import React from 'react';\n\nconst context = React.createContext();\nexport default context;\n","import React from 'react';\n\nimport './PlaylistCover.less';\n\nclass PlaylistCover extends React.Component {\n  render() {\n    const { src, style, playCount } = this.props;\n\n    return (\n      <div className=\"pl-cover\" style={style}>\n        <img \n          className=\"cover\" \n          src={src}\n          alt=\"cover\"\n        />\n        <span className=\"u-earp play-num\">{playCount}</span>\n      </div>\n    );\n  }\n}\n\nexport default PlaylistCover;","import React from 'react';\nimport { NavBar, Icon, List } from 'antd-mobile';\nimport BScroll from 'better-scroll';\n\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport PlayIcon from './images/playall.png';\nimport PlaylistCover from '../PlaylistCover/PlaylistCover.jsx';\n\nimport './PlaylistDetail.less';\n\nconst Item = List.Item;\n\nclass PlaylistDetail extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      plDetail: {}\n    };\n    this.plID = '';\n\n    this.SWrapperRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.initScroll();\n    // window.setTimeout(this.getPldData, 100);\n    this.getPldData();\n  }\n\n  componentDidUpdate() {\n    this.refreshScroll();\n  }\n\n  componentWillUnmount() {\n    this.scroll && this.scroll.destroy();\n  }\n  \n  initScroll = () => {\n    if (!this.SWrapperRef.current) {\n      return;\n    }\n\n    this.scroll = new BScroll(this.SWrapperRef.current, {\n      bounce: false,\n    });\n  }\n\n  refreshScroll = () => {\n    this.scroll && this.scroll.refresh();\n  }\n\n  destroyScroll = () => {\n    this.scroll.destroy();\n  }\n\n  getPldData = () => {\n    // p0 页数 可变\n    const pldUrl = `${\n      process.env.PUBLIC_URL\n    }/api_mock_data/playlist_detail/all/pl-${this.plID}.json`;\n  \n    window.fetch(pldUrl).then(\n      response => response.statusText === 'OK' ? response.json() : {}\n    ).then(\n      data => {\n        this.setState({ plDetail: data });\n      }\n    ).catch(\n      reason => console.log(reason)\n    );\n  }\n\n  handleClickPlayallOrAddall(funcPlayallOrAddall) {\n    const songlist = _.cloneDeep(this.state.plDetail.songlist);\n    funcPlayallOrAddall(songlist);\n  }\n\n  handlePlaySong(ev, funcPlaySong, songIndex) {\n    ev.stopPropagation();\n    funcPlaySong(_.cloneDeep(this.state.plDetail.songlist[songIndex]));\n  }\n\n  render() {\n    const { location, history } = this.props\n    this.plID = location.search.split('=')[1];\n\n    if (this.state.plDetail.hasOwnProperty('id')) {\n      \n      const {\n        coverUrl,\n        title,\n        author,\n        songNum,\n        playNum,\n        songlist,\n      } = this.state.plDetail;\n  \n      const playCount = playNum >= 10000 ? `${parseInt(playNum / 10000)}万` : playNum;\n\n      \n      return (\n        <PlayerContext.Consumer>\n          {({ playerState, playAll, addAll, playSong }) => {\n\n            const listItemArr = songlist.map((song, idx) => {\n              const {\n                id,\n                name,\n                artists,\n                album,\n              } = song;\n      \n              let artistsTitle = artists.map(\n                artist => artist.name\n              ).join('/');\n      \n              return (\n                <Item \n                  key={id}\n                  className=\"mty-list-item\"\n                  activeStyle={{\n                    backgroundColor: '#ccc'\n                  }}\n                  onClick={(ev) => {this.handlePlaySong(ev, playSong, idx)}}\n                >\n                  <div className=\"s-index\">{idx + 1}</div>\n                  <div className=\"s-detail-wrap\">\n                    <div className=\"s-info\">\n                      <div className=\"s-name f-thide\">\n                        {name}\n                      </div>\n                      <div className=\"s-artists-alb f-thide\">\n                        {artistsTitle} - {album.name}\n                      </div>\n                    </div>\n                  </div>\n                </Item>\n              );\n            });\n\n            return (\n              <div className=\"PlaylistDetail\">\n                <NavBar\n                  className=\"my-pld-navbar\"\n                  icon={<Icon type=\"left\"/>}\n                  onLeftClick={() => history.goBack()}\n                >\n                  歌单\n                </NavBar>\n                \n                <div \n                  ref={this.SWrapperRef}\n                  className=\"scroll-wrapper\"\n                  style={playerState.playingList.length ? {paddingBottom: '56px'} : {paddingBottom: '0px'}}\n                >\n                  <div className=\"scroll-content\">\n\n                    {/* info sec 可抽出为容器组件 */}\n                    <section className=\"my-plinfo-wrap\">\n                      <PlaylistCover\n                        src={`${coverUrl}?param=512y512`}\n                        style={{\n                          width: '1.12rem',\n                          height: '1.12rem',\n                        }}\n                        playCount={playCount}\n                      />\n\n                      {/* intro */}\n                      <div className=\"plinfo-right\">\n                        <h2 className=\"f-brk title\">\n                          {title}\n                        </h2>\n                        <div className=\"author f-thide\">\n                          <div className=\"avatar\">\n                            <img src={author.avatarUrl} alt=\"ava\" />\n                          </div>\n                          {author.name}\n                        </div>\n                      </div>\n                    </section>\n                    \n                    {/* plyall btn */}\n                    <div className=\"playall-btn-wrapper\">\n                      <Item \n                        className=\"mty-list-item\"\n                        activeStyle={{\n                          backgroundColor: '#ddd'\n                        }}\n                        onClick={() => {this.handleClickPlayallOrAddall(playAll)}}\n                      > \n                        <div className=\"playall-btn\">\n                          <img \n                            src={PlayIcon} \n                            alt=\"playicon\"\n                          />\n                          <span>播放全部</span>\n                          <span className=\"song-num\">\n                            共({songNum})首\n                          </span>\n                        </div>\n                      </Item>\n                    </div>\n                    {/* song list */}\n                    <List>\n                      {listItemArr}\n                    </List>\n\n                  </div>\n                </div>\n\n                {/* 模糊背景 可抽出为组件 */}\n                <div className=\"bg-wrap\">\n                  <div \n                    className=\"fullscreen-blur-bg\" \n                    style={{\n                      backgroundImage: `url(${coverUrl}?param=512y512)`\n                    }}\n                  >\n                  </div>\n                </div>\n              </div>\n            );\n          }}\n        </PlayerContext.Consumer>\n      );\n\n    } else {\n      // TODO 占位符元素\n      return (\n        <div></div>\n        // <Loading key=\"loading\"/>\n      );\n    }\n  }\n}\n\nexport default PlaylistDetail;","import React from 'react';\nimport './Loading.less';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <i className=\"loading-icon\"></i>\n        <p className=\"loading-text\">正在加载</p>\n      </div>\n    );\n  }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { SearchBar, List } from 'antd-mobile';\nimport { Transition } from 'react-transition-group';\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport Loading from '../Loading/Loading';\nimport './Search.less';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: '',\n      hotKeywords: ['起风了', 'A妹新专辑', '有可能的夜晚', '出山', '流浪地球', 'Counting Sheep', '空心', '水星记', '东西', '梦龙'],\n      historyKeywords: [],\n      searchResult: [],\n      showSearchBox: false,\n      showSearchKeywordBox: false,\n      showSearchResultBox: false,\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    const historyKeywords = window.localStorage.getItem('historyKeywords');\n    if (historyKeywords) {\n      this.setState({ historyKeywords: JSON.parse(historyKeywords) });\n    }\n  }\n\n  submit = (value) => {\n    if (value) {\n      \n      // set loading\n      this.setState({\n        showSearchKeywordBox: false,\n        showSearchResultBox: true,\n        isLoading: true,\n      });\n  \n      // set localstorage\n      const historyKws = this.state.historyKeywords;\n      let cpHistoryKws = [];\n      if (historyKws && historyKws.length) {\n        cpHistoryKws = historyKws.slice(0);\n        cpHistoryKws.push(value);\n      } else {\n        cpHistoryKws.push(value);\n      }\n      const uniqCpHistoryKws = _.uniq(cpHistoryKws);\n      window.localStorage.setItem('historyKeywords', JSON.stringify(uniqCpHistoryKws));\n      // console.log(cpHistoryKws);\n  \n      // req, url encode?\n      const searchApi = `https://api.mlwei.com/music/api/wy/?key=523077333&id=${value}&type=so&cache=0&nu=60`;\n      \n      const encoded = encodeURI(searchApi);\n      // console.log(encoded);\n      window.fetch(\n        encoded,\n        {\n          method: 'GET',\n          headers: {\n            'Accept': '*'\n          },\n          mode: 'cors'\n        }\n      ).then(\n        response => {\n          // console.log(response);\n          return response.status === 200 ? response.json() : {};\n        }\n      ).then(\n        data => {\n          // console.log('data',data);\n          let resultData = [];\n          if (data.Body) {\n            \n            resultData = data.Body.map(song => {\n              const { author, id, pic, title } = song;\n              return {\n                id: id,\n                link: `/song?id=${id}`,\n                name: title,\n                artists: [{name: author}],\n                album: {picUrl: pic}\n              };\n            });\n          }\n          // console.log('resultData',resultData);\n          this.setState({\n            historyKeywords: uniqCpHistoryKws,\n            searchResult: resultData,\n            isLoading: false,\n          });\n        }\n      ).catch(\n        reason => {\n          console.log(reason);\n          this.setState({\n            historyKeywords: cpHistoryKws,\n            isLoading: false,\n          });\n        }\n      );\n    }\n  }\n\n  change= (value) => {\n    this.setState({ keyword: value });\n  }\n\n  clear = () => {\n    // unshow result/ show search-keyword-box\n    this.setState({ keyword: '' });\n  }\n\n  focus = () => {\n    // show search-keyword-box\n    console.log('focus');\n    this.setState({\n      showSearchBox: true,\n      showSearchKeywordBox: true,\n      showSearchResultBox: false,\n      isLoading: false,\n    });\n  }\n\n  cancel = () => {\n    // unshow search-keyword-box/result\n    this.setState({\n      keyword: '',\n      showSearchBox: false,\n      showSearchKeywordBox: false,\n      showSearchResultBox: false,\n      isLoading: false,\n    })\n  }\n\n  handlePlaySong = (ev, funcPlaySong, songIndex) => {\n    ev.stopPropagation();\n    funcPlaySong(_.cloneDeep(this.state.searchResult[songIndex]));\n  }\n\n  handleClickKeyword = (ev) => {\n    ev.stopPropagation();\n    // this.manualFocusInst.focus();\n    const val = ev.target.textContent;\n    console.log(val);\n    if (ev.target.className === 'item') {\n      this.setState({ keyword: val });\n      this.submit(val);\n    }\n  }\n\n  clearHistoryKeywords = (ev) => {\n    ev.stopPropagation();\n    window.localStorage.removeItem('historyKeywords');\n    this.setState({ historyKeywords: [] });\n  }\n\n  render() {\n    const {\n      hotKeywords,\n      historyKeywords,\n      searchResult,\n      showSearchBox,\n      showSearchKeywordBox,\n      showSearchResultBox,\n      isLoading,\n    } =this.state;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playSong }) => {\n          let resultContent;\n          if (searchResult && searchResult.length) {\n            resultContent = searchResult.map((song, idx) => {\n      \n              const { id, name, artists } = song;\n        \n              return (\n                <Item \n                  key={id}\n                  className=\"result-list-item\"\n                  activeStyle={{ backgroundColor: '#ccc' }}\n                  onClick={(ev) => {this.handlePlaySong(ev, playSong, idx)}}\n                  multipleLine\n                >\n                  {name}\n                  <Brief>{artists.map(val => val.name).join('/')}</Brief>\n                </Item>\n              );\n            });\n      \n          } else {\n            resultContent = (\n              <div style={{height:'100vh',textAlign: 'center'}}>网络出了点问题</div>\n            );\n          }\n\n          return (\n            <div className=\"my-search\">\n              <SearchBar\n                ref={ref => this.manualFocusInst = ref}\n                value={this.state.keyword}\n                cancelText=\"返回\"\n                placeholder=\"Search\"\n                onSubmit={this.submit}\n                onChange={this.change}\n                onClear={this.clear}\n                onFocus={this.focus}\n                onBlur={() => console.log('onBlur')}\n                onCancel={this.cancel}\n              />\n              \n              {showSearchBox ? (\n                <div className=\"search-box\">\n                  {/* hot history */}\n                  <Transition\n                    in={showSearchKeywordBox}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    // onExited={() => this.setState({showSearchKeywordBox: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div\n                          className={`search-keyword-box fade fade-${status}`}\n                          onClick={(ev) => this.handleClickKeyword(ev)}\n                        >\n                          <div className=\"hot-keyword\">\n                            <h4 className=\"title\">热门搜索</h4>\n                            <ul>\n                              {hotKeywords.map((kw, idx) => (\n                                <li\n                                  key={idx}\n                                  className=\"item\"\n                                >\n                                  {kw}\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                          {historyKeywords.length > 0 ? (\n                            <div className=\"history-keyword\">\n                              <h4 className=\"title\">\n                                搜索历史\n                                <i\n                                  className=\"delete-btn\"\n                                  onClick={(ev) => this.clearHistoryKeywords(ev)}\n                                ></i>\n                              </h4>\n                              <ul>\n                                {historyKeywords.map((kw, idx) => (\n                                  <li\n                                    key={idx}\n                                    className=\"item\"\n                                  >\n                                    {kw}\n                                  </li>\n                                ))}\n                              </ul>\n                            </div>\n                          ) : null}\n                        </div>\n                      );\n                    }}\n                  </Transition>\n\n                  {/* result */}\n                  <Transition\n                    in={showSearchResultBox}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    // onExited={() => this.setState({showSearchResultBox: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div className={`search-result-box fade fade-${status}`}>\n                          {isLoading ? (\n                            <Loading />\n                          ) : (\n                            <List>{resultContent}</List>\n                          )}\n                        </div>\n                      );\n                    }}\n                  </Transition>\n                  {/* loading */}\n                  {/* <Transition\n                    in={isLoading}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    onExited={() => this.setState({isLoading: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div className={`search-loading-box fade fade-${status}`}>\n                          <Loading />\n                        </div>\n                      );\n                    }}\n                  </Transition> */}\n                </div>\n              ) : null}\n\n            </div>\n            \n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport BScroll from 'better-scroll';\n\nimport './Slide.less';\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      dots: [],\n      currentPageIndex: 0,\n    }\n    this.slideRef = React.createRef()\n    this.slideGroupRef = React.createRef()\n  }\n\n  componentDidMount() {\n    this.update()\n\n    window.addEventListener('resize', () => {\n      if (!this.slide || !this.slide.enabled) {\n        return\n      }\n      window.clearTimeout(this.resizeTimer)\n      this.resizeTimer = window.setTimeout(() => {\n        if (this.slide.isInTransition) {\n          this._onScrollEnd()\n        } else {\n          if (this.props.autoPlay) {\n            this._play()\n          }\n        }\n        this.refresh()\n      }, 60)\n    })\n  }\n  componentWillMount() {\n    // this.slide.disable()\n    window.clearTimeout(this.timer)\n  }\n  // methods: \n  update = () => {\n    if (this.slide) {\n      this.slide.destroy()\n    }\n    this.init()\n  }\n  refresh = () => {\n    this._setSlideWidth(true)\n    this.slide.refresh()\n  }\n  prev = () => {\n    this.slide.prev()\n  }\n  next = () => {\n    this.slide.next()\n  }\n  init = () => {\n    window.clearTimeout(this.timer)\n    this.setState({currentPageIndex: 0})\n    this._setSlideWidth()\n    if (this.props.showDot) {\n      this._initDots()\n    }\n    this._initSlide()\n    if (this.props.autoPlay) {\n      this._play()\n    }\n  }\n  _setSlideWidth = (isResize) => {\n    this.children = this.slideGroupRef.current.children\n    let width = 0\n    let slideWidth = this.slideRef.current.clientWidth\n    for (let i = 0; i < this.children.length; i++) {\n      let child = this.children[i]\n      this.addClass(child, 'slide-item')\n      child.style.width = slideWidth + 'px'\n      width += slideWidth\n    }\n    if (this.props.loop && !isResize) {\n      width += 2 * slideWidth\n    }\n    this.slideGroupRef.current.style.width = width + 'px'\n  }\n  _initSlide = () => {\n    console.log(this.props.threshold)\n    this.slide = new BScroll(this.slideRef.current, {\n      scrollX: true,\n      scrollY: false,\n      momentum: false,\n      snap: {\n        loop: this.props.loop,\n        threshold: this.props.threshold,\n        speed: this.props.speed\n      },\n      bounce: false,\n      stopPropagation: true,\n      click: this.props.click\n    })\n    this.slide.on('scrollEnd', this._onScrollEnd)\n    this.slide.on('touchEnd', () => {\n      if (this.props.autoPlay) {\n        this._play()\n      }\n    })\n    this.slide.on('beforeScrollStart', () => {\n      if (this.props.autoPlay) {\n        window.clearTimeout(this.timer)\n      }\n    })\n  }\n  _onScrollEnd = () => {\n    let pageIndex = this.slide.getCurrentPage().pageX\n    this.setState({currentPageIndex: pageIndex})\n    if (this.autoPlay) {\n      this._play()\n    }\n  }\n  _initDots = () => {\n    let dots = new Array(this.children.length)\n    for (let idx = 0; idx < dots.length; idx++) {\n      dots[idx] = idx;\n    }\n    this.setState({dots: dots})\n  }\n  _play = () => {\n    window.clearTimeout(this.timer)\n    this.timer = window.setInterval(() => {\n      this.slide.next()\n    }, this.props.interval)\n  }\n  // common method dom\n  hasClass = (el, className) => {\n    let reg = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)')\n    return reg.test(el.className)\n  }\n  \n  addClass = (el, className) => {\n    if (this.hasClass(el, className)) {\n      return\n    }\n  \n    let newClass = el.className.split(' ')\n    newClass.push(className)\n    el.className = newClass.join(' ')\n  }\n\n  render() {\n    const { dots, currentPageIndex } = this.state;\n\n    return (\n      <div className=\"slide\" ref={this.slideRef}>\n        <div className=\"slide-group\" ref={this.slideGroupRef}>\n          {this.props.children}\n        </div>\n        {this.props.showDot ? (\n          <div className=\"dots\">\n            {dots.map((val, idx) => (\n              <span\n                key={idx}\n                className={\n                  `dot ${currentPageIndex === idx ? 'active':''}`\n                }\n              ></span>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nSlide.defaultProps = {\n  loop: true,\n  autoPlay: true,\n  interval: 4000,\n  showDot: true,\n  click: true,\n  threshold: 0.3,\n  speed: 400,\n}\n\nexport default Slide;","import React, { Component } from 'react';\nimport Slide from '../Slide/Slide';\n\nclass BannerSlider extends Component {\n  state = {\n    banners: [\n      'https://p1.music.126.net/PzonwsvcSEEsr-uhJXE2_g==/109951163871296308.jpg',\n      'https://p1.music.126.net/thHP6ooWw893Ccfk_iXG5w==/109951163866743145.jpg',\n      'https://p1.music.126.net/VO_0urbXu_PytHjhjfj4Zw==/109951163871298888.jpg',\n      'https://p1.music.126.net/kEGOOxh_p6H7UHKuOOFkFg==/109951163871789068.jpg',\n      'https://p1.music.126.net/wa7Oxq5yysZgGBvOlivwEg==/109951163871318124.jpg'\n    ]\n  }\n  render() {\n    const { banners } = this.state;\n\n    return (\n      <Slide>\n        {banners.map((val, idx) => (\n          <div key={idx}>\n            <img src={val} alt=\"banner\"/>\n          </div>\n        ))}\n      </Slide>\n    );\n  }\n}\n\nexport default BannerSlider;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List } from 'antd-mobile';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport './Playlists.less';\n// import Loading from '../Loading/Loading.jsx';\nimport Search from '../Search/Search';\nimport PlaylistCover from '../PlaylistCover/PlaylistCover.jsx';\nimport BannerSlider from '../BannerSlider/BannerSlider';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\n// TODO: 无限加载\nclass Playlists extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      rcmdPlaylists: [\n        {\n          \"id\": 2406347748,\n          \"coverUrl\": \"http://p2.music.126.net/tkQ6Zb_eBdUsFAeD6PM-2A==/109951163547241213.jpg\",\n          \"name\": \"2018全美音乐奖提名名单（AMAs）\",\n          \"link\": \"/playlist?id=2406347748\",\n          \"playCount\": \"126万\",\n          \"author\": {\n            \"name\": \"DoubleRainbow_\",\n            \"homeLink\": \"/user/home?id=3226705\"\n          }\n        }, {\n          \"id\": 2439954234,\n          \"coverUrl\": \"http://p2.music.126.net/dBdq_Rs_pexuA8GqkZLcKA==/109951163599919632.jpg\",\n          \"name\": \"听首情歌说唱 | 做个甜甜的梦\",\n          \"link\": \"/playlist?id=2439954234\",\n          \"playCount\": \"211万\",\n          \"author\": {\n            \"name\": \"章若楠nn\",\n            \"homeLink\": \"/user/home?id=640698142\"\n          }\n        }, {\n          \"id\": 2497731034,\n          \"coverUrl\": \"http://p2.music.126.net/AtlN3uAvGczoL-xQN7FTtQ==/109951163643083559.jpg\",\n          \"name\": \"初恋糖配料表：你的马尾辫和衬衫味道\",\n          \"link\": \"/playlist?id=2497731034\",\n          \"playCount\": \"542万\",\n          \"author\": {\n            \"name\": \"驴子鬼\",\n            \"homeLink\": \"/user/home?id=246029257\"\n          }\n        }, {\n          \"id\": 2390539027,\n          \"coverUrl\": \"http://p2.music.126.net/8BZpZdDiDZatIiQMJnoKyg==/109951163736178562.jpg\",\n          \"name\": \"那些超带感的英文歌曲~『一秒沦陷』\",\n          \"link\": \"/playlist?id=2390539027\",\n          \"playCount\": \"351万\",\n          \"author\": {\n            \"name\": \"Mysterious-Box\",\n            \"homeLink\": \"/user/home?id=1558934331\"\n          }\n        }, {\n          \"id\": 2554253084,\n          \"coverUrl\": \"http://p2.music.126.net/mP8ulkyTDGmoj6jlZ_sblQ==/109951163722284832.jpg\",\n          \"name\": \"Future Bass丨醉寻心涧跳动的梦幻电子⚡️\",\n          \"link\": \"/playlist?id=2554253084\",\n          \"playCount\": \"61万\",\n          \"author\": {\n            \"name\": \"Kirin电子站\",\n            \"homeLink\": \"/user/home?id=1489420441\"\n          }\n        }, {\n          \"id\": 2312165875,\n          \"coverUrl\": \"http://p2.music.126.net/Cl0-NpZ0ESTDjJ1HmZ33KA==/109951163460576279.jpg\",\n          \"name\": \"100首华语民谣，因为懂得才有共鸣\",\n          \"link\": \"/playlist?id=2312165875\",\n          \"playCount\": \"1107万\",\n          \"author\": {\n            \"name\": \"情思天鹅\",\n            \"homeLink\": \"/user/home?id=108952364\"\n          }\n        }\n      ],\n      playlists: [],\n    };\n    this.getPlaylists = this.getPlaylists.bind(this);\n    // this.diffPage = false;\n    this.curPage = 0;\n  }\n\n  componentDidMount() {\n    this.getPlaylists(this.curPage);\n  }\n\n  getPlaylists(pageIndex) {\n    const plsUrl = `${\n      process.env.PUBLIC_URL\n    }/api_mock_data/playlists/all/p${pageIndex}.json`;\n\n    window.fetch(plsUrl).then(\n      response => response.statusText === 'OK' ? response.json() : ''\n    ).then(\n      data => {\n        this.setState({ playlists: data });\n      }\n    ).catch(\n      reason => console.log(reason)\n    );\n  }\n\n  render() {\n    const { location, history } = this.props;\n    const { rcmdPlaylists, playlists } =this.state;\n\n    // tuijian gedan\n    const rcmdlist = rcmdPlaylists.map((playlist) => {\n      const {\n        id,\n        coverUrl,\n        name,\n        link,\n        playCount,\n      } = playlist;\n\n      // const plPath = link.split('?')[0];\n\n      return (\n        <Link \n          key={id}\n          className=\"pl-li\"\n          to={link}\n        >\n          <div className=\"cover-wrapper\">\n            <PlaylistCover\n              src={`${coverUrl}?param=250y250`}\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n              }}\n              playCount={playCount}\n            />\n          </div>\n          <p className=\"dec\">{name}</p>\n        </Link>\n      );\n    });\n    //  quanbu gedan\n    const allPlContent = playlists && playlists.map((playlist) => {\n      const {\n        id,\n        coverUrl,\n        name,\n        link,\n        playCount,\n        author,\n      } = playlist;\n\n      return (\n        <Item\n          key={id}\n          thumb={`${coverUrl}?param=512y512`}\n          onClick={() => history.push(link)}\n          multipleLine\n        >\n          {name} <Brief>{`${author.name} · ${playCount}次播放`}</Brief>\n        </Item>\n      );\n    });\n\n    return (\n      <PlayerContext.Consumer>\n        {({playerState}) => (\n          <React.Fragment>\n            <Search />\n            <div\n              className=\"playlists\"\n              style={playerState.playingList.length ? {paddingBottom: '56px'} : {paddingBottom: '0px'}}\n            >\n              <BannerSlider/>\n              <div key=\"cate\" className=\"pl-cat\">\n                推荐歌单\n              </div>\n              <div key=\"cvrlst\" className=\"pl-cvrlst\">\n                {rcmdlist}\n              </div>\n              {/* all pl */}\n              <List renderHeader={() => '全部歌单'}>\n                {allPlContent}\n              </List>\n            </div>\n          </React.Fragment>\n        )}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Playlists;\n","import React, { Component } from 'react';\nimport { List } from \"antd-mobile\";\n\nimport _ from 'lodash';\n\nimport CoverPlaceholder from '../../images/cover-placeholder.png';\nimport './MiniPlayer.less';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nclass MiniPlayer extends Component {\n\n  render() {\n    let {\n      transitionClass,\n      curSong,\n      isPauseIcon,\n      clickPlayPauseHandler,\n      toggleFullplayer,\n      togglePlayingList,\n    } = this.props;\n    // test\n    // curSong = {\n    //   \"id\": 437608773,\n    //   \"name\": \"无法长大\",\n    //   \"artists\": [{\n    //     \"name\": \"赵雷\",\n    //     \"link\": \"/artist?id=6731\"\n    //   }],\n    //   \"album\": {\n    //     \"name\": \"无法长大\",\n    //     \"link\": \"/album?id=34943558\",\n    //     \"picUrl\": \"http://p1.music.126.net/zy9EZ2dcsofYlVAn-nb-wA==/3412884129074161.jpg\"\n    //   },\n    // };\n\n    // play plp btns\n    const extraContent = (\n      <div className=\"miniplayer-btns-wrapper\">\n        <div \n          className={`btn ${isPauseIcon ? 'pause' : 'play'}-icon`}\n          onClick={clickPlayPauseHandler}\n        ></div>\n        <div\n          className=\"btn playlist-icon\"\n          onClick={togglePlayingList}\n        ></div>\n      </div>\n    );\n\n    let contentItem = null;\n\n    if (_.isEmpty(curSong)) {\n      contentItem = (\n        <Item\n          className=\"miniplayer-content\"\n          extra={extraContent}\n          multipleLine\n        >\n          听我想听的歌\n        </Item>\n      );\n    } else {\n      const {\n        name,\n        artists,\n        album,\n      } = curSong;\n  \n      // album cover \n      let imgSrc = '';\n      // 判断条件可能要改\n      if (album.picUrl && album.picUrl.length && album.picUrl.includes('http')) {\n        imgSrc = `${album.picUrl}`;\n      } else {\n        imgSrc = CoverPlaceholder;\n      }\n\n      contentItem = (\n        <Item\n          className=\"miniplayer-content\"\n          thumb={imgSrc}\n          extra={extraContent}\n          onClick={toggleFullplayer}\n          activeStyle={{ backgroundColor: '#fff'}}\n          multipleLine\n        >\n          {name}\n          <Brief>{artists.map(val => val.name).join('/')}</Brief>\n        </Item>\n      );\n    }\n\n    return (\n      <div className={`miniplayer ${transitionClass}`}>\n        {contentItem}\n      </div>\n    );\n  }\n}\n \nexport default MiniPlayer;","import React from 'react';\nimport { NavBar, Icon, Slider } from 'antd-mobile';\nimport { Transition } from 'react-transition-group';\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport CoverPlaceholder from '../../images/cover-placeholder.png';\nimport './FullPlayer.less';\n\nclass FullPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      lyric: [],\n      timestampArr: [],\n      showCover: true,\n      showLyric: false,\n    };\n\n    this.songId = 0;\n    this.diffSong = false;\n    this.curLyricIndex = -1;\n  }\n\n  componentDidMount() {\n    this.getLyric();\n  }\n  componentDidUpdate() {\n    if (this.diffSong) {\n      this.getLyric();\n    }\n  }\n\n  getLyric = () => {\n    // const lrcUrl = `/api_mock_data/lyric/lyric-${this.songId}.json`;\n    // const lrcUrl = `/api_mock_data/lyric/lyric-64063.json`;\n    const lrcUrl = `https://api.mlwei.com/music/api/wy/?key=523077333&cache=1&type=lrc&id=${this.songId}`;\n    console.log(lrcUrl);\n    \n    window.fetch(\n      lrcUrl,\n      {\n        method: 'GET',\n        headers: {\n          'Accept': '*'\n        },\n        mode: 'cors'\n      }\n    ).then(\n      response => {\n        console.log(response);\n        return response.status === 200 ? response.text() : null;\n      }\n    ).then(\n      data => {\n        if (data) {\n          \n          console.log(data);\n          const lrcArr = data.split('\\n');\n          // state\n          const \n            lyric = [],\n            timestampArr = [];\n  \n          lrcArr.forEach((lrc) => {\n            const matchPart = lrc.match(/\\[(.*)\\](.*)/);\n  \n            if (matchPart) {\n              \n              const \n                timestampParts = matchPart[1].trim().split(':'),\n                part1 = parseInt(timestampParts[0]) * 60,\n                part2 = parseFloat(timestampParts[1]),\n                timestamp = part1 + part2;\n              \n              if (!isNaN(timestamp)) {\n                lyric.push(matchPart[2].trim());\n                timestampArr.push(timestamp);\n              }\n            }\n          });\n  \n          console.log(lyric);\n          console.log(timestampArr);\n  \n          this.setState({\n            lyric: lyric,\n            timestampArr: timestampArr,\n            curLyricIndex: 0,\n          });\n        }\n      }\n    ).catch(\n      reason => {\n        console.log(reason);\n        this.setState({\n          lyric: [],\n          timestampArr: [],\n        });\n      }\n    );\n  }\n\n  handleClickLyric = () => {\n    this.setState({\n      showCover: true,\n      showLyric: false,\n    });\n  }\n  handleClickCover = () => {\n    this.setState({\n      showCover: false,\n      showLyric: true,\n    });\n  }\n\n  render() {\n    let {\n      transitionClass,\n      curSong,\n      playState,\n      mode,\n      clickPlayPauseHandler,\n      clickPrevBtnHandler,\n      clickNextBtnHandler,\n      clickModeBtnHandler,\n      changeProgressHandler,\n      afterChangeProgressHandler,\n      toggleFullplayer,\n      togglePlayingList,\n    } = this.props;\n\n    const { lyric, timestampArr, showCover, showLyric } = this.state;\n\n    if (_.isEmpty(curSong)) {\n      return (\n        <div className={`fullplayer ${transitionClass}`}>\n          <NavBar\n            className=\"my-fullplayer-navbar\"\n            icon={<Icon type=\"down\"/>}\n            onLeftClick={toggleFullplayer}\n          >\n            听我想听的歌\n          </NavBar>\n\n          <div className=\"mid-wrapper\">\n            <div className=\"cd-box\">\n              <div className=\"cd-wrapper\">\n                <div className=\"cd\">\n                  <img\n                    className=\"image\"\n                    src={CoverPlaceholder}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"background\"></div>\n        </div>\n      );\n    }\n\n    // else\n    const { id, name, artists, album} = curSong;\n\n    const {\n      duration,\n      curTime,\n      playProgress,\n      isPauseIcon,\n      curTimestamp,\n    } = playState;\n\n    this.diffSong = this.songId !== id;\n    this.songId = id;\n\n    const navBarTitleCnt = (\n      <div className=\"navbar-title-content\">\n        <p className=\"song-name f-thide\">{name}</p>\n        <p className=\"artists-name f-thide\">\n          - {artists.map(val => val.name).join('/')} -\n        </p>\n      </div>\n    );\n\n    // lyric\n    let \n      curLyricIndex = 0,\n      lyricContent = null,\n      translateY = 0,\n      maxTranslateY = 0;\n\n    if (lyric.length) {\n      // curLyricIndex\n      curLyricIndex = _.findLastIndex(timestampArr, val => val < curTimestamp);\n      this.curLyricIndex = curLyricIndex;\n      // lyricContent\n      lyricContent = lyric.map((val, idx) => {\n        const lrcCls = `sentence${\n          idx === curLyricIndex ? ' is-curSentence' : ''\n        }`;\n\n        const sentenceEl = (\n          <p \n            id={idx}\n            key={idx}\n            style={(val === '') ? {height: '18px'} : {}}\n            className={lrcCls}\n          >\n            {val}\n          </p>\n        );\n\n        return sentenceEl;\n      });\n\n      // 34px 为一行歌词的行高\n      translateY = 128 - curLyricIndex * 40;\n      maxTranslateY = 128 - lyric.length * 40;\n\n      if (translateY < maxTranslateY) {\n        translateY = maxTranslateY;\n      }\n    }\n\n    // album cover \n    let imgSrc = '';\n    // 判断条件可能要改\n    if (album.picUrl && album.picUrl.length && album.picUrl.includes('http')) {\n      imgSrc = `${album.picUrl}`;\n    } else {\n      imgSrc = CoverPlaceholder;\n    }\n\n    const progress = parseFloat(playProgress);\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, play, pause }) => {\n          const {\n            curSongIndex,\n          } = playerState;\n\n          return (\n            <div className={`fullplayer ${transitionClass}`}>\n              <NavBar\n                className=\"my-fullplayer-navbar\"\n                icon={<Icon type=\"down\"/>}\n                onLeftClick={toggleFullplayer}\n              >\n                {navBarTitleCnt}\n              </NavBar>\n\n              <div className=\"mid-wrapper\">\n                {/* cd */}\n                <Transition\n                  in={showCover}\n                  timeout={200}\n                  mountOnEnter\n                  unmountOnExit\n                >\n                  {(status) => {\n                    return (\n                      <div\n                        className={`cd-box fade fade-${status}`}\n                        onClick={() => this.handleClickCover()}\n                      >\n                        <div className=\"cd-wrapper\">\n                          <div className=\"cd\">\n                            <img\n                              className=\"image\"\n                              src={imgSrc}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }}\n                </Transition>\n\n                {/* lyric */}\n                <Transition\n                  in={showLyric}\n                  timeout={200}\n                  mountOnEnter\n                  unmountOnExit\n                >\n                  {(status) => {\n                    return (\n                      <div\n                        className={`lyric-box fade fade-${status}`}\n                        onClick={() => this.handleClickLyric()}\n                      >\n                        {lyricContent ? (\n                          <div \n                            className=\"lyric\"\n                            style={{\n                              transition: 'transform 0.35s ease-out 0s',\n                              transform: `translateY(${translateY}px)`,\n                            }}\n                          >\n                            {lyricContent}\n                          </div>\n                        ) : (\n                          <p className=\"no-lyric\">暂无歌词</p>\n                        )}\n                      </div>\n                    );\n                  }}\n                </Transition>\n              </div>\n\n              <div className=\"btm-wrapper\">\n                <div className=\"progress-wrapper\">\n\n                  <p className=\"time time-cur\">{curTime}</p>\n                  \n                  <Slider\n                    style={{\n                      marginLeft: 12,\n                      marginRight: 12,\n                      paddingTop: 22,\n                      paddingBottom: 24,\n                    }}\n                    defaultValue={0}\n                    min={0}\n                    max={100}\n                    step={0.1}\n                    value={progress}\n                    handleStyle={{\n                      marginLeft: '-8px',\n                      marginTop: '-7px',\n                      width: '16px',\n                      height: '16px',\n                      border: 'none',\n                    }}\n                    trackStyle={{\n                      backgroundColor: '#ffd426'\n                    }}\n                    railStyle={{\n                      backgroundColor: 'rgba(225,225,225, 0.4)'\n                    }}\n                    onChange={(value) => {\n                      pause();\n                      changeProgressHandler(value);\n                    }}\n                    onAfterChange={(curVal) => {\n                      afterChangeProgressHandler(curVal);\n                      play(curSongIndex);\n                    }}\n                  />\n\n                  <p className=\"time time-dur\">{duration}</p>\n                </div>\n\n                <div className=\"operators\">\n                  <div\n                    className={`btn ${mode}-icon`}\n                    onClick={clickModeBtnHandler}\n                  ></div>\n                  <div\n                    className=\"btn prev-icon\"\n                    onClick={clickPrevBtnHandler}\n                  ></div>\n                  <div\n                    className={`btn ${isPauseIcon ? 'pause' : 'play'}-icon`}\n                    onClick={clickPlayPauseHandler}\n                  ></div>\n                  <div\n                    className=\"btn next-icon\"\n                    onClick={clickNextBtnHandler}\n                  ></div>\n                  <div\n                    className=\"btn list-icon\"\n                    onClick={togglePlayingList}\n                  ></div>\n                </div>\n              </div>\n\n              <div className=\"background\">\n                <img \n                  width=\"100%\"\n                  height=\"100%\"\n                  src={imgSrc}\n                />\n              </div>\n            </div>\n\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default FullPlayer;","import React from 'react';\nimport { List } from 'antd-mobile';\n\nimport PlayerContext from '../../context/PlayerContext';\n\nimport './PlayingList.less';\n\nconst Item = List.Item;\n\nclass PlayingList extends React.Component {\n  render() {\n    const { transitionClass, togglePlayingList } = this.props;\n    \n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, play, deleteSong, clearPlaylist }) => {\n          const {\n            playingList,\n            curSongIndex,\n          } = playerState;\n\n          const extraClearBtn = (\n            <div\n              className=\"btn delete-icon\"\n              onClick={() => clearPlaylist()}\n            ></div>\n          );\n\n          const listItemArr = playingList.map((song, idx) => {\n            const {\n              id,\n              name,\n              artists,\n            } = song;\n    \n            const extraCloseBtn = (\n              <div\n                className=\"btn close-icon\"\n                onClick={(ev) => {\n                  ev.stopPropagation();\n                  deleteSong(idx);\n                }}\n              ></div>\n            );\n\n            return (\n              <Item \n                key={id}\n                className={`${curSongIndex === idx ? 'active-song' : ''}`}\n                extra={extraCloseBtn}\n                onClick={() => play(idx)}\n              >\n                {name}\n                <span className=\"song-artists-alb\">\n                  {' - ' + artists.map(val => val.name).join('/')}\n                </span>\n              </Item>\n            );\n          });\n\n          return (\n            <div \n              className={`playing-list ${transitionClass}`}\n              onTouchStart={(ev) => ev.stopPropagation()}\n            >\n              <Item\n                extra={extraClearBtn}\n                multipleLine\n              >\n                播放列表\n                <span className=\"song-num\">\n                  共({playingList.length})首\n                </span>\n              </Item>\n              <List>\n                {listItemArr}\n              </List>\n              <Item\n                className=\"close-btn\"\n                onClick={togglePlayingList}\n                multipleLine\n              >\n                关闭\n              </Item>\n            </div>\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default PlayingList;","import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport l_lang from 'lodash/lang';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport MiniPlayer from '../MiniPlayer/MiniPlayer.jsx';\nimport FullPlayer from '../FullPlayer/FullPlayer.jsx';\nimport PlayingList from '../PlayingList/PlayingList.jsx';\n\n// import './Player.less';\n\nclass Player extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modeIndex: 0,\n      duration: '00:00',\n      curTime: '00:00',\n      playProgress: '0',\n      curTimestamp: 0, // 歌词相关\n      isPauseIcon: false,\n      // showMiniplayer: false,\n      showFullplayer: false,\n      showPlayingList: false,\n    };\n    this.audioRef = React.createRef();\n    this.handleChangeProgress = this.handleChangeProgress.bind(this);\n    this.handleAfterChangeProgress = this.handleAfterChangeProgress.bind(this);\n\n    this.curSongIndex = -1;\n    this.audioAmount = 0;\n    this.isPause = true; // 指示 进行播放还是暂停\n    this.songUrlApi = 'https://music.163.com/song/media/outer/url?id='; // ?id=350909 会返回一个重定向响应\n    this.currentSong = {};\n\n    this.playMode = [\n      {\n        desc: '列表循环',\n        className: 'loop',\n      },\n      {\n        desc: '单曲循环',\n        className: 'single',\n      },\n      {\n        desc: '随机播放',\n        className: 'random',\n      }\n    ];\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n    if (this.isNoAudio()) {\n      return;\n    }\n    if (this.isPause) {\n      if (!(this.audioRef.current.paused)) {\n        this.pauseAudio();\n      }\n    } else {\n      if (this.audioRef.current.paused) {\n        this.playAudio();\n      }\n    }\n  }\n\n  playAudio() {\n    this.audioRef.current.play().then(() => {\n      console.log('play.then');\n      this.setState({ isPauseIcon: true });\n    }, (reason) => {\n      console.log(reason);\n    });\n  }\n\n  pauseAudio() {\n    this.audioRef.current.pause();\n    this.setState({ isPauseIcon: false });\n  }\n\n  handleClickPlayPause(ev, funcPlay, funcPause) {\n    ev.stopPropagation();\n    if (this.isNoAudio()) {\n      return;\n    }\n    if (this.audioRef.current.paused) {\n      const index = this.curSongIndex;\n      funcPlay(index);\n    } else {\n      funcPause();\n    }\n  }\n\n  handleClickPrevBtn(funcPlay) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    this.setState({ playProgress: '0' });\n    const index = this.getIndex(true);\n    funcPlay(index);\n  }\n\n  handleClickNextBtn(funcPlay) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    this.setState({ playProgress: '0' });\n    const index = this.getIndex();\n    funcPlay(index);\n  }\n\n  handleClickModeBtn() {\n    if (this.isNoAudio()) {\n      return;\n    }\n    const nextIndex = (this.state.modeIndex + 1) % this.playMode.length;\n\n    this.audioRef.current.loop = nextIndex === 1;\n    this.setState({ modeIndex: nextIndex });\n  }\n\n  handleChangeProgress(value) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    const\n      prevCurTime = this.state.curTime,\n      duration = this.audioRef.current.duration;\n\n    const\n      curTimeStr = this.timeFormat(parseFloat((value / 100 * duration).toFixed(6))),\n      progress = `${value}%`;\n\n      if (prevCurTime !== curTimeStr) {\n        this.setState({\n          curTime: curTimeStr,\n          playProgress: progress,\n        });\n      } else {\n        this.setState({ playProgress: progress });\n      }\n  }\n\n  handleAfterChangeProgress(value) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    const audio = this.audioRef.current;\n    audio.currentTime = parseFloat((value / 100 * audio.duration).toFixed(6));\n  }\n\n  toggleFullplayer = () => {\n    this.setState(state => ({\n      showFullplayer: !state.showFullplayer\n    }));\n  }\n\n  togglePlayingList = (ev) => {\n    ev.stopPropagation();\n    this.setState(state => ({\n      showPlayingList: !state.showPlayingList\n    }));\n  }\n  \n  // audio\n  handleDurationChange() {\n    console.log('handleDurationChange');\n    this.setState({\n      duration: this.timeFormat(this.audioRef.current.duration),\n      playProgress: '0',\n      curTime: '00:00'\n    });\n  }\n\n  handleTimeUpdate() {\n    const\n      old = this.state.curTime,\n      duration = this.audioRef.current.duration,\n      currentTime = this.audioRef.current.currentTime;\n    \n    const\n      curTimeStr = this.timeFormat(currentTime),\n      progress = `${(currentTime / duration * 100).toFixed(2)}%`;\n  \n    if (old !== curTimeStr) {\n      this.setState({\n        curTime: curTimeStr,\n        playProgress: progress,\n        curTimestamp: currentTime,\n      });\n    } else {\n\n      if (currentTime === duration) {\n        this.setState({ \n          playProgress: progress,\n          curTimestamp: currentTime,\n        });\n      } else {\n        this.setState({ curTimestamp: currentTime });\n      }\n    }\n  }\n\n  handleEnded(funcPlay) {\n    const index = this.getIndex();\n    this.setState({ loadProgress: '0', playProgress: '0' });\n    funcPlay(index);\n  }\n\n  handleAudioError() {\n    const audioElem = this.audioRef.current;\n    console.log(audioElem.error);\n    \n    // TODO 完善无版权歌曲处理\n    if (audioElem.error.code === 2) {\n      audioElem.load();\n      audioElem.currentTime = parseFloat(this.state.playProgress) / 100;\n      console.log(this.state.playProgress);\n    }\n  }\n\n  // Util\n  isNoAudio() {\n    return (this.audioAmount === 0);\n  }\n\n  timeFormat(timeNum) {// mm:ss\n    const minutes = parseInt(`${timeNum / 60}`),  // 商\n          seconds = parseInt(`${timeNum % 60}`),  // 余数\n          minStr = minutes < 10 ? `0${minutes}` : `${minutes}`,\n          secStr = seconds < 10 ? `0${seconds}` : `${seconds}`;\n\n    return `${minStr}:${secStr}`;\n  }\n\n  getIndex(isPrev) {\n    if (isPrev === undefined) {\n      isPrev = false;\n    }\n    let index = 0;\n    switch (this.state.modeIndex) {\n      case 0:\n      case 1:\n        if (isPrev) {\n          index = (\n              this.curSongIndex - 1 + this.audioAmount\n            ) % this.audioAmount;\n        } else {\n          index = (this.curSongIndex + 1) % this.audioAmount;\n        }\n        break;\n      case 2:\n        index = parseInt(Math.random() * this.audioAmount);\n        break;\n      default:\n        break;\n    }\n    return index;\n  }\n\n  render() {\n    const { showFullplayer, showPlayingList } = this.state;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, play, pause, deleteSong, clearPlaylist }) => {\n          const {\n            playingList,\n            currentSong,\n            curSongIndex,\n            isPause,\n          } = playerState;\n\n          this.curSongIndex = curSongIndex;\n          this.audioAmount = playingList.length;\n          this.isPause = isPause;\n          this.currentSong = currentSong;\n          this.isToReset = l_lang.isEmpty(currentSong);\n\n          return (\n            <div className=\"audio-controls-panel\">\n              {/* music */}\n              <audio \n                ref={this.audioRef}\n                src={\n                  currentSong && currentSong.link ? `${this.songUrlApi}${currentSong.id}` : ''\n                }\n                onDurationChange={() => this.handleDurationChange()}\n                onTimeUpdate={() => this.handleTimeUpdate()}\n                onEnded={() => this.handleEnded(play)}\n                onError={() => this.handleAudioError()}\n              >\n              </audio>\n              \n              {/* mini full都用transition 包裹，currentSong为空时，做退出的效果。\n              且各自内部也对currentSong为空的情况做处理。 */}\n              <Transition\n                in={!this.isToReset}\n                timeout={150}\n                mountOnEnter\n                unmountOnExit\n              >\n                {(status) => {\n                  return (\n                    <MiniPlayer\n                      transitionClass={`slide-up slide-up-${status}`}\n                      curSong={currentSong}\n                      isPauseIcon={this.state.isPauseIcon}\n                      clickPlayPauseHandler={(ev) => this.handleClickPlayPause(ev, play, pause)}\n                      toggleFullplayer={this.toggleFullplayer}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n          \n              <Transition\n                in={this.isToReset ? false : showFullplayer}\n                timeout={250}\n                mountOnEnter\n                unmountOnExit\n                onExited={() => this.setState({showFullplayer: false})}\n              >\n                {(status) => {\n                  return (\n                    <FullPlayer\n                      transitionClass={`slide-up slide-up-${status}`}\n                      curSong={currentSong}\n                      playState={this.state}\n                      mode={this.playMode[this.state.modeIndex].className}\n                      clickPlayPauseHandler={(ev) => this.handleClickPlayPause(ev, play, pause)}\n                      clickPrevBtnHandler={() => this.handleClickPrevBtn(play)}\n                      clickNextBtnHandler={() => this.handleClickNextBtn(play)}\n                      clickModeBtnHandler={() => this.handleClickModeBtn()}\n                      changeProgressHandler={this.handleChangeProgress}\n                      afterChangeProgressHandler={this.handleAfterChangeProgress}\n                      toggleFullplayer={this.toggleFullplayer}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n              \n              {/* plp */}\n              <Transition\n                in={this.isToReset ? false : showPlayingList}\n                timeout={250}\n                mountOnEnter\n                unmountOnExit\n                onExited={() => this.setState({showPlayingList: false})}\n              >\n                {(status) => {\n                  return (\n                    <PlayingList\n                      transitionClass={`slide-up slide-up-${status}`}\n                      listData={playingList}\n                      curSongIndex={curSongIndex}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n            </div>\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Player;","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport l_array from 'lodash/array';\n\nimport PlayerContext from './context/PlayerContext';\nimport PlaylistDetail from './components/PlaylistDetail/PlaylistDetail.jsx';\nimport Playlists from './components/Playlists/Playlists.jsx';\nimport Player from './components/Player/Player.jsx';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      playingList: [],\n      currentSong: {},\n      curSongIndex: -1,\n      isPause: true,\n      isLogin: false\n    };\n    // bind this to method\n    this.play = this.play.bind(this);\n    this.pause = this.pause.bind(this);\n    this.deleteSong = this.deleteSong.bind(this);\n    this.clearPlaylist = this.clearPlaylist.bind(this);\n    this.playAll = this.playAll.bind(this);\n    this.addAll = this.addAll.bind(this);\n    this.playSong = this.playSong.bind(this);\n    this.addSongToNext = this.addSongToNext.bind(this);\n  }\n\n  componentDidMount() {\n    const localData = window.localStorage.getItem('playData');\n    this.setState(JSON.parse(localData));\n  }\n\n  componentDidUpdate() {\n    const { playingList, currentSong, curSongIndex } = this.state;\n    window.localStorage.setItem('playData',JSON.stringify({ playingList, currentSong, curSongIndex }));\n  }\n\n  play(index) {\n    if (index >= 0) {\n      if (index === this.state.curSongIndex) {\n        if (this.state.isPause) {\n          this.setState({ isPause: false });\n        }\n      } else {\n        this.setState({\n          currentSong: this.state.playingList[index],\n          curSongIndex: index,\n          isPause: false,\n        });\n      } \n    }\n  }\n\n  pause() {\n    this.setState({ isPause: true });\n  }\n\n  // 删除歌曲\n  deleteSong(songIndex) {\n    const appState = this.state;\n\n    const playingList = appState.playingList;\n    let curSongIndex = appState.curSongIndex;\n\n    l_array.remove(playingList, (val, idx) => idx === songIndex);\n\n    if (playingList.length) {\n      \n      if (songIndex < curSongIndex) {\n        this.setState({\n          playingList: playingList,\n          curSongIndex: curSongIndex - 1,\n        });\n      } else if (songIndex === curSongIndex) {\n\n        curSongIndex = songIndex === playingList.length ? 0 : songIndex;\n\n        this.setState({\n          playingList: playingList,\n          currentSong: playingList[curSongIndex],\n          curSongIndex: curSongIndex,\n          isPause: false,\n        });\n      } else {\n        this.setState({ playingList: playingList });\n      }\n      \n    } else {\n      this.clearPlaylist();\n    }\n  }\n\n  clearPlaylist() {\n    this.setState({\n      playingList: [],\n      currentSong: {},\n      curSongIndex: -1,\n      isPause: true,\n    });\n  }\n\n  playAll(songlist) {\n    this.setState({\n      playingList: songlist,\n      curSongIndex: -1,\n    }, () => this.play(0));\n  }\n\n  addAll(songlist) {\n    const playingList = this.state.playingList;\n\n    if (playingList.length) {\n\n      // 歌单间重复的歌曲也被去重了\n      const songToAdd = l_array.differenceBy(songlist, playingList, 'id');\n      console.log(songToAdd);\n\n      if (songToAdd.length) {\n        // 这一行直接以非 setState 的方式对 this.state 做了修改\n        playingList.splice(this.state.curSongIndex + 1, 0, ...songToAdd);\n        // 这一行只是单纯地要触发 render\n        this.setState({ playingList: playingList });\n      }\n    } else {\n      this.playAll(songlist);\n    }\n  }\n  // 添加并播放单首歌曲\n  playSong(song) {\n    const appState = this.state;\n    const playingList = appState.playingList;\n    const curSongIndex = appState.curSongIndex;\n    const indexToInsert = curSongIndex + 1;\n\n    if (playingList.length) {// 播放列表不为空\n\n      const matchedSongIdx = l_array.findIndex(playingList, ['id', song.id]);\n  \n      // 已有这首歌\n      if (matchedSongIdx !== -1) {\n        \n        if (matchedSongIdx === curSongIndex) {// 且为正在播放的歌\n          // 直接播放这首歌\n          this.play(matchedSongIdx);\n\n        } else if (matchedSongIdx < curSongIndex) {// 在正在播放的歌之前\n          // 添加到正播放的歌的后面\n          playingList.splice(indexToInsert, 0, song);\n          // 从原位置移除\n          playingList.splice(matchedSongIdx, 1);\n          // 更新 ui\n          this.setState({\n            playingList: playingList,\n            curSongIndex: curSongIndex - 1,\n          }, () => this.play(indexToInsert - 1));\n\n        } else {// 在正在播放的歌之后\n          // 从原位置移除\n          playingList.splice(matchedSongIdx, 1);\n          // 添加到正播放的歌的后面\n          playingList.splice(indexToInsert, 0, song);\n          // 更新 ui\n          this.setState({ playingList: playingList }, () => this.play(indexToInsert));\n        }\n\n      } else {// 没有这首歌\n        // 添加到正播放的歌的后面\n        playingList.splice(indexToInsert, 0, song);\n        console.log(playingList);\n        // 更新 ui\n        this.setState({ playingList: playingList }, () => this.play(indexToInsert));\n      }\n\n    } else {// 播放列表为空\n      this.setState({ playingList: [song] }, () => this.play(indexToInsert));\n    }\n  }\n  // 下一首播放\n  addSongToNext(song) {\n    const appState = this.state;\n    const playingList = appState.playingList;\n    const curSongIndex = appState.curSongIndex;\n    const indexToInsert = curSongIndex + 1;\n\n    if (playingList.length) {// 播放列表不为空\n\n      const matchedSongIdx = l_array.findIndex(playingList, ['id', song.id]);\n  \n      // 已有这首歌\n      if (matchedSongIdx !== -1) {\n        \n        if (matchedSongIdx === curSongIndex) {// 且为正在播放的歌\n          // 直接播放这首歌\n          this.play(matchedSongIdx); \n\n        } else if (matchedSongIdx < curSongIndex) {// 在正在播放的歌之前\n          // 添加到正播放的歌的后面\n          playingList.splice(indexToInsert, 0, song);\n          // 从原位置移除\n          playingList.splice(matchedSongIdx, 1);\n          // 更新 ui\n          this.setState({\n            playingList: playingList,\n            curSongIndex: curSongIndex - 1,\n          });\n\n        } else {// 在正在播放的歌之后\n          // 从原位置移除\n          playingList.splice(matchedSongIdx, 1);\n          // 添加到正播放的歌的后面\n          playingList.splice(indexToInsert, 0, song);\n          // 更新 ui\n          this.setState({ playingList: playingList });\n        }\n\n      } else {// 没有这首歌\n        // 添加到正播放的歌的后面\n        playingList.splice(indexToInsert, 0, song);\n        // 更新 ui\n        this.setState({ playingList: playingList });\n      }\n\n    } else {// 播放列表为空\n      this.setState({ playingList: [song] }, () => this.play(0));\n    }\n\n  }\n  // render\n  render() {\n    return (\n      <Router>\n        <PlayerContext.Provider \n          value={{\n            playerState: this.state,\n            play: this.play,\n            pause: this.pause,\n            deleteSong: this.deleteSong,\n            clearPlaylist: this.clearPlaylist,\n            playAll: this.playAll,\n            addAll: this.addAll,\n            playSong: this.playSong,\n            addSongToNext: this.addSongToNext,\n          }}\n        >\n          <Switch>\n            <Route exact path=\"/\" component={Playlists}/>\n            <Route path=\"/playlist\" component={PlaylistDetail}/>\n          </Switch>\n\n          <Player />\n          \n        </PlayerContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cover-placeholder.d45643b2.png\";"],"sourceRoot":""}