{"version":3,"sources":["components/Loading/images/loading-64.svg","components/PlaylistDetail/images/playall.png","context/PlayerContext.js","components/Loading/Loading.jsx","components/Search/Search.jsx","components/Slide/Slide.jsx","components/BannerSlider/BannerSlider.jsx","components/PlaylistCover/PlaylistCover.jsx","components/PlaylistDetail/PlaylistDetail.jsx","components/Home/Home.jsx","components/MiniPlayer/MiniPlayer.jsx","components/Scroll/Scroll.jsx","components/FullPlayer/FullPlayer.jsx","components/PlayingList/PlayingList.jsx","components/Player/Player.jsx","App.jsx","serviceWorker.js","index.js","images/cover-placeholder.png"],"names":["module","exports","__webpack_require__","p","context","React","createContext","Loading","react_default","a","createElement","className","src","LoadImg","alt","Component","Item","list_default","Brief","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","value","setState","showSearchKeywordBox","showSearchResultBox","isLoading","historyKws","state","historyKeywords","cpHistoryKws","length","slice","push","uniqCpHistoryKws","_","uniq","window","localStorage","setItem","JSON","stringify","searchApi","concat","encoded","encodeURI","fetch","method","headers","Accept","mode","then","response","status","json","data","resultData","Body","map","song","author","id","pic","title","link","name","artists","album","picUrl","searchResult","catch","reason","console","log","change","keyword","clear","focus","showSearchBox","cancel","handlePlaySong","ev","funcPlaySong","songIndex","stopPropagation","cloneDeep","handleClickKeyword","val","target","textContent","clearHistoryKeywords","removeItem","hotKeywords","getItem","parse","_this2","_this$state","PlayerContext","Consumer","_ref","resultContent","playerState","playSong","idx","key","activeStyle","backgroundColor","onClick","multipleLine","join","style","height","textAlign","search_bar_default","ref","manualFocusInst","cancelText","placeholder","onSubmit","onChange","onClear","onFocus","onBlur","onCancel","playingList","bottom","react_transition_group","in","timeout","mountOnEnter","unmountOnExit","kw","components_Loading_Loading","Slide","update","slide","destroy","init","refresh","_setSlideWidth","prev","next","clearTimeout","timer","currentPageIndex","showDot","_initDots","_initSlide","autoPlay","_play","isResize","children","slideGroupRef","current","width","slideWidth","slideRef","clientWidth","i","child","addClass","loop","BScroll","scrollX","scrollY","momentum","snap","threshold","speed","bounce","click","on","_onScrollEnd","pageIndex","getCurrentPage","pageX","dots","Array","setInterval","interval","hasClass","el","RegExp","test","newClass","split","createRef","addEventListener","enabled","resizeTimer","setTimeout","isInTransition","defaultProps","BannerSlider","banners","components_Slide_Slide","PlaylistCover","_this$props","playCount","PlaylistDetail","getSonglist","plId","songlist","SWrapperRef","funcPlayallOrAddall","transitionClass","playlistIntro","toggleShowPlDetail","coverUrl","playAll","curSongId","currentSong","listContent","artistsTitle","artist","PlaylistDetail_Item","nav_bar_default","icon","icon_default","type","onLeftClick","paddingBottom","components_PlaylistCover_PlaylistCover","handleClickPlayallOrAddall","PlayIcon","result_default","backgroundImage","Home","prevState","showPlDetail","handleClickPlaylist","elem","currentTarget","hasAttribute","index","getAttribute","clickedPl","rcmdPlaylists","playlists","getPlaylists","plsUrl","process","homeLink","curPage","rcmdlist","playlist","data-index","data-plcate","position","top","left","allPlContent","Home_Item","thumb","Home_Brief","Fragment","components_Search_Search","components_BannerSlider_BannerSlider","renderHeader","components_PlaylistDetail_PlaylistDetail","MiniPlayer","curSong","isPauseIcon","clickPlayPauseHandler","toggleFullplayer","togglePlayingList","extraContent","contentItem","isEmpty","MiniPlayer_Item","extra","imgSrc","includes","CoverPlaceholder","MiniPlayer_Brief","Scroll","initScroll","scroll","refreshScroll","destroyScroll","scrollToElement","apply","arguments","restProps","objectWithoutProperties","assign","FullPlayer","handleTouchStart","fnPlay","fnPause","isTouching","ProgressBarElem","ProgressBarRef","progressBarOffsetLeft","offsetLeft","touchmoveLeftEdge","touchmoveRightEdge","progressBarWidth","prevTouchX","targetTouches","clientX","ProgressWrapElem","ProgressWrapRef","handleTouchEnd","bind","assertThisInitialized","handleTouchMove","nextTouchX","touches","deltaX","nextProgress","progress","updateCurrentTime","handleClickLyric","showCover","showLyric","handleClickCover","ScrollRef","diffSong","curLyricIndex","curLyricIndexChange","lyric","removeEventListener","playState","clickPrevBtnHandler","clickNextBtnHandler","clickModeBtnHandler","duration","curTime","playProgress","navBarTitleCnt","lyricContent","maxTranslateY","lrcCls","playProgressWidth","parseFloat","play","pause","components_Scroll_Scroll","transform","onTouchStart","PlayingList","document","querySelector","scrollIntoView","maskFadeClass","playByIndex","deleteSong","clearPlaylist","curSongIndex","extraClearBtn","listItemArr","extraCloseBtn","PlayingList_Item","Player","getLyric","lrcUrl","songId","text","timestampArr","forEach","lrc","matchPart","match","timestampParts","trim","timestamp","parseInt","isNaN","showFullplayer","showPlayingList","playPercentage","audioElem","audioRef","currentTime","modeIndex","audioAmount","isPause","songUrlApi","playMode","desc","isNoAudio","paused","pauseAudio","playAudio","funcPlay","funcPause","getIndex","nextIndex","timeFormat","_this$audioRef$curren","nextCurTime","nextPlayProgress","toFixed","nextCurLyricIndex","findLastIndex","loadProgress","error","code","load","timeNum","minutes","seconds","minStr","secStr","isPrev","undefined","Math","random","_this3","_this$state2","isToReset","onDurationChange","handleDurationChange","onTimeUpdate","handleTimeUpdate","onEnded","handleEnded","onError","handleAudioError","components_MiniPlayer_MiniPlayer","handleClickPlayPause","onExited","components_FullPlayer_FullPlayer","handleClickPrevBtn","handleClickNextBtn","handleClickModeBtn","changeProgressHandler","handleChangeProgress","afterChangeProgressHandler","handleAfterChangeProgress","components_PlayingList_PlayingList","listData","App","isLogin","addAll","addSongToNext","localData","appState","l_array","remove","songToAdd","differenceBy","splice","toConsumableArray","indexToInsert","matchedSongIdx","findIndex","_this4","Provider","components_Home_Home","components_Player_Player","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.627118fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading-64.0ad8b01c.svg\";","module.exports = __webpack_public_path__ + \"static/media/playall.8f22f49d.png\";","import React from 'react';\n\nconst context = React.createContext();\nexport default context;\n","import React from 'react';\nimport './Loading.less';\nimport LoadImg from './images/loading-64.svg';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <img src={LoadImg} alt=\"loading\"/>\n        {/* <i className=\"loading-icon\"></i> */}\n        {/* <p className=\"loading-text\">正在加载</p> */}\n      </div>\n    );\n  }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { SearchBar, List } from 'antd-mobile';\nimport { Transition } from 'react-transition-group';\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport Loading from '../Loading/Loading';\nimport './Search.less';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: '',\n      hotKeywords: ['起风了', 'A妹新专辑', '有可能的夜晚', '出山', '流浪地球', 'Counting Sheep', '空心', '水星记', '东西', '梦龙'],\n      historyKeywords: [],\n      searchResult: [],\n      showSearchBox: false,\n      showSearchKeywordBox: false,\n      showSearchResultBox: false,\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    const historyKeywords = window.localStorage.getItem('historyKeywords');\n    if (historyKeywords) {\n      this.setState({ historyKeywords: JSON.parse(historyKeywords) });\n    }\n  }\n\n  submit = (value) => {\n    if (value) {\n      // set loading\n      this.setState({\n        showSearchKeywordBox: false,\n        showSearchResultBox: true,\n        isLoading: true,\n      });\n  \n      // set localstorage\n      const historyKws = this.state.historyKeywords;\n      let cpHistoryKws = [];\n      if (historyKws && historyKws.length) {\n        cpHistoryKws = historyKws.slice(0);\n        cpHistoryKws.push(value);\n      } else {\n        cpHistoryKws.push(value);\n      }\n      const uniqCpHistoryKws = _.uniq(cpHistoryKws);\n      window.localStorage.setItem('historyKeywords', JSON.stringify(uniqCpHistoryKws));\n      // console.log(cpHistoryKws);\n  \n      // req, url encode?\n      const searchApi = `https://api.mlwei.com/music/api/wy/?key=523077333&id=${value}&type=so&cache=1&nu=60`;\n      \n      const encoded = encodeURI(searchApi);\n      // console.log(encoded);\n      window.fetch(\n        encoded,\n        {\n          method: 'GET',\n          headers: {\n            'Accept': '*'\n          },\n          mode: 'cors'\n        }\n      ).then(\n        response => {\n          // console.log(response);\n          return response.status === 200 ? response.json() : {};\n        }\n      ).then(\n        data => {\n          // console.log('data',data);\n          let resultData = [];\n          if (data.Body) {\n            \n            resultData = data.Body.map(song => {\n              const { author, id, pic, title } = song;\n              return {\n                id: id,\n                link: `/song?id=${id}`,\n                name: title,\n                artists: [{name: author}],\n                album: {picUrl: pic}\n              };\n            });\n          }\n          // console.log('resultData',resultData);\n          this.setState({\n            historyKeywords: uniqCpHistoryKws,\n            searchResult: resultData,\n            isLoading: false,\n          });\n        }\n      ).catch(\n        reason => {\n          console.log(reason);\n          this.setState({\n            historyKeywords: cpHistoryKws,\n            isLoading: false,\n          });\n        }\n      );\n    }\n  }\n\n  change= (value) => {\n    this.setState({ keyword: value });\n  }\n\n  clear = () => {\n    // unshow result/ show search-keyword-box\n    this.setState({ keyword: '' });\n  }\n\n  focus = () => {\n    // show search-keyword-box\n    // console.log('focus');\n    this.setState({\n      showSearchBox: true,\n      showSearchKeywordBox: true,\n      showSearchResultBox: false,\n      isLoading: false,\n    });\n  }\n\n  cancel = () => {\n    // unshow search-keyword-box/result\n    this.setState({\n      keyword: '',\n      showSearchBox: false,\n      showSearchKeywordBox: false,\n      showSearchResultBox: false,\n      isLoading: false,\n    })\n  }\n\n  handlePlaySong = (ev, funcPlaySong, songIndex) => {\n    ev.stopPropagation();\n    funcPlaySong(_.cloneDeep(this.state.searchResult[songIndex]));\n  }\n\n  handleClickKeyword = (ev) => {\n    ev.stopPropagation();\n    // this.manualFocusInst.focus();\n    const val = ev.target.textContent;\n    // console.log(val);\n    if (ev.target.className === 'item') {\n      this.setState({ keyword: val });\n      this.submit(val);\n    }\n  }\n\n  clearHistoryKeywords = (ev) => {\n    ev.stopPropagation();\n    window.localStorage.removeItem('historyKeywords');\n    this.setState({ historyKeywords: [] });\n  }\n\n  render() {\n    const {\n      hotKeywords,\n      historyKeywords,\n      searchResult,\n      showSearchBox,\n      showSearchKeywordBox,\n      showSearchResultBox,\n      isLoading,\n    } =this.state;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, playSong }) => {\n          let resultContent;\n          if (searchResult && searchResult.length) {\n            resultContent = searchResult.map((song, idx) => {\n      \n              const { id, name, artists } = song;\n        \n              return (\n                <Item \n                  key={id}\n                  className=\"result-list-item\"\n                  activeStyle={{ backgroundColor: '#ccc' }}\n                  onClick={(ev) => {this.handlePlaySong(ev, playSong, idx)}}\n                  multipleLine\n                >\n                  {name}\n                  <Brief>{artists.map(val => val.name).join('/')}</Brief>\n                </Item>\n              );\n            });\n      \n          } else {\n            resultContent = (\n              <div style={{height:'calc(100vh - 100px)',textAlign: 'center'}}>网络出了点问题</div>\n            );\n          }\n\n          return (\n            <div className=\"my-search\">\n              <SearchBar\n                ref={ref => this.manualFocusInst = ref}\n                value={this.state.keyword}\n                cancelText=\"返回\"\n                placeholder=\"Search\"\n                onSubmit={this.submit}\n                onChange={this.change}\n                onClear={this.clear}\n                onFocus={this.focus}\n                onBlur={() => console.log('onBlur')}\n                onCancel={this.cancel}\n              />\n              \n              {showSearchBox ? (\n                <div\n                  className=\"search-box\"\n                  style={playerState.playingList.length ? {bottom: '56px'} : {bottom: '0'}}\n                >\n                  {/* hot history */}\n                  <Transition\n                    in={showSearchKeywordBox}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    // onExited={() => this.setState({showSearchKeywordBox: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div\n                          className={`search-keyword-box fade fade-${status}`}\n                          onClick={(ev) => this.handleClickKeyword(ev)}\n                        >\n                          <div className=\"hot-keyword\">\n                            <h4 className=\"title\">热门搜索</h4>\n                            <ul>\n                              {hotKeywords.map((kw, idx) => (\n                                <li\n                                  key={idx}\n                                  className=\"item\"\n                                >\n                                  {kw}\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                          {historyKeywords.length > 0 ? (\n                            <div className=\"history-keyword\">\n                              <h4 className=\"title\">\n                                搜索历史\n                                <i\n                                  className=\"delete-btn\"\n                                  onClick={(ev) => this.clearHistoryKeywords(ev)}\n                                ></i>\n                              </h4>\n                              <ul>\n                                {historyKeywords.map((kw, idx) => (\n                                  <li\n                                    key={idx}\n                                    className=\"item\"\n                                  >\n                                    {kw}\n                                  </li>\n                                ))}\n                              </ul>\n                            </div>\n                          ) : null}\n                        </div>\n                      );\n                    }}\n                  </Transition>\n\n                  {/* result */}\n                  <Transition\n                    in={showSearchResultBox}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    // onExited={() => this.setState({showSearchResultBox: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div className={`search-result-box fade fade-${status}`}>\n                          {isLoading ? (\n                            <Loading />\n                          ) : (\n                            <List>{resultContent}</List>\n                          )}\n                        </div>\n                      );\n                    }}\n                  </Transition>\n                </div>\n              ) : null}\n\n            </div>\n            \n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport BScroll from 'better-scroll';\n\nimport './Slide.less';\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      dots: [],\n      currentPageIndex: 0,\n    }\n    this.slideRef = React.createRef()\n    this.slideGroupRef = React.createRef()\n  }\n\n  componentDidMount() {\n    this.update()\n\n    window.addEventListener('resize', () => {\n      if (!this.slide || !this.slide.enabled) {\n        return\n      }\n      window.clearTimeout(this.resizeTimer)\n      this.resizeTimer = window.setTimeout(() => {\n        if (this.slide.isInTransition) {\n          this._onScrollEnd()\n        } else {\n          if (this.props.autoPlay) {\n            this._play()\n          }\n        }\n        this.refresh()\n      }, 60)\n    })\n  }\n  componentWillMount() {\n    // this.slide.disable()\n    window.clearTimeout(this.timer)\n  }\n  // methods: \n  update = () => {\n    if (this.slide) {\n      this.slide.destroy()\n    }\n    this.init()\n  }\n  refresh = () => {\n    this._setSlideWidth(true)\n    this.slide.refresh()\n  }\n  prev = () => {\n    this.slide.prev()\n  }\n  next = () => {\n    this.slide.next()\n  }\n  init = () => {\n    window.clearTimeout(this.timer)\n    this.setState({currentPageIndex: 0})\n    this._setSlideWidth()\n    if (this.props.showDot) {\n      this._initDots()\n    }\n    this._initSlide()\n    if (this.props.autoPlay) {\n      this._play()\n    }\n  }\n  _setSlideWidth = (isResize) => {\n    this.children = this.slideGroupRef.current.children\n    let width = 0\n    let slideWidth = this.slideRef.current.clientWidth\n    for (let i = 0; i < this.children.length; i++) {\n      let child = this.children[i]\n      this.addClass(child, 'slide-item')\n      child.style.width = slideWidth + 'px'\n      width += slideWidth\n    }\n    if (this.props.loop && !isResize) {\n      width += 2 * slideWidth\n    }\n    this.slideGroupRef.current.style.width = width + 'px'\n  }\n  _initSlide = () => {\n    // console.log(this.props.threshold)\n    this.slide = new BScroll(this.slideRef.current, {\n      scrollX: true,\n      scrollY: false,\n      momentum: false,\n      snap: {\n        loop: this.props.loop,\n        threshold: this.props.threshold,\n        speed: this.props.speed\n      },\n      bounce: false,\n      stopPropagation: true,\n      click: this.props.click\n    })\n    this.slide.on('scrollEnd', this._onScrollEnd)\n    this.slide.on('touchEnd', () => {\n      if (this.props.autoPlay) {\n        this._play()\n      }\n    })\n    this.slide.on('beforeScrollStart', () => {\n      if (this.props.autoPlay) {\n        window.clearTimeout(this.timer)\n      }\n    })\n  }\n  _onScrollEnd = () => {\n    let pageIndex = this.slide.getCurrentPage().pageX\n    this.setState({currentPageIndex: pageIndex})\n    if (this.autoPlay) {\n      this._play()\n    }\n  }\n  _initDots = () => {\n    let dots = new Array(this.children.length)\n    for (let idx = 0; idx < dots.length; idx++) {\n      dots[idx] = idx;\n    }\n    this.setState({dots: dots})\n  }\n  _play = () => {\n    window.clearTimeout(this.timer)\n    this.timer = window.setInterval(() => {\n      this.slide.next()\n    }, this.props.interval)\n  }\n  // common method dom\n  hasClass = (el, className) => {\n    let reg = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)')\n    return reg.test(el.className)\n  }\n  \n  addClass = (el, className) => {\n    if (this.hasClass(el, className)) {\n      return\n    }\n  \n    let newClass = el.className.split(' ')\n    newClass.push(className)\n    el.className = newClass.join(' ')\n  }\n\n  render() {\n    const { dots, currentPageIndex } = this.state;\n\n    return (\n      <div className=\"slide\" ref={this.slideRef}>\n        <div className=\"slide-group\" ref={this.slideGroupRef}>\n          {this.props.children}\n        </div>\n        {this.props.showDot ? (\n          <div className=\"dots\">\n            {dots.map((val, idx) => (\n              <span\n                key={idx}\n                className={\n                  `dot ${currentPageIndex === idx ? 'active':''}`\n                }\n              ></span>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nSlide.defaultProps = {\n  loop: true,\n  autoPlay: true,\n  interval: 4000,\n  showDot: true,\n  click: true,\n  threshold: 0.3,\n  speed: 400,\n}\n\nexport default Slide;","import React, { Component } from 'react';\nimport Slide from '../Slide/Slide';\n\nclass BannerSlider extends Component {\n  state = {\n    banners: [\n      'https://p1.music.126.net/PzonwsvcSEEsr-uhJXE2_g==/109951163871296308.jpg',\n      'https://p1.music.126.net/thHP6ooWw893Ccfk_iXG5w==/109951163866743145.jpg',\n      'https://p1.music.126.net/VO_0urbXu_PytHjhjfj4Zw==/109951163871298888.jpg',\n      'https://p1.music.126.net/kEGOOxh_p6H7UHKuOOFkFg==/109951163871789068.jpg',\n      'https://p1.music.126.net/wa7Oxq5yysZgGBvOlivwEg==/109951163871318124.jpg'\n    ]\n  }\n  render() {\n    const { banners } = this.state;\n\n    return (\n      <Slide>\n        {banners.map((val, idx) => (\n          <div key={idx}>\n            <img src={val} alt=\"banner\"/>\n          </div>\n        ))}\n      </Slide>\n    );\n  }\n}\n\nexport default BannerSlider;","import React from 'react';\n\nimport './PlaylistCover.less';\n\nclass PlaylistCover extends React.Component {\n  render() {\n    const { src, style, playCount } = this.props;\n\n    return (\n      <div className=\"pl-cover\" style={style}>\n        <img \n          className=\"cover\" \n          src={src}\n          alt=\"cover\"\n        />\n        <span className=\"u-earp play-num\">{playCount}</span>\n      </div>\n    );\n  }\n}\n\nexport default PlaylistCover;","import React from 'react';\r\nimport { NavBar, Icon, List, Result } from 'antd-mobile';\r\n// import BScroll from 'better-scroll';\r\nimport _ from 'lodash';\r\n\r\nimport PlayerContext from '../../context/PlayerContext';\r\nimport PlaylistCover from '../PlaylistCover/PlaylistCover.jsx';\r\nimport Loading from '../Loading/Loading.jsx';\r\n\r\nimport PlayIcon from './images/playall.png';\r\nimport './PlaylistDetail.less';\r\n\r\nconst Item = List.Item;\r\n\r\nclass PlaylistDetail extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      songlist: [],\r\n      isLoading: false,\r\n    };\r\n    this.SWrapperRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.initScroll();\r\n    this.getSonglist();\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   this.refreshScroll();\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.scroll && this.scroll.destroy();\r\n  // }\r\n  \r\n  // initScroll = () => {\r\n  //   if (!this.SWrapperRef.current) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   this.scroll = new BScroll(this.SWrapperRef.current);\r\n  // }\r\n\r\n  // refreshScroll = () => {\r\n  //   this.scroll && this.scroll.refresh();\r\n  // }\r\n\r\n  // destroyScroll = () => {\r\n  //   this.scroll.destroy();\r\n  // }\r\n\r\n  getSonglist = () => {\r\n    this.setState({isLoading: true});\r\n\r\n    const searchApi = `https://api.mlwei.com/music/api/wy/?key=523077333&cache=1&type=songlist&id=${this.plId}`;\r\n\r\n    window.fetch(searchApi, {\r\n      method: 'GET',\r\n      headers: { 'Accept': '*' },\r\n      mode: 'cors'\r\n    }).then(response => {\r\n      // console.log(response);\r\n      return response.status === 200 ? response.json() : {};\r\n    }).then(data => {\r\n      // console.log('data',data);\r\n      let resultData = [];\r\n      if (data.Body) {\r\n        resultData = data.Body.map(song => {\r\n          const { id, title, author, pic } = song;\r\n          return {\r\n            id: id,\r\n            link: `/song?id=${id}`,\r\n            name: title,\r\n            artists: [{name: author}],\r\n            album: {picUrl: pic}\r\n          };\r\n        });\r\n      }\r\n      // console.log('resultData',resultData);\r\n      this.setState({\r\n        songlist: resultData,\r\n        isLoading: false,\r\n      });\r\n      \r\n    }).catch(reason => {\r\n      console.log(reason);\r\n      this.setState({isLoading: false});\r\n    });\r\n  }\r\n\r\n  handleClickPlayallOrAddall(funcPlayallOrAddall) {\r\n    const songlist = _.cloneDeep(this.state.songlist);\r\n    funcPlayallOrAddall(songlist);\r\n  }\r\n\r\n  handlePlaySong(ev, funcPlaySong, songIndex) {\r\n    ev.stopPropagation();\r\n    funcPlaySong(_.cloneDeep(this.state.songlist[songIndex]));\r\n  }\r\n\r\n  render() {\r\n    const { transitionClass, playlistIntro, toggleShowPlDetail } = this.props;\r\n    const { songlist, isLoading } = this.state;\r\n      \r\n    const {\r\n      id,\r\n      coverUrl,\r\n      name,\r\n      playCount,\r\n      author,\r\n    } = playlistIntro;\r\n\r\n    this.plId = id;\r\n    \r\n    return (\r\n      <PlayerContext.Consumer>\r\n        {({ playerState, playAll, playSong }) => {\r\n          const { currentSong } = playerState;\r\n          {/* const matchedSongIdx = _.findIndex(songlist, ['id', currentSong.id]); */}\r\n          const curSongId = currentSong.id;\r\n\r\n          const listContent = songlist.length && songlist.map((song, idx) => {\r\n            const {\r\n              id,\r\n              name,\r\n              artists,\r\n              album,\r\n            } = song;\r\n    \r\n            let artistsTitle = artists.map(artist => artist.name).join('/');\r\n    \r\n            return (\r\n              <Item \r\n                key={id}\r\n                className={`mty-list-item ${id === curSongId ? 'playing':''}`}\r\n                activeStyle={{\r\n                  backgroundColor: '#ccc'\r\n                }}\r\n                onClick={(ev) => {this.handlePlaySong(ev, playSong, idx)}}\r\n              >\r\n                <div className=\"s-index\">{idx + 1}</div>\r\n                <div className=\"s-detail-wrap\">\r\n                  <div className=\"s-info\">\r\n                    <div className=\"s-name f-thide\">\r\n                      {name}\r\n                    </div>\r\n                    <div className=\"s-artists-alb f-thide\">\r\n                      {artistsTitle}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Item>\r\n            );\r\n          });\r\n\r\n          {/* console.log('listContent',!(listContent)); */}\r\n\r\n          return (\r\n            <div className={`PlaylistDetail ${transitionClass}`}>\r\n              <div className=\"pld-navbar-wrapper\">\r\n                <NavBar\r\n                  icon={<Icon type=\"left\"/>}\r\n                  onLeftClick={toggleShowPlDetail}\r\n                >\r\n                  歌单\r\n                </NavBar>\r\n              </div>\r\n              \r\n              <div \r\n                // ref={this.SWrapperRef}\r\n                className=\"scroll-wrapper\"\r\n                style={playerState.playingList.length ? {paddingBottom: '56px'} : {paddingBottom: '0px'}}\r\n              >\r\n                <div className=\"scroll-content\">\r\n\r\n                  {/* info sec 可抽出为容器组件 */}\r\n                  <section className=\"my-plinfo-wrap\">\r\n                    <PlaylistCover\r\n                      src={`${coverUrl}?param=336y336`}\r\n                      style={{\r\n                        width: '1.12rem',\r\n                        height: '1.12rem',\r\n                      }}\r\n                      playCount={playCount}\r\n                    />\r\n\r\n                    {/* intro */}\r\n                    <div className=\"plinfo-right\">\r\n                      <h2 className=\"f-brk title\">\r\n                        {name}\r\n                      </h2>\r\n                      <div className=\"author f-thide\">\r\n                        {/* <div className=\"avatar\">\r\n                          <img src={author.avatarUrl} alt=\"ava\" />\r\n                        </div> */}\r\n                        {author.name}\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                  \r\n                  {/* plyall btn */}\r\n                  <div className=\"playall-btn-wrapper\">\r\n                    <Item \r\n                      className=\"mty-list-item\"\r\n                      activeStyle={{\r\n                        backgroundColor: '#ddd'\r\n                      }}\r\n                      onClick={() => {this.handleClickPlayallOrAddall(playAll)}}\r\n                    > \r\n                      <div className=\"playall-btn\">\r\n                        <img \r\n                          src={PlayIcon} \r\n                          alt=\"playicon\"\r\n                        />\r\n                        <span>播放全部</span>\r\n                        <span className=\"song-num\">\r\n                          共({songlist.length})首\r\n                        </span>\r\n                      </div>\r\n                    </Item>\r\n                  </div>\r\n                  {/* song list */}\r\n                  <List className={listContent ? '':'no-content'}>\r\n                    {listContent ? listContent : (\r\n                      isLoading ? (\r\n                        <div className=\"loading-box\"><Loading /></div>\r\n                      ) : (\r\n                        <div className=\"result-box\"><Result title=\"网络开小差了\" /></div>\r\n                      )\r\n                    )}\r\n                  </List>\r\n\r\n                </div>\r\n              </div>\r\n\r\n              {/* 模糊背景 可抽出为组件 */}\r\n              <div className=\"bg-wrap\">\r\n                <div \r\n                  className=\"fullscreen-blur-bg\" \r\n                  style={{\r\n                    backgroundImage: `url(${coverUrl}?param=336y336)`\r\n                  }}\r\n                >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </PlayerContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlaylistDetail;","import React from 'react';\r\nimport { List } from 'antd-mobile';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nimport PlayerContext from '../../context/PlayerContext';\r\nimport './Home.less';\r\n\r\nimport Search from '../Search/Search';\r\nimport BannerSlider from '../BannerSlider/BannerSlider';\r\nimport PlaylistCover from '../PlaylistCover/PlaylistCover.jsx';\r\nimport PlaylistDetail from '../PlaylistDetail/PlaylistDetail.jsx';\r\n\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\n// TODO: 无限加载\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      rcmdPlaylists: [\r\n        {\r\n          \"id\": 2406347748,\r\n          \"coverUrl\": \"http://p2.music.126.net/tkQ6Zb_eBdUsFAeD6PM-2A==/109951163547241213.jpg\",\r\n          \"name\": \"2018全美音乐奖提名名单（AMAs）\",\r\n          \"link\": \"/playlist?id=2406347748\",\r\n          \"playCount\": \"126万\",\r\n          \"author\": {\r\n            \"name\": \"DoubleRainbow_\",\r\n            \"homeLink\": \"/user/home?id=3226705\"\r\n          }\r\n        }, {\r\n          \"id\": 2439954234,\r\n          \"coverUrl\": \"http://p2.music.126.net/dBdq_Rs_pexuA8GqkZLcKA==/109951163599919632.jpg\",\r\n          \"name\": \"听首情歌说唱 | 做个甜甜的梦\",\r\n          \"link\": \"/playlist?id=2439954234\",\r\n          \"playCount\": \"211万\",\r\n          \"author\": {\r\n            \"name\": \"章若楠nn\",\r\n            \"homeLink\": \"/user/home?id=640698142\"\r\n          }\r\n        }, {\r\n          \"id\": 2497731034,\r\n          \"coverUrl\": \"http://p2.music.126.net/AtlN3uAvGczoL-xQN7FTtQ==/109951163643083559.jpg\",\r\n          \"name\": \"初恋糖配料表：你的马尾辫和衬衫味道\",\r\n          \"link\": \"/playlist?id=2497731034\",\r\n          \"playCount\": \"542万\",\r\n          \"author\": {\r\n            \"name\": \"驴子鬼\",\r\n            \"homeLink\": \"/user/home?id=246029257\"\r\n          }\r\n        }, {\r\n          \"id\": 2390539027,\r\n          \"coverUrl\": \"http://p2.music.126.net/8BZpZdDiDZatIiQMJnoKyg==/109951163736178562.jpg\",\r\n          \"name\": \"那些超带感的英文歌曲~『一秒沦陷』\",\r\n          \"link\": \"/playlist?id=2390539027\",\r\n          \"playCount\": \"351万\",\r\n          \"author\": {\r\n            \"name\": \"Mysterious-Box\",\r\n            \"homeLink\": \"/user/home?id=1558934331\"\r\n          }\r\n        }, {\r\n          \"id\": 2554253084,\r\n          \"coverUrl\": \"http://p2.music.126.net/mP8ulkyTDGmoj6jlZ_sblQ==/109951163722284832.jpg\",\r\n          \"name\": \"Future Bass丨醉寻心涧跳动的梦幻电子⚡️\",\r\n          \"link\": \"/playlist?id=2554253084\",\r\n          \"playCount\": \"61万\",\r\n          \"author\": {\r\n            \"name\": \"Kirin电子站\",\r\n            \"homeLink\": \"/user/home?id=1489420441\"\r\n          }\r\n        }, {\r\n          \"id\": 2312165875,\r\n          \"coverUrl\": \"http://p2.music.126.net/Cl0-NpZ0ESTDjJ1HmZ33KA==/109951163460576279.jpg\",\r\n          \"name\": \"100首华语民谣，因为懂得才有共鸣\",\r\n          \"link\": \"/playlist?id=2312165875\",\r\n          \"playCount\": \"1107万\",\r\n          \"author\": {\r\n            \"name\": \"情思天鹅\",\r\n            \"homeLink\": \"/user/home?id=108952364\"\r\n          }\r\n        }\r\n      ],\r\n      playlists: [],\r\n      showPlDetail: false,\r\n      clickedPl: {},\r\n    };\r\n    this.curPage = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPlaylists(this.curPage);\r\n  }\r\n\r\n  toggleShowPlDetail = () => {\r\n    this.setState(prevState => {\r\n      return { showPlDetail: !prevState.showPlDetail };\r\n    });\r\n  }\r\n\r\n  handleClickPlaylist = (ev) => {\r\n    // ev.stopPropagation();\r\n    const elem = ev.currentTarget;\r\n    // console.log(elem);\r\n    // console.log(ev.currentTarget.attributes);\r\n    // console.log(elem.hasAttribute('data-index'));\r\n\r\n    if (elem.hasAttribute('data-index')) {\r\n\r\n      const index = elem.getAttribute('data-index');\r\n      // console.log(index);\r\n      let pl = null;\r\n\r\n      this.setState(prevState => {\r\n        if (elem.getAttribute('data-plcate') === 'rcmd') {\r\n          pl = prevState.rcmdPlaylists[index];\r\n        } else {\r\n          pl = prevState.playlists[index];\r\n        }\r\n        return {\r\n          showPlDetail: true,\r\n          clickedPl: pl,\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  getPlaylists = (pageIndex) => {\r\n    const plsUrl = `${\r\n      process.env.PUBLIC_URL\r\n    }/api_mock_data/playlists/all/p${pageIndex}.json`;\r\n\r\n    window.fetch(plsUrl).then(\r\n      response => response.status === 200 ? response.json() : ''\r\n    ).then(\r\n      data => {\r\n        this.setState({ playlists: data });\r\n      }\r\n    ).catch(\r\n      reason => console.log(reason)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { rcmdPlaylists, playlists, showPlDetail, clickedPl } =this.state;\r\n\r\n    // tuijian gedan\r\n    const rcmdlist = rcmdPlaylists.map((playlist, idx) => {\r\n      const {\r\n        id,\r\n        coverUrl,\r\n        name,\r\n        playCount,\r\n      } = playlist;\r\n\r\n      return (\r\n        <li\r\n          key={id}\r\n          className=\"pl-li\"\r\n          data-index={idx}\r\n          data-plcate=\"rcmd\"\r\n          onClick={(ev) => this.handleClickPlaylist(ev)}\r\n        >\r\n          <div className=\"cover-wrapper\">\r\n            <PlaylistCover\r\n              src={`${coverUrl}?param=400y400`}\r\n              style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n              playCount={playCount}\r\n            />\r\n          </div>\r\n          <p className=\"dec\">{name}</p>\r\n        </li>\r\n      );\r\n    });\r\n    //  quanbu gedan\r\n    const allPlContent = playlists && playlists.map((playlist, idx) => {\r\n      const {\r\n        id,\r\n        coverUrl,\r\n        name,\r\n        playCount,\r\n        author,\r\n      } = playlist;\r\n\r\n      return (\r\n        <Item\r\n          key={id}\r\n          thumb={`${coverUrl}?param=200y200`}\r\n          onClick={(ev) => this.handleClickPlaylist(ev)}\r\n          multipleLine\r\n          data-index={idx}\r\n          data-plcate=\"all\"\r\n        >\r\n          {name} <Brief>{`${author.name} · ${playCount}次播放`}</Brief>\r\n        </Item>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <PlayerContext.Consumer>\r\n        {({playerState}) => (\r\n          <React.Fragment>\r\n            <Search />\r\n            <div\r\n              className=\"playlists\"\r\n              style={playerState.playingList.length ? {paddingBottom: '56px'} : {paddingBottom: '0px'}}\r\n            >\r\n              <BannerSlider/>\r\n              <div key=\"cate\" className=\"pl-cat\">\r\n                推荐歌单\r\n              </div>\r\n              <ul\r\n                key=\"cvrlst\"\r\n                className=\"pl-cvrlst\"\r\n              >\r\n                {rcmdlist}\r\n              </ul>\r\n              {/* all pl */}\r\n              <List renderHeader={() => '全部歌单'}>\r\n                {allPlContent}\r\n              </List>\r\n            </div>\r\n\r\n            <Transition\r\n              in={showPlDetail}\r\n              timeout={150}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              {(status) => {\r\n                return (\r\n                  <PlaylistDetail\r\n                    transitionClass={`slide-up slide-up-${status}`}\r\n                    playlistIntro={clickedPl}\r\n                    toggleShowPlDetail={this.toggleShowPlDetail}\r\n                  />\r\n                );\r\n              }}\r\n            </Transition>\r\n          </React.Fragment>\r\n        )}\r\n      </PlayerContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\nimport { List } from \"antd-mobile\";\n\nimport _ from 'lodash';\n\nimport CoverPlaceholder from '../../images/cover-placeholder.png';\nimport './MiniPlayer.less';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nclass MiniPlayer extends Component {\n\n  render() {\n    let {\n      transitionClass,\n      curSong,\n      isPauseIcon,\n      clickPlayPauseHandler,\n      toggleFullplayer,\n      togglePlayingList,\n    } = this.props;\n\n    // play plp btns\n    const extraContent = (\n      <div className=\"miniplayer-btns-wrapper\">\n        <div \n          className={`btn ${isPauseIcon ? 'pause' : 'play'}-icon`}\n          onClick={clickPlayPauseHandler}\n        ></div>\n        <div\n          className=\"btn playlist-icon\"\n          onClick={togglePlayingList}\n        ></div>\n      </div>\n    );\n\n    let contentItem = null;\n\n    if (_.isEmpty(curSong)) {\n      contentItem = (\n        <Item\n          className=\"miniplayer-content\"\n          extra={extraContent}\n          multipleLine\n        >\n          听我想听的歌\n        </Item>\n      );\n    } else {\n      const {\n        name,\n        artists,\n        album,\n      } = curSong;\n  \n      // album cover \n      let imgSrc = '';\n      // 判断条件可能要改\n      if (album.picUrl && album.picUrl.length && album.picUrl.includes('http')) {\n        imgSrc = `${album.picUrl}`;\n      } else {\n        imgSrc = CoverPlaceholder;\n      }\n\n      contentItem = (\n        <Item\n          className=\"miniplayer-content\"\n          thumb={imgSrc}\n          extra={extraContent}\n          onClick={toggleFullplayer}\n          activeStyle={{ backgroundColor: '#fff'}}\n          multipleLine\n        >\n          {name}\n          <Brief>{artists.map(val => val.name).join('/')}</Brief>\n        </Item>\n      );\n    }\n\n    return (\n      <div className={`miniplayer ${transitionClass}`}>\n        {contentItem}\n      </div>\n    );\n  }\n}\n \nexport default MiniPlayer;","import React, { Component } from 'react'\nimport BScroll from 'better-scroll';\n\nimport './Scroll.less';\n\nclass Scroll extends Component {\n\n  SWrapperRef = React.createRef();\n\n  componentDidMount() {\n    this.initScroll();\n  }\n\n  componentWillUnmount() { this.scroll && this.scroll.destroy(); }\n  \n  initScroll = () => {\n    if (!this.SWrapperRef.current) { return; }\n    this.scroll = new BScroll(this.SWrapperRef.current, {click: true});\n  }\n\n  refreshScroll = () => { this.scroll && this.scroll.refresh(); }\n\n  destroyScroll = () => { this.scroll.destroy(); }\n  \n  scrollToElement() {\n    this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments)\n  }\n\n  render() {\n    const { style, className, children, ...restProps } = this.props;\n\n    return (\n      <div \n        ref={this.SWrapperRef}\n        style={style}\n        className={`scroll-wrapper ${className}`}\n        {...restProps}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Scroll;","import React from 'react';\nimport { NavBar, Icon, Slider } from 'antd-mobile';\nimport { Transition } from 'react-transition-group';\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport CoverPlaceholder from '../../images/cover-placeholder.png';\nimport './FullPlayer.less';\n\nimport Scroll from '../Scroll/Scroll.jsx';\n\nclass FullPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      // lyric: [],\n      // timestampArr: [],\n      showCover: true,\n      showLyric: false,\n      // progress: 0,\n    };\n    this.ScrollRef = React.createRef();\n    this.ProgressWrapRef = React.createRef();\n    this.ProgressBarRef = React.createRef();\n    \n    // this.songId = 0;\n    this.diffSong = true;\n    this.curLyricIndex = -1;\n    this.curLyricIndexChange = false;\n    this.isTouching = false;\n    this.progress = 0;\n  }\n\n  componentDidMount() {\n    // console.log('fullplayer mount');\n    const ProgressBarElem = this.ProgressBarRef.current;\n    this.progressBarWidth = ProgressBarElem.clientWidth;\n  }\n\n  componentDidUpdate() {\n    if (this.state.showLyric && this.lyric.length) {\n      \n      if (this.diffSong) {\n        this.ScrollRef.current.scrollToElement('p.sentence',1000,false,true);\n      } else {\n        if (this.curLyricIndexChange && this.curLyricIndex >= 5) {\n          this.ScrollRef.current.scrollToElement('p.is-curSentence',1000,false,true);\n        }\n      }\n    }\n  }\n  handleTouchStart = (ev, fnPlay, fnPause) => {\n    if (_.isEmpty(this.curSong)) { return; }\n\n    this.isTouching = true;\n\n    const target = ev.target;\n    // console.log(ev.type);\n    // console.log(ev.targetTouches);\n\n    const ProgressBarElem = this.ProgressBarRef.current;\n    // this.progressBarWidth = ProgressBarElem.clientWidth;\n    // console.log('progressBarWidth', this.progressBarWidth);\n    this.progressBarOffsetLeft = ProgressBarElem.offsetLeft;\n    // console.log('offsetLeft', this.progressBarOffsetLeft);\n    this.touchmoveLeftEdge = this.progressBarOffsetLeft - 8;\n    this.touchmoveRightEdge = this.progressBarOffsetLeft + this.progressBarWidth + 8;\n    // console.log(this.touchmoveLeftEdge, this.touchmoveRightEdge);\n\n    this.prevTouchX = ev.targetTouches[0].clientX;\n    // console.log('prevTouchX', this.prevTouchX);\n\n    const ProgressWrapElem = this.ProgressWrapRef.current;\n    // console.log(ProgressWrapElem.offsetWidth);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this, fnPlay);\n    ProgressWrapElem.addEventListener('touchmove', this.handleTouchMove);\n    ProgressWrapElem.addEventListener('touchend', this.handleTouchEnd);\n\n    fnPause();\n  }\n\n  handleTouchMove = (ev) => {\n    // console.log(ev.type);\n    // console.log(ev.touches);\n    const nextTouchX = ev.touches[0].clientX;\n    // console.log('nextTouchX', nextTouchX);\n\n    if (this.touchmoveLeftEdge < nextTouchX && nextTouchX < this.touchmoveRightEdge) {\n      const deltaX = nextTouchX - this.prevTouchX;\n      this.prevTouchX = nextTouchX;\n      // console.log(deltaX);\n      let nextProgress = this.progress + deltaX;\n      if (nextProgress < 0) {\n        nextProgress = 0;\n      } else if (nextProgress > this.progressBarWidth) {\n        nextProgress = this.progressBarWidth;\n      }\n      this.progress = nextProgress;\n\n      this.props.updateCurrentTime((nextProgress / this.progressBarWidth));\n\n      // this.setState(prevState => {\n      //   let nextProgress = prevState.progress + deltaX;\n      //   if (nextProgress < 0) {\n      //     nextProgress = 0;\n      //   } else if (nextProgress > this.progressBarWidth) {\n      //     nextProgress = this.progressBarWidth;\n      //   }\n      //   return { progress: nextProgress };\n      // }, () => {this.props.updateCurrentTime((this.state.progress / this.progressBarWidth))});\n\n    }\n  }\n\n  handleTouchEnd(fnPlay, ev) {\n    // console.log(ev.type);\n    // console.log(ev.changedTouches);\n    this.isTouching = false;\n\n    const ProgressWrapElem = this.ProgressWrapRef.current;\n    ProgressWrapElem.removeEventListener('touchmove', this.handleTouchMove);\n    ProgressWrapElem.removeEventListener('touchend', this.handleTouchEnd);\n\n    fnPlay();\n  }\n\n  handleClickLyric = () => {\n    this.setState({\n      showCover: true,\n      showLyric: false,\n    });\n  }\n  handleClickCover = () => {\n    this.setState({\n      showCover: false,\n      showLyric: true,\n    });\n  }\n\n  render() {\n    // console.log('fullplayer render');\n    let {\n      transitionClass,\n      curSong,\n      diffSong,\n      playState,\n      mode,\n      clickPlayPauseHandler,\n      clickPrevBtnHandler,\n      clickNextBtnHandler,\n      clickModeBtnHandler,\n      toggleFullplayer,\n      togglePlayingList,\n    } = this.props;\n\n    const {\n      showCover,\n      showLyric,\n      // progress,\n    } = this.state;\n\n    this.curSong = curSong;\n\n    if (_.isEmpty(curSong)) {\n      return (\n        <div className={`fullplayer ${transitionClass}`}>\n          <NavBar\n            className=\"my-fullplayer-navbar\"\n            icon={<Icon type=\"down\"/>}\n            onLeftClick={toggleFullplayer}\n          >\n            听我想听的歌\n          </NavBar>\n\n          <div className=\"mid-wrapper\">\n            <div className=\"cd-box\">\n              <div className=\"cd-wrapper\">\n                <div className=\"cd\">\n                  <img\n                    className=\"image\"\n                    src={CoverPlaceholder}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"background\"></div>\n        </div>\n      );\n    }\n\n    // else\n    const { id, name, artists, album} = curSong;\n\n    const {\n      duration,\n      curTime,\n      playProgress,\n      isPauseIcon,\n      lyric,\n      curLyricIndex,\n      curLyricIndexChange,\n    } = playState;\n\n    // this.diffSong = this.songId !== id;\n    // this.songId = id;\n    this.diffSong = diffSong;\n    this.curLyricIndex = curLyricIndex;\n    this.curLyricIndexChange = curLyricIndexChange;\n    this.lyric = lyric;\n\n    const navBarTitleCnt = (\n      <div className=\"navbar-title-content\">\n        <p className=\"song-name f-thide\">{name}</p>\n        <p className=\"artists-name f-thide\">\n          - {artists.map(val => val.name).join('/')} -\n        </p>\n      </div>\n    );\n\n    // lyric\n    let \n      // curLyricIndex = 0,\n      lyricContent = null,\n      translateY = 0,\n      maxTranslateY = 0;\n\n    if (lyric.length) {\n      // curLyricIndex\n      // curLyricIndex = _.findLastIndex(timestampArr, val => val <= curTimestamp);\n      // this.curLyricIndexChange = this.curLyricIndex === curLyricIndex;\n      // this.curLyricIndex = curLyricIndex;\n      // lyricContent\n      lyricContent = lyric.map((val, idx) => {\n        const lrcCls = `sentence${\n          idx === curLyricIndex ? ' is-curSentence' : ''\n        }`;\n\n        const sentenceEl = (\n          <p \n            id={idx}\n            key={idx}\n            style={(val === '') ? {height: '18px'} : {}}\n            className={lrcCls}\n          >\n            {val}\n          </p>\n        );\n\n        return sentenceEl;\n      });\n\n      // 34px 为一行歌词的行高\n      translateY = (curLyricIndex <= 3) ? 0 : -(curLyricIndex - 3) * 40;\n      maxTranslateY =  -(lyric.length * 40);\n\n      if (translateY < maxTranslateY) {\n        translateY = maxTranslateY;\n      }\n    }\n\n    // album cover \n    let imgSrc = '';\n    // 判断条件可能要改\n    if (album.picUrl && album.picUrl.length && album.picUrl.includes('http')) {\n      imgSrc = `${album.picUrl}`;\n    } else {\n      imgSrc = CoverPlaceholder;\n    }\n\n    // playprogress\n    const playProgressWidth = this.progressBarWidth * parseFloat(playProgress);\n    this.progress = playProgressWidth;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ play, pause }) => {\n\n          return (\n            <div className={`fullplayer ${transitionClass}`}>\n              <NavBar\n                className=\"my-fullplayer-navbar\"\n                icon={<Icon type=\"down\"/>}\n                onLeftClick={toggleFullplayer}\n              >\n                {navBarTitleCnt}\n              </NavBar>\n\n              {/* cd */}\n              <Transition\n                in={showCover}\n                timeout={100}\n                mountOnEnter\n                unmountOnExit\n              >\n                {(status) => {\n                  return (\n                    <div className={`mid-wrapper fade fade-${status}`}>\n                      <div\n                        className=\"cd-box\"\n                        onClick={() => this.handleClickCover()}\n                      >\n                        <div className=\"cd-wrapper\">\n                          <div className=\"cd\">\n                            <img\n                              className=\"image\"\n                              src={imgSrc}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }}\n              </Transition>\n\n              {/* lyric */}\n              <Transition\n                in={showLyric}\n                timeout={100}\n                mountOnEnter\n                unmountOnExit\n              >\n                {(status) => {\n                  return (\n                    <Scroll\n                      ref={this.ScrollRef}\n                      className={`lyric-wrapper fade fade-${status}`}\n                      onClick={() => this.handleClickLyric()}\n                    >\n                      <div className=\"scroll-content\">\n                        {lyricContent ? (\n                          <div className=\"lyric\">\n                            {lyricContent}\n                          </div>\n                        ) : (\n                          <p className=\"no-lyric\">暂无歌词</p>\n                        )}\n                      </div>\n                    </Scroll>\n                  );\n                }}\n              </Transition>\n              \n              <div className=\"btm-wrapper\">\n                <div className=\"progress-wrapper\" ref={this.ProgressWrapRef}>\n\n                  <p className=\"time time-cur\">{curTime}</p>\n\n                  <div className=\"progress-bar-wrapper\">\n                    <div\n                      ref={this.ProgressBarRef}\n                      className=\"progress-bar\"\n                    >\n                      <div className=\"bar-inner\">\n                        <div\n                          className=\"progress\"\n                          style={{width: `${this.isTouching ? this.progress:playProgressWidth}px`}}\n                          // style={{width: `${playProgressWidth}px`}}\n                        ></div>\n                        <div\n                          className=\"progress-btn-wrapper\"\n                          style={{transform: `translate3d(${this.isTouching ? this.progress:playProgressWidth}px, 0px, 0px)`}}\n                          // style={{transform: `translate3d(${playProgressWidth}px, 0px, 0px)`}}\n                          onTouchStart={(ev) => this.handleTouchStart(ev, play, pause)}\n                        >\n                          <div className=\"progress-btn\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <p className=\"time time-dur\">{duration}</p>\n                </div>\n\n                <div className=\"operators\">\n                  <div\n                    className={`btn ${mode}-icon`}\n                    onClick={clickModeBtnHandler}\n                  ></div>\n                  <div\n                    className=\"btn prev-icon\"\n                    onClick={clickPrevBtnHandler}\n                  ></div>\n                  <div\n                    className={`btn ${isPauseIcon ? 'pause' : 'play'}-icon`}\n                    onClick={clickPlayPauseHandler}\n                  ></div>\n                  <div\n                    className=\"btn next-icon\"\n                    onClick={clickNextBtnHandler}\n                  ></div>\n                  <div\n                    className=\"btn list-icon\"\n                    onClick={togglePlayingList}\n                  ></div>\n                </div>\n              </div>\n\n              <div className=\"background\">\n                <img \n                  width=\"100%\"\n                  height=\"100%\"\n                  src={imgSrc}\n                />\n              </div>\n            </div>\n\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default FullPlayer;","import React from 'react';\nimport { List } from 'antd-mobile';\n\nimport PlayerContext from '../../context/PlayerContext';\n\nimport './PlayingList.less';\n\nconst Item = List.Item;\n\nclass PlayingList extends React.Component {\n\n  componentDidMount() {\n    window.document.querySelector('.playing-list .active-song').scrollIntoView();\n  }\n  \n  render() {\n    const { maskFadeClass, transitionClass, togglePlayingList } = this.props;\n    \n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, playByIndex, deleteSong, clearPlaylist }) => {\n          const {\n            playingList,\n            curSongIndex,\n          } = playerState;\n\n          const extraClearBtn = (\n            <div\n              className=\"btn delete-icon\"\n              onClick={() => clearPlaylist()}\n            ></div>\n          );\n\n          const listItemArr = playingList.map((song, idx) => {\n            const {\n              id,\n              name,\n              artists,\n            } = song;\n    \n            const extraCloseBtn = (\n              <div\n                className=\"btn close-icon\"\n                onClick={(ev) => {\n                  ev.stopPropagation();\n                  deleteSong(idx);\n                }}\n              ></div>\n            );\n\n            return (\n              <Item \n                key={id}\n                className={`${curSongIndex === idx ? 'active-song' : ''}`}\n                extra={extraCloseBtn}\n                onClick={() => playByIndex(idx)}\n              >\n                {name}\n                <span className=\"song-artists-alb\">\n                  {' - ' + artists.map(val => val.name).join('/')}\n                </span>\n              </Item>\n            );\n          });\n\n          return (\n            <div className={`playing-list-back-mask ${maskFadeClass}`}>\n              <div \n                className={`playing-list ${transitionClass}`}\n                onTouchStart={(ev) => ev.stopPropagation()}\n              >\n                <Item\n                  extra={extraClearBtn}\n                  multipleLine\n                >\n                  播放列表\n                  <span className=\"song-num\">\n                    共({playingList.length})首\n                  </span>\n                </Item>\n                <List>\n                  {listItemArr}\n                </List>\n                <Item\n                  className=\"close-btn\"\n                  onClick={togglePlayingList}\n                  multipleLine\n                >\n                  关闭\n                </Item>\n              </div>\n            </div>\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default PlayingList;","import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport MiniPlayer from '../MiniPlayer/MiniPlayer.jsx';\nimport FullPlayer from '../FullPlayer/FullPlayer.jsx';\nimport PlayingList from '../PlayingList/PlayingList.jsx';\n\n// import './Player.less';\n\nclass Player extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modeIndex: 0,\n      duration: '00:00',\n      curTime: '00:00',\n      playProgress: '0',\n      // 歌词相关\n      // curTimestamp: 0, \n      lyric: [],\n      timestampArr: [],\n      curLyricIndex: -1,\n      curLyricIndexChange: false,\n      isPauseIcon: false,\n      // showMiniplayer: false,\n      showFullplayer: false,\n      showPlayingList: false,\n    };\n    this.audioRef = React.createRef();\n    // this.handleChangeProgress = this.handleChangeProgress.bind(this);\n    // this.handleAfterChangeProgress = this.handleAfterChangeProgress.bind(this);\n\n    this.songId = 0; // lyric\n    this.diffSong = false; // lyric\n    this.curSongIndex = -1;\n    this.audioAmount = 0;\n    this.isPause = true; // 指示 进行播放还是暂停\n    this.songUrlApi = 'https://music.163.com/song/media/outer/url?id='; // ?id=350909 会返回一个重定向响应\n    this.currentSong = {};\n\n    this.playMode = [\n      {\n        desc: '列表循环',\n        className: 'loop',\n      },\n      {\n        desc: '单曲循环',\n        className: 'single',\n      },\n      {\n        desc: '随机播放',\n        className: 'random',\n      }\n    ];\n  }\n\n  componentDidMount() {\n    // console.log('player mount');\n    // this.getLyric();\n  }\n\n  componentDidUpdate() {\n    // console.log('player Update');\n    if (this.isNoAudio()) {\n      return;\n    }\n    if (this.isPause) {\n      if (!(this.audioRef.current.paused)) {\n        this.pauseAudio();\n      }\n    } else {\n      if (this.audioRef.current.paused) {\n        this.playAudio();\n      }\n    }\n    // lyric\n    // console.log(this.diffSong);\n    if (this.diffSong) {\n      this.getLyric();\n    }\n  }\n\n  getLyric = () => {\n    const lrcUrl = `https://api.mlwei.com/music/api/wy/?key=523077333&cache=1&type=lrc&id=${this.songId}`;\n    // console.log(lrcUrl);\n    \n    window.fetch(lrcUrl, {\n      method: 'GET',\n      headers: { 'Accept': '*' },\n      mode: 'cors'\n    }).then(\n      response => {\n        // console.log(response);\n        return response.status === 200 ? response.text() : null;\n      }\n    ).then(\n      data => {\n        const \n          lyric = [],\n          timestampArr = [];\n\n        if (data) {\n          // console.log(data);\n          const lrcArr = data.split('\\n');\n          // state\n  \n          lrcArr.forEach((lrc) => {\n            const matchPart = lrc.match(/\\[(.*)\\](.*)/);\n  \n            if (matchPart) {\n              \n              const \n                timestampParts = matchPart[1].trim().split(':'),\n                part1 = parseInt(timestampParts[0]) * 60,\n                part2 = parseFloat(timestampParts[1]),\n                timestamp = part1 + part2;\n              \n              if (!isNaN(timestamp)) {\n                lyric.push(matchPart[2].trim());\n                timestampArr.push(timestamp);\n              }\n            }\n          });\n  \n          // console.log(lyric);\n          // console.log(timestampArr);\n        }\n\n        this.setState({\n          lyric: lyric,\n          timestampArr: timestampArr,\n          curLyricIndex: -1,\n        });\n      }\n    ).catch(\n      reason => {\n        // console.log(reason);\n        this.setState({\n          lyric: [],\n          timestampArr: [],\n        });\n      }\n    );\n  }\n\n  playAudio() {\n    this.audioRef.current.play().then(() => {\n      // console.log('play.then');\n      this.setState({ isPauseIcon: true });\n    }, (reason) => {\n      console.log(reason);\n    });\n  }\n\n  pauseAudio() {\n    this.audioRef.current.pause();\n    this.setState({ isPauseIcon: false });\n  }\n\n  handleClickPlayPause(ev, funcPlay, funcPause) {\n    ev.stopPropagation();\n    if (this.isNoAudio()) {\n      return;\n    }\n    if (this.audioRef.current.paused) {\n      const index = this.curSongIndex;\n      funcPlay(index);\n    } else {\n      funcPause();\n    }\n  }\n\n  handleClickPrevBtn(funcPlay) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    this.setState({ playProgress: '0' });\n    const index = this.getIndex(true);\n    funcPlay(index);\n  }\n\n  handleClickNextBtn(funcPlay) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    this.setState({ playProgress: '0' });\n    const index = this.getIndex();\n    funcPlay(index);\n  }\n\n  handleClickModeBtn() {\n    if (this.isNoAudio()) {\n      return;\n    }\n    const nextIndex = (this.state.modeIndex + 1) % this.playMode.length;\n\n    this.audioRef.current.loop = nextIndex === 1;\n    this.setState({ modeIndex: nextIndex });\n  }\n\n  toggleFullplayer = () => {\n    this.setState(state => ({\n      showFullplayer: !state.showFullplayer\n    }));\n  }\n\n  togglePlayingList = (ev) => {\n    ev.stopPropagation();\n    this.setState(state => ({\n      showPlayingList: !state.showPlayingList\n    }));\n  }\n  \n  // audio\n  handleDurationChange() {\n    // console.log('handleDurationChange');\n    this.setState({\n      duration: this.timeFormat(this.audioRef.current.duration),\n      playProgress: '0',\n      curTime: '00:00'\n    });\n  }\n  // use by fullplayer\n  updateCurrentTime = (playPercentage) => {\n    const \n      audioElem = this.audioRef.current,\n      duration = audioElem.duration;\n      \n    audioElem.currentTime = duration * playPercentage;\n  }\n\n  handleTimeUpdate() {\n    const\n      { curTime, curLyricIndex, timestampArr } = this.state,\n      { duration, currentTime } = this.audioRef.current;\n    \n    const\n      nextCurTime = this.timeFormat(currentTime),\n      nextPlayProgress = `${(currentTime / duration).toFixed(3)}`,\n      // nextPlayProgress = `${(currentTime / duration * 100).toFixed(2)}%`,\n      nextCurLyricIndex = _.findLastIndex(timestampArr, val => val <= currentTime);\n  \n    if (curTime !== nextCurTime) {\n      this.setState({\n        curTime: nextCurTime,\n        playProgress: nextPlayProgress,\n      });\n    } else if (currentTime === duration) {\n      this.setState({\n        playProgress: nextPlayProgress\n      });\n    }\n    // lyric\n    if (curLyricIndex !== nextCurLyricIndex) {\n      this.setState({\n        curLyricIndex: nextCurLyricIndex,\n        curLyricIndexChange: true,\n      });\n    } else {\n      this.setState({\n        curLyricIndexChange: false,\n      });\n    }\n  }\n\n  handleEnded(funcPlay) {\n    const index = this.getIndex();\n    this.setState({ loadProgress: '0', playProgress: '0' });\n    funcPlay(index);\n  }\n\n  handleAudioError() {\n    const audioElem = this.audioRef.current;\n    // console.log(audioElem.error);\n    \n    // TODO 完善无版权歌曲处理\n    if (audioElem.error.code === 2) {\n      audioElem.load();\n      audioElem.currentTime = parseFloat(this.state.playProgress) / 100;\n      // console.log(this.state.playProgress);\n    }\n  }\n\n  // Util\n  isNoAudio() {\n    return (this.audioAmount === 0);\n  }\n\n  timeFormat(timeNum) {// mm:ss\n    const minutes = parseInt(`${timeNum / 60}`),  // 商\n          seconds = parseInt(`${timeNum % 60}`),  // 余数\n          minStr = minutes < 10 ? `0${minutes}` : `${minutes}`,\n          secStr = seconds < 10 ? `0${seconds}` : `${seconds}`;\n\n    return `${minStr}:${secStr}`;\n  }\n\n  getIndex(isPrev) {\n    if (isPrev === undefined) {\n      isPrev = false;\n    }\n    let index = 0;\n    switch (this.state.modeIndex) {\n      case 0:\n      case 1:\n        if (isPrev) {\n          index = (\n              this.curSongIndex - 1 + this.audioAmount\n            ) % this.audioAmount;\n        } else {\n          index = (this.curSongIndex + 1) % this.audioAmount;\n        }\n        break;\n      case 2:\n        index = parseInt(Math.random() * this.audioAmount);\n        break;\n      default:\n        break;\n    }\n    return index;\n  }\n\n  render() {\n    // console.log('player render');\n    const { showFullplayer, showPlayingList } = this.state;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, playByIndex, pause }) => {\n          const {\n            playingList,\n            currentSong,\n            curSongIndex,\n            isPause,\n          } = playerState;\n          \n          const curSongId = currentSong.id;\n          {/* console.log(curSongId); */}\n          if (curSongId) {\n            this.diffSong = this.songId !== curSongId;\n            this.songId = curSongId;\n          }\n          this.curSongIndex = curSongIndex;\n          this.audioAmount = playingList.length;\n          this.isPause = isPause;\n          this.currentSong = currentSong;\n          this.isToReset = _.isEmpty(currentSong);\n\n          return (\n            <div className=\"audio-controls-panel\">\n              {/* music */}\n              <audio \n                ref={this.audioRef}\n                src={\n                  currentSong && currentSong.link ? `${this.songUrlApi}${currentSong.id}` : ''\n                }\n                onDurationChange={() => this.handleDurationChange()}\n                onTimeUpdate={() => this.handleTimeUpdate()}\n                onEnded={() => this.handleEnded(playByIndex)}\n                onError={() => this.handleAudioError()}\n              >\n              </audio>\n              \n              {/* mini full都用transition 包裹，currentSong为空时，做退出的效果。\n              且各自内部也对currentSong为空的情况做处理。 */}\n              <Transition\n                in={!this.isToReset}\n                timeout={150}\n                mountOnEnter\n                unmountOnExit\n              >\n                {(status) => {\n                  return (\n                    <MiniPlayer\n                      transitionClass={`slide-up slide-up-${status}`}\n                      curSong={currentSong}\n                      isPauseIcon={this.state.isPauseIcon}\n                      clickPlayPauseHandler={(ev) => this.handleClickPlayPause(ev, playByIndex, pause)}\n                      toggleFullplayer={this.toggleFullplayer}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n          \n              <Transition\n                in={this.isToReset ? false : showFullplayer}\n                timeout={250}\n                mountOnEnter\n                unmountOnExit\n                onExited={() => this.setState({showFullplayer: false})}\n              >\n                {(status) => {\n                  return (\n                    <FullPlayer\n                      transitionClass={`slide-up slide-up-${status}`}\n                      curSong={currentSong}\n                      diffSong={this.diffSong}\n                      playState={this.state}\n                      mode={this.playMode[this.state.modeIndex].className}\n                      clickPlayPauseHandler={(ev) => this.handleClickPlayPause(ev, playByIndex, pause)}\n                      clickPrevBtnHandler={() => this.handleClickPrevBtn(playByIndex)}\n                      clickNextBtnHandler={() => this.handleClickNextBtn(playByIndex)}\n                      clickModeBtnHandler={() => this.handleClickModeBtn()}\n                      changeProgressHandler={this.handleChangeProgress}\n                      afterChangeProgressHandler={this.handleAfterChangeProgress}\n                      toggleFullplayer={this.toggleFullplayer}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                      updateCurrentTime={this.updateCurrentTime}\n                    />\n                  );\n                }}\n              </Transition>\n              \n              {/* plp */}\n              <Transition\n                in={this.isToReset ? false : showPlayingList}\n                timeout={250}\n                mountOnEnter\n                unmountOnExit\n                onExited={() => this.setState({showPlayingList: false})}\n              >\n                {(status) => {\n                  return (\n                    <PlayingList\n                      maskFadeClass={`fade fade-${status}`}\n                      transitionClass={`slide-up slide-up-${status}`}\n                      listData={playingList}\n                      curSongIndex={curSongIndex}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n            </div>\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Player;","import React from 'react';\r\nimport l_array from 'lodash/array';\r\n\r\nimport PlayerContext from './context/PlayerContext';\r\nimport Home from './components/Home/Home.jsx';\r\nimport Player from './components/Player/Player.jsx';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playingList: [],\r\n      currentSong: {},\r\n      curSongIndex: -1,\r\n      isPause: true,\r\n      isLogin: false\r\n    };\r\n    // bind this to method\r\n    this.playByIndex = this.playByIndex.bind(this);\r\n    // this.pause = this.pause.bind(this);\r\n    this.deleteSong = this.deleteSong.bind(this);\r\n    this.clearPlaylist = this.clearPlaylist.bind(this);\r\n    this.playAll = this.playAll.bind(this);\r\n    this.addAll = this.addAll.bind(this);\r\n    this.playSong = this.playSong.bind(this);\r\n    this.addSongToNext = this.addSongToNext.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log('app mount');\r\n    const localData = window.localStorage.getItem('playData');\r\n    this.setState(JSON.parse(localData));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { playingList, currentSong, curSongIndex } = this.state;\r\n    window.localStorage.setItem('playData',JSON.stringify({ playingList, currentSong, curSongIndex }));\r\n  }\r\n\r\n  playByIndex(index) {\r\n    if (index >= 0) {\r\n      if (index === this.state.curSongIndex) {\r\n        if (this.state.isPause) {\r\n          this.setState({ isPause: false });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          currentSong: this.state.playingList[index],\r\n          curSongIndex: index,\r\n          isPause: false,\r\n        });\r\n      } \r\n    }\r\n  }\r\n\r\n  play = () => {\r\n    this.setState({ isPause: false });\r\n  }\r\n  pause = () => {\r\n    this.setState({ isPause: true });\r\n  }\r\n\r\n  // 删除歌曲\r\n  deleteSong(songIndex) {\r\n    const appState = this.state;\r\n\r\n    const playingList = appState.playingList;\r\n    let curSongIndex = appState.curSongIndex;\r\n\r\n    l_array.remove(playingList, (val, idx) => idx === songIndex);\r\n\r\n    if (playingList.length) {\r\n      \r\n      if (songIndex < curSongIndex) {\r\n        this.setState({\r\n          playingList: playingList,\r\n          curSongIndex: curSongIndex - 1,\r\n        });\r\n      } else if (songIndex === curSongIndex) {\r\n\r\n        curSongIndex = songIndex === playingList.length ? 0 : songIndex;\r\n\r\n        this.setState({\r\n          playingList: playingList,\r\n          currentSong: playingList[curSongIndex],\r\n          curSongIndex: curSongIndex,\r\n          isPause: false,\r\n        });\r\n      } else {\r\n        this.setState({ playingList: playingList });\r\n      }\r\n      \r\n    } else {\r\n      this.clearPlaylist();\r\n    }\r\n  }\r\n\r\n  clearPlaylist() {\r\n    this.setState({\r\n      playingList: [],\r\n      currentSong: {},\r\n      curSongIndex: -1,\r\n      isPause: true,\r\n    });\r\n  }\r\n\r\n  playAll(songlist) {\r\n    this.setState({\r\n      playingList: songlist,\r\n      curSongIndex: -1,\r\n    }, () => this.playByIndex(0));\r\n  }\r\n\r\n  addAll(songlist) {\r\n    const playingList = this.state.playingList;\r\n\r\n    if (playingList.length) {\r\n\r\n      // 歌单间重复的歌曲也被去重了\r\n      const songToAdd = l_array.differenceBy(songlist, playingList, 'id');\r\n      // console.log(songToAdd);\r\n\r\n      if (songToAdd.length) {\r\n        // 这一行直接以非 setState 的方式对 this.state 做了修改\r\n        playingList.splice(this.state.curSongIndex + 1, 0, ...songToAdd);\r\n        // 这一行只是单纯地要触发 render\r\n        this.setState({ playingList: playingList });\r\n      }\r\n    } else {\r\n      this.playAll(songlist);\r\n    }\r\n  }\r\n  // 添加并播放单首歌曲\r\n  playSong(song) {\r\n    const appState = this.state;\r\n    const playingList = appState.playingList;\r\n    const curSongIndex = appState.curSongIndex;\r\n    const indexToInsert = curSongIndex + 1;\r\n\r\n    if (playingList.length) {// 播放列表不为空\r\n\r\n      const matchedSongIdx = l_array.findIndex(playingList, ['id', song.id]);\r\n  \r\n      // 已有这首歌\r\n      if (matchedSongIdx !== -1) {\r\n        \r\n        if (matchedSongIdx === curSongIndex) {// 且为正在播放的歌\r\n          // 直接播放这首歌\r\n          this.playByIndex(matchedSongIdx);\r\n\r\n        } else if (matchedSongIdx < curSongIndex) {// 在正在播放的歌之前\r\n          // 添加到正播放的歌的后面\r\n          playingList.splice(indexToInsert, 0, song);\r\n          // 从原位置移除\r\n          playingList.splice(matchedSongIdx, 1);\r\n          // 更新 ui\r\n          this.setState({\r\n            playingList: playingList,\r\n            curSongIndex: curSongIndex - 1,\r\n          }, () => this.playByIndex(indexToInsert - 1));\r\n\r\n        } else {// 在正在播放的歌之后\r\n          // 从原位置移除\r\n          playingList.splice(matchedSongIdx, 1);\r\n          // 添加到正播放的歌的后面\r\n          playingList.splice(indexToInsert, 0, song);\r\n          // 更新 ui\r\n          this.setState({ playingList: playingList }, () => this.playByIndex(indexToInsert));\r\n        }\r\n\r\n      } else {// 没有这首歌\r\n        // 添加到正播放的歌的后面\r\n        playingList.splice(indexToInsert, 0, song);\r\n        // console.log(playingList);\r\n        // 更新 ui\r\n        this.setState({ playingList: playingList }, () => this.playByIndex(indexToInsert));\r\n      }\r\n\r\n    } else {// 播放列表为空\r\n      this.setState({ playingList: [song] }, () => this.playByIndex(indexToInsert));\r\n    }\r\n  }\r\n  // 下一首播放\r\n  addSongToNext(song) {\r\n    const appState = this.state;\r\n    const playingList = appState.playingList;\r\n    const curSongIndex = appState.curSongIndex;\r\n    const indexToInsert = curSongIndex + 1;\r\n\r\n    if (playingList.length) {// 播放列表不为空\r\n\r\n      const matchedSongIdx = l_array.findIndex(playingList, ['id', song.id]);\r\n  \r\n      // 已有这首歌\r\n      if (matchedSongIdx !== -1) {\r\n        \r\n        if (matchedSongIdx === curSongIndex) {// 且为正在播放的歌\r\n          // 直接播放这首歌\r\n          this.playByIndex(matchedSongIdx); \r\n\r\n        } else if (matchedSongIdx < curSongIndex) {// 在正在播放的歌之前\r\n          // 添加到正播放的歌的后面\r\n          playingList.splice(indexToInsert, 0, song);\r\n          // 从原位置移除\r\n          playingList.splice(matchedSongIdx, 1);\r\n          // 更新 ui\r\n          this.setState({\r\n            playingList: playingList,\r\n            curSongIndex: curSongIndex - 1,\r\n          });\r\n\r\n        } else {// 在正在播放的歌之后\r\n          // 从原位置移除\r\n          playingList.splice(matchedSongIdx, 1);\r\n          // 添加到正播放的歌的后面\r\n          playingList.splice(indexToInsert, 0, song);\r\n          // 更新 ui\r\n          this.setState({ playingList: playingList });\r\n        }\r\n\r\n      } else {// 没有这首歌\r\n        // 添加到正播放的歌的后面\r\n        playingList.splice(indexToInsert, 0, song);\r\n        // 更新 ui\r\n        this.setState({ playingList: playingList });\r\n      }\r\n\r\n    } else {// 播放列表为空\r\n      this.setState({ playingList: [song] }, () => this.playByIndex(0));\r\n    }\r\n\r\n  }\r\n  // render\r\n  render() {\r\n    // console.log('app render');\r\n    return (\r\n      \r\n        <PlayerContext.Provider \r\n          value={{\r\n            playerState: this.state,\r\n            playByIndex: this.playByIndex,\r\n            play: this.play,\r\n            pause: this.pause,\r\n            deleteSong: this.deleteSong,\r\n            clearPlaylist: this.clearPlaylist,\r\n            playAll: this.playAll,\r\n            addAll: this.addAll,\r\n            playSong: this.playSong,\r\n            addSongToNext: this.addSongToNext,\r\n          }}\r\n        >\r\n          <Home />\r\n          <Player />\r\n          \r\n        </PlayerContext.Provider>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport './index.less';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <App />\n  // </BrowserRouter>,\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cover-placeholder.d45643b2.png\";"],"sourceRoot":""}