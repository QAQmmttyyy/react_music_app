{"version":3,"sources":["components/Loading/images/loading-64.svg","components/PlaylistDetail/images/playall.png","context/PlayerContext.js","components/Loading/Loading.jsx","components/Search/Search.jsx","components/Slide/Slide.jsx","components/BannerSlider/BannerSlider.jsx","components/PlaylistCover/PlaylistCover.jsx","components/PlaylistDetail/PlaylistDetail.jsx","components/Home/Home.jsx","components/MiniPlayer/MiniPlayer.jsx","components/Scroll/Scroll.jsx","components/FullPlayer/FullPlayer.jsx","components/PlayingList/PlayingList.jsx","components/Player/Player.jsx","App.jsx","serviceWorker.js","index.js","images/cover-placeholder.png"],"names":["module","exports","__webpack_require__","p","context","React","createContext","Loading","react_default","a","createElement","className","src","LoadImg","alt","Component","Item","list_default","Brief","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","value","setState","showSearchKeywordBox","showSearchResultBox","isLoading","historyKws","state","historyKeywords","cpHistoryKws","length","slice","push","uniqCpHistoryKws","_","uniq","window","localStorage","setItem","JSON","stringify","searchApi","concat","encoded","encodeURI","fetch","method","headers","Accept","mode","then","response","status","json","data","resultData","Body","map","song","author","id","pic","title","link","name","artists","album","picUrl","searchResult","catch","reason","console","log","change","keyword","clear","focus","showSearchBox","cancel","handlePlaySong","ev","funcPlaySong","songIndex","stopPropagation","cloneDeep","handleClickKeyword","val","target","textContent","clearHistoryKeywords","removeItem","hotKeywords","getItem","parse","_this2","_this$state","PlayerContext","Consumer","_ref","resultContent","playSong","idx","key","activeStyle","backgroundColor","onClick","multipleLine","join","style","height","textAlign","search_bar_default","ref","manualFocusInst","cancelText","placeholder","onSubmit","onChange","onClear","onFocus","onBlur","onCancel","react_transition_group","in","timeout","mountOnEnter","unmountOnExit","kw","components_Loading_Loading","Slide","update","slide","destroy","init","refresh","_setSlideWidth","prev","next","clearTimeout","timer","currentPageIndex","showDot","_initDots","_initSlide","autoPlay","_play","isResize","children","slideGroupRef","current","width","slideWidth","slideRef","clientWidth","i","child","addClass","loop","BScroll","scrollX","scrollY","momentum","snap","threshold","speed","bounce","click","on","_onScrollEnd","pageIndex","getCurrentPage","pageX","dots","Array","setInterval","interval","hasClass","el","RegExp","test","newClass","split","createRef","addEventListener","enabled","resizeTimer","setTimeout","isInTransition","defaultProps","BannerSlider","banners","components_Slide_Slide","PlaylistCover","_this$props","playCount","PlaylistDetail","getSonglist","plId","songlist","SWrapperRef","funcPlayallOrAddall","transitionClass","playlistIntro","toggleShowPlDetail","coverUrl","playerState","playAll","curSongId","currentSong","listContent","artistsTitle","artist","PlaylistDetail_Item","nav_bar_default","icon","icon_default","type","onLeftClick","playingList","paddingBottom","components_PlaylistCover_PlaylistCover","handleClickPlayallOrAddall","PlayIcon","result_default","backgroundImage","Home","prevState","showPlDetail","handleClickPlaylist","elem","currentTarget","hasAttribute","index","getAttribute","clickedPl","rcmdPlaylists","playlists","getPlaylists","plsUrl","process","homeLink","curPage","rcmdlist","playlist","data-index","data-plcate","position","top","left","allPlContent","Home_Item","thumb","Home_Brief","Fragment","components_Search_Search","components_BannerSlider_BannerSlider","renderHeader","components_PlaylistDetail_PlaylistDetail","MiniPlayer","curSong","isPauseIcon","clickPlayPauseHandler","toggleFullplayer","togglePlayingList","extraContent","contentItem","isEmpty","MiniPlayer_Item","extra","imgSrc","includes","CoverPlaceholder","MiniPlayer_Brief","Scroll","initScroll","scroll","refreshScroll","destroyScroll","scrollToElement","apply","arguments","restProps","objectWithoutProperties","assign","FullPlayer","handleTouchStart","fnPlay","fnPause","isTouching","ProgressBarElem","ProgressBarRef","progressBarOffsetLeft","offsetLeft","touchmoveLeftEdge","touchmoveRightEdge","progressBarWidth","prevTouchX","targetTouches","clientX","ProgressWrapElem","ProgressWrapRef","handleTouchEnd","bind","assertThisInitialized","handleTouchMove","nextTouchX","touches","deltaX","nextProgress","progress","updateCurrentTime","handleClickLyric","showCover","showLyric","handleClickCover","ScrollRef","diffSong","curLyricIndex","curLyricIndexChange","removeEventListener","playState","clickPrevBtnHandler","clickNextBtnHandler","clickModeBtnHandler","duration","curTime","playProgress","lyric","navBarTitleCnt","lyricContent","maxTranslateY","lrcCls","playProgressWidth","parseFloat","play","pause","components_Scroll_Scroll","transform","onTouchStart","PlayingList","document","querySelector","scrollIntoView","playByIndex","deleteSong","clearPlaylist","curSongIndex","extraClearBtn","listItemArr","extraCloseBtn","PlayingList_Item","Player","getLyric","lrcUrl","songId","text","lrcArr","timestampArr","forEach","lrc","matchPart","match","timestampParts","trim","timestamp","parseInt","isNaN","showFullplayer","showPlayingList","playPercentage","audioElem","audioRef","currentTime","modeIndex","audioAmount","isPause","songUrlApi","playMode","desc","isNoAudio","paused","pauseAudio","playAudio","funcPlay","funcPause","getIndex","nextIndex","timeFormat","_this$audioRef$curren","nextCurTime","nextPlayProgress","toFixed","nextCurLyricIndex","findLastIndex","loadProgress","error","code","load","timeNum","minutes","seconds","minStr","secStr","isPrev","undefined","Math","random","_this3","_this$state2","isToReset","onDurationChange","handleDurationChange","onTimeUpdate","handleTimeUpdate","onEnded","handleEnded","onError","handleAudioError","components_MiniPlayer_MiniPlayer","handleClickPlayPause","onExited","components_FullPlayer_FullPlayer","handleClickPrevBtn","handleClickNextBtn","handleClickModeBtn","changeProgressHandler","handleChangeProgress","afterChangeProgressHandler","handleAfterChangeProgress","components_PlayingList_PlayingList","listData","App","isLogin","addAll","addSongToNext","localData","appState","l_array","remove","songToAdd","differenceBy","splice","toConsumableArray","indexToInsert","matchedSongIdx","findIndex","_this4","Provider","components_Home_Home","components_Player_Player","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b13eb66d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading-64.0ad8b01c.svg\";","module.exports = __webpack_public_path__ + \"static/media/playall.8f22f49d.png\";","import React from 'react';\n\nconst context = React.createContext();\nexport default context;\n","import React from 'react';\nimport './Loading.less';\nimport LoadImg from './images/loading-64.svg';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <img src={LoadImg} alt=\"loading\"/>\n        {/* <i className=\"loading-icon\"></i> */}\n        {/* <p className=\"loading-text\">正在加载</p> */}\n      </div>\n    );\n  }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { SearchBar, List } from 'antd-mobile';\nimport { Transition } from 'react-transition-group';\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport Loading from '../Loading/Loading';\nimport './Search.less';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: '',\n      hotKeywords: ['起风了', 'A妹新专辑', '有可能的夜晚', '出山', '流浪地球', 'Counting Sheep', '空心', '水星记', '东西', '梦龙'],\n      historyKeywords: [],\n      searchResult: [],\n      showSearchBox: false,\n      showSearchKeywordBox: false,\n      showSearchResultBox: false,\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    const historyKeywords = window.localStorage.getItem('historyKeywords');\n    if (historyKeywords) {\n      this.setState({ historyKeywords: JSON.parse(historyKeywords) });\n    }\n  }\n\n  submit = (value) => {\n    if (value) {\n      \n      // set loading\n      this.setState({\n        showSearchKeywordBox: false,\n        showSearchResultBox: true,\n        isLoading: true,\n      });\n  \n      // set localstorage\n      const historyKws = this.state.historyKeywords;\n      let cpHistoryKws = [];\n      if (historyKws && historyKws.length) {\n        cpHistoryKws = historyKws.slice(0);\n        cpHistoryKws.push(value);\n      } else {\n        cpHistoryKws.push(value);\n      }\n      const uniqCpHistoryKws = _.uniq(cpHistoryKws);\n      window.localStorage.setItem('historyKeywords', JSON.stringify(uniqCpHistoryKws));\n      // console.log(cpHistoryKws);\n  \n      // req, url encode?\n      const searchApi = `https://api.mlwei.com/music/api/wy/?key=523077333&id=${value}&type=so&cache=1&nu=60`;\n      \n      const encoded = encodeURI(searchApi);\n      // console.log(encoded);\n      window.fetch(\n        encoded,\n        {\n          method: 'GET',\n          headers: {\n            'Accept': '*'\n          },\n          mode: 'cors'\n        }\n      ).then(\n        response => {\n          // console.log(response);\n          return response.status === 200 ? response.json() : {};\n        }\n      ).then(\n        data => {\n          // console.log('data',data);\n          let resultData = [];\n          if (data.Body) {\n            \n            resultData = data.Body.map(song => {\n              const { author, id, pic, title } = song;\n              return {\n                id: id,\n                link: `/song?id=${id}`,\n                name: title,\n                artists: [{name: author}],\n                album: {picUrl: pic}\n              };\n            });\n          }\n          // console.log('resultData',resultData);\n          this.setState({\n            historyKeywords: uniqCpHistoryKws,\n            searchResult: resultData,\n            isLoading: false,\n          });\n        }\n      ).catch(\n        reason => {\n          console.log(reason);\n          this.setState({\n            historyKeywords: cpHistoryKws,\n            isLoading: false,\n          });\n        }\n      );\n    }\n  }\n\n  change= (value) => {\n    this.setState({ keyword: value });\n  }\n\n  clear = () => {\n    // unshow result/ show search-keyword-box\n    this.setState({ keyword: '' });\n  }\n\n  focus = () => {\n    // show search-keyword-box\n    // console.log('focus');\n    this.setState({\n      showSearchBox: true,\n      showSearchKeywordBox: true,\n      showSearchResultBox: false,\n      isLoading: false,\n    });\n  }\n\n  cancel = () => {\n    // unshow search-keyword-box/result\n    this.setState({\n      keyword: '',\n      showSearchBox: false,\n      showSearchKeywordBox: false,\n      showSearchResultBox: false,\n      isLoading: false,\n    })\n  }\n\n  handlePlaySong = (ev, funcPlaySong, songIndex) => {\n    ev.stopPropagation();\n    funcPlaySong(_.cloneDeep(this.state.searchResult[songIndex]));\n  }\n\n  handleClickKeyword = (ev) => {\n    ev.stopPropagation();\n    // this.manualFocusInst.focus();\n    const val = ev.target.textContent;\n    // console.log(val);\n    if (ev.target.className === 'item') {\n      this.setState({ keyword: val });\n      this.submit(val);\n    }\n  }\n\n  clearHistoryKeywords = (ev) => {\n    ev.stopPropagation();\n    window.localStorage.removeItem('historyKeywords');\n    this.setState({ historyKeywords: [] });\n  }\n\n  render() {\n    const {\n      hotKeywords,\n      historyKeywords,\n      searchResult,\n      showSearchBox,\n      showSearchKeywordBox,\n      showSearchResultBox,\n      isLoading,\n    } =this.state;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playSong }) => {\n          let resultContent;\n          if (searchResult && searchResult.length) {\n            resultContent = searchResult.map((song, idx) => {\n      \n              const { id, name, artists } = song;\n        \n              return (\n                <Item \n                  key={id}\n                  className=\"result-list-item\"\n                  activeStyle={{ backgroundColor: '#ccc' }}\n                  onClick={(ev) => {this.handlePlaySong(ev, playSong, idx)}}\n                  multipleLine\n                >\n                  {name}\n                  <Brief>{artists.map(val => val.name).join('/')}</Brief>\n                </Item>\n              );\n            });\n      \n          } else {\n            resultContent = (\n              <div style={{height:'100vh',textAlign: 'center'}}>网络出了点问题</div>\n            );\n          }\n\n          return (\n            <div className=\"my-search\">\n              <SearchBar\n                ref={ref => this.manualFocusInst = ref}\n                value={this.state.keyword}\n                cancelText=\"返回\"\n                placeholder=\"Search\"\n                onSubmit={this.submit}\n                onChange={this.change}\n                onClear={this.clear}\n                onFocus={this.focus}\n                onBlur={() => console.log('onBlur')}\n                onCancel={this.cancel}\n              />\n              \n              {showSearchBox ? (\n                <div className=\"search-box\">\n                  {/* hot history */}\n                  <Transition\n                    in={showSearchKeywordBox}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    // onExited={() => this.setState({showSearchKeywordBox: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div\n                          className={`search-keyword-box fade fade-${status}`}\n                          onClick={(ev) => this.handleClickKeyword(ev)}\n                        >\n                          <div className=\"hot-keyword\">\n                            <h4 className=\"title\">热门搜索</h4>\n                            <ul>\n                              {hotKeywords.map((kw, idx) => (\n                                <li\n                                  key={idx}\n                                  className=\"item\"\n                                >\n                                  {kw}\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                          {historyKeywords.length > 0 ? (\n                            <div className=\"history-keyword\">\n                              <h4 className=\"title\">\n                                搜索历史\n                                <i\n                                  className=\"delete-btn\"\n                                  onClick={(ev) => this.clearHistoryKeywords(ev)}\n                                ></i>\n                              </h4>\n                              <ul>\n                                {historyKeywords.map((kw, idx) => (\n                                  <li\n                                    key={idx}\n                                    className=\"item\"\n                                  >\n                                    {kw}\n                                  </li>\n                                ))}\n                              </ul>\n                            </div>\n                          ) : null}\n                        </div>\n                      );\n                    }}\n                  </Transition>\n\n                  {/* result */}\n                  <Transition\n                    in={showSearchResultBox}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    // onExited={() => this.setState({showSearchResultBox: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div className={`search-result-box fade fade-${status}`}>\n                          {isLoading ? (\n                            <Loading />\n                          ) : (\n                            <List>{resultContent}</List>\n                          )}\n                        </div>\n                      );\n                    }}\n                  </Transition>\n                  {/* loading */}\n                  {/* <Transition\n                    in={isLoading}\n                    timeout={150}\n                    mountOnEnter\n                    unmountOnExit\n                    onExited={() => this.setState({isLoading: false})}\n                  >\n                    {(status) => {\n                      return (\n                        <div className={`search-loading-box fade fade-${status}`}>\n                          <Loading />\n                        </div>\n                      );\n                    }}\n                  </Transition> */}\n                </div>\n              ) : null}\n\n            </div>\n            \n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport BScroll from 'better-scroll';\n\nimport './Slide.less';\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      dots: [],\n      currentPageIndex: 0,\n    }\n    this.slideRef = React.createRef()\n    this.slideGroupRef = React.createRef()\n  }\n\n  componentDidMount() {\n    this.update()\n\n    window.addEventListener('resize', () => {\n      if (!this.slide || !this.slide.enabled) {\n        return\n      }\n      window.clearTimeout(this.resizeTimer)\n      this.resizeTimer = window.setTimeout(() => {\n        if (this.slide.isInTransition) {\n          this._onScrollEnd()\n        } else {\n          if (this.props.autoPlay) {\n            this._play()\n          }\n        }\n        this.refresh()\n      }, 60)\n    })\n  }\n  componentWillMount() {\n    // this.slide.disable()\n    window.clearTimeout(this.timer)\n  }\n  // methods: \n  update = () => {\n    if (this.slide) {\n      this.slide.destroy()\n    }\n    this.init()\n  }\n  refresh = () => {\n    this._setSlideWidth(true)\n    this.slide.refresh()\n  }\n  prev = () => {\n    this.slide.prev()\n  }\n  next = () => {\n    this.slide.next()\n  }\n  init = () => {\n    window.clearTimeout(this.timer)\n    this.setState({currentPageIndex: 0})\n    this._setSlideWidth()\n    if (this.props.showDot) {\n      this._initDots()\n    }\n    this._initSlide()\n    if (this.props.autoPlay) {\n      this._play()\n    }\n  }\n  _setSlideWidth = (isResize) => {\n    this.children = this.slideGroupRef.current.children\n    let width = 0\n    let slideWidth = this.slideRef.current.clientWidth\n    for (let i = 0; i < this.children.length; i++) {\n      let child = this.children[i]\n      this.addClass(child, 'slide-item')\n      child.style.width = slideWidth + 'px'\n      width += slideWidth\n    }\n    if (this.props.loop && !isResize) {\n      width += 2 * slideWidth\n    }\n    this.slideGroupRef.current.style.width = width + 'px'\n  }\n  _initSlide = () => {\n    // console.log(this.props.threshold)\n    this.slide = new BScroll(this.slideRef.current, {\n      scrollX: true,\n      scrollY: false,\n      momentum: false,\n      snap: {\n        loop: this.props.loop,\n        threshold: this.props.threshold,\n        speed: this.props.speed\n      },\n      bounce: false,\n      stopPropagation: true,\n      click: this.props.click\n    })\n    this.slide.on('scrollEnd', this._onScrollEnd)\n    this.slide.on('touchEnd', () => {\n      if (this.props.autoPlay) {\n        this._play()\n      }\n    })\n    this.slide.on('beforeScrollStart', () => {\n      if (this.props.autoPlay) {\n        window.clearTimeout(this.timer)\n      }\n    })\n  }\n  _onScrollEnd = () => {\n    let pageIndex = this.slide.getCurrentPage().pageX\n    this.setState({currentPageIndex: pageIndex})\n    if (this.autoPlay) {\n      this._play()\n    }\n  }\n  _initDots = () => {\n    let dots = new Array(this.children.length)\n    for (let idx = 0; idx < dots.length; idx++) {\n      dots[idx] = idx;\n    }\n    this.setState({dots: dots})\n  }\n  _play = () => {\n    window.clearTimeout(this.timer)\n    this.timer = window.setInterval(() => {\n      this.slide.next()\n    }, this.props.interval)\n  }\n  // common method dom\n  hasClass = (el, className) => {\n    let reg = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)')\n    return reg.test(el.className)\n  }\n  \n  addClass = (el, className) => {\n    if (this.hasClass(el, className)) {\n      return\n    }\n  \n    let newClass = el.className.split(' ')\n    newClass.push(className)\n    el.className = newClass.join(' ')\n  }\n\n  render() {\n    const { dots, currentPageIndex } = this.state;\n\n    return (\n      <div className=\"slide\" ref={this.slideRef}>\n        <div className=\"slide-group\" ref={this.slideGroupRef}>\n          {this.props.children}\n        </div>\n        {this.props.showDot ? (\n          <div className=\"dots\">\n            {dots.map((val, idx) => (\n              <span\n                key={idx}\n                className={\n                  `dot ${currentPageIndex === idx ? 'active':''}`\n                }\n              ></span>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nSlide.defaultProps = {\n  loop: true,\n  autoPlay: true,\n  interval: 4000,\n  showDot: true,\n  click: true,\n  threshold: 0.3,\n  speed: 400,\n}\n\nexport default Slide;","import React, { Component } from 'react';\nimport Slide from '../Slide/Slide';\n\nclass BannerSlider extends Component {\n  state = {\n    banners: [\n      'https://p1.music.126.net/PzonwsvcSEEsr-uhJXE2_g==/109951163871296308.jpg',\n      'https://p1.music.126.net/thHP6ooWw893Ccfk_iXG5w==/109951163866743145.jpg',\n      'https://p1.music.126.net/VO_0urbXu_PytHjhjfj4Zw==/109951163871298888.jpg',\n      'https://p1.music.126.net/kEGOOxh_p6H7UHKuOOFkFg==/109951163871789068.jpg',\n      'https://p1.music.126.net/wa7Oxq5yysZgGBvOlivwEg==/109951163871318124.jpg'\n    ]\n  }\n  render() {\n    const { banners } = this.state;\n\n    return (\n      <Slide>\n        {banners.map((val, idx) => (\n          <div key={idx}>\n            <img src={val} alt=\"banner\"/>\n          </div>\n        ))}\n      </Slide>\n    );\n  }\n}\n\nexport default BannerSlider;","import React from 'react';\n\nimport './PlaylistCover.less';\n\nclass PlaylistCover extends React.Component {\n  render() {\n    const { src, style, playCount } = this.props;\n\n    return (\n      <div className=\"pl-cover\" style={style}>\n        <img \n          className=\"cover\" \n          src={src}\n          alt=\"cover\"\n        />\n        <span className=\"u-earp play-num\">{playCount}</span>\n      </div>\n    );\n  }\n}\n\nexport default PlaylistCover;","import React from 'react';\r\nimport { NavBar, Icon, List, Result } from 'antd-mobile';\r\n// import BScroll from 'better-scroll';\r\nimport _ from 'lodash';\r\n\r\nimport PlayerContext from '../../context/PlayerContext';\r\nimport PlaylistCover from '../PlaylistCover/PlaylistCover.jsx';\r\nimport Loading from '../Loading/Loading.jsx';\r\n\r\nimport PlayIcon from './images/playall.png';\r\nimport './PlaylistDetail.less';\r\n\r\nconst Item = List.Item;\r\n\r\nclass PlaylistDetail extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      songlist: [],\r\n      isLoading: false,\r\n    };\r\n    this.SWrapperRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.initScroll();\r\n    this.getSonglist();\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   this.refreshScroll();\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.scroll && this.scroll.destroy();\r\n  // }\r\n  \r\n  // initScroll = () => {\r\n  //   if (!this.SWrapperRef.current) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   this.scroll = new BScroll(this.SWrapperRef.current);\r\n  // }\r\n\r\n  // refreshScroll = () => {\r\n  //   this.scroll && this.scroll.refresh();\r\n  // }\r\n\r\n  // destroyScroll = () => {\r\n  //   this.scroll.destroy();\r\n  // }\r\n\r\n  getSonglist = () => {\r\n    this.setState({isLoading: true});\r\n\r\n    const searchApi = `https://api.mlwei.com/music/api/wy/?key=523077333&cache=1&type=songlist&id=${this.plId}`;\r\n\r\n    window.fetch(searchApi, {\r\n      method: 'GET',\r\n      headers: { 'Accept': '*' },\r\n      mode: 'cors'\r\n    }).then(response => {\r\n      // console.log(response);\r\n      return response.status === 200 ? response.json() : {};\r\n    }).then(data => {\r\n      // console.log('data',data);\r\n      let resultData = [];\r\n      if (data.Body) {\r\n        resultData = data.Body.map(song => {\r\n          const { id, title, author, pic } = song;\r\n          return {\r\n            id: id,\r\n            link: `/song?id=${id}`,\r\n            name: title,\r\n            artists: [{name: author}],\r\n            album: {picUrl: pic}\r\n          };\r\n        });\r\n      }\r\n      // console.log('resultData',resultData);\r\n      this.setState({\r\n        songlist: resultData,\r\n        isLoading: false,\r\n      });\r\n      \r\n    }).catch(reason => {\r\n      console.log(reason);\r\n      this.setState({isLoading: false});\r\n    });\r\n  }\r\n\r\n  handleClickPlayallOrAddall(funcPlayallOrAddall) {\r\n    const songlist = _.cloneDeep(this.state.songlist);\r\n    funcPlayallOrAddall(songlist);\r\n  }\r\n\r\n  handlePlaySong(ev, funcPlaySong, songIndex) {\r\n    ev.stopPropagation();\r\n    funcPlaySong(_.cloneDeep(this.state.songlist[songIndex]));\r\n  }\r\n\r\n  render() {\r\n    const { transitionClass, playlistIntro, toggleShowPlDetail } = this.props;\r\n    const { songlist, isLoading } = this.state;\r\n      \r\n    const {\r\n      id,\r\n      coverUrl,\r\n      name,\r\n      playCount,\r\n      author,\r\n    } = playlistIntro;\r\n\r\n    this.plId = id;\r\n    \r\n    return (\r\n      <PlayerContext.Consumer>\r\n        {({ playerState, playAll, playSong }) => {\r\n          const { currentSong } = playerState;\r\n          {/* const matchedSongIdx = _.findIndex(songlist, ['id', currentSong.id]); */}\r\n          const curSongId = currentSong.id;\r\n\r\n          const listContent = songlist.length && songlist.map((song, idx) => {\r\n            const {\r\n              id,\r\n              name,\r\n              artists,\r\n              album,\r\n            } = song;\r\n    \r\n            let artistsTitle = artists.map(artist => artist.name).join('/');\r\n    \r\n            return (\r\n              <Item \r\n                key={id}\r\n                className={`mty-list-item ${id === curSongId ? 'playing':''}`}\r\n                activeStyle={{\r\n                  backgroundColor: '#ccc'\r\n                }}\r\n                onClick={(ev) => {this.handlePlaySong(ev, playSong, idx)}}\r\n              >\r\n                <div className=\"s-index\">{idx + 1}</div>\r\n                <div className=\"s-detail-wrap\">\r\n                  <div className=\"s-info\">\r\n                    <div className=\"s-name f-thide\">\r\n                      {name}\r\n                    </div>\r\n                    <div className=\"s-artists-alb f-thide\">\r\n                      {artistsTitle} - {album.name}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Item>\r\n            );\r\n          });\r\n\r\n          {/* console.log('listContent',!(listContent)); */}\r\n\r\n          return (\r\n            <div className={`PlaylistDetail ${transitionClass}`}>\r\n              <div className=\"pld-navbar-wrapper\">\r\n                <NavBar\r\n                  icon={<Icon type=\"left\"/>}\r\n                  onLeftClick={toggleShowPlDetail}\r\n                >\r\n                  歌单\r\n                </NavBar>\r\n              </div>\r\n              \r\n              <div \r\n                // ref={this.SWrapperRef}\r\n                className=\"scroll-wrapper\"\r\n                style={playerState.playingList.length ? {paddingBottom: '56px'} : {paddingBottom: '0px'}}\r\n              >\r\n                <div className=\"scroll-content\">\r\n\r\n                  {/* info sec 可抽出为容器组件 */}\r\n                  <section className=\"my-plinfo-wrap\">\r\n                    <PlaylistCover\r\n                      src={`${coverUrl}?param=336y336`}\r\n                      style={{\r\n                        width: '1.12rem',\r\n                        height: '1.12rem',\r\n                      }}\r\n                      playCount={playCount}\r\n                    />\r\n\r\n                    {/* intro */}\r\n                    <div className=\"plinfo-right\">\r\n                      <h2 className=\"f-brk title\">\r\n                        {name}\r\n                      </h2>\r\n                      <div className=\"author f-thide\">\r\n                        {/* <div className=\"avatar\">\r\n                          <img src={author.avatarUrl} alt=\"ava\" />\r\n                        </div> */}\r\n                        {author.name}\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                  \r\n                  {/* plyall btn */}\r\n                  <div className=\"playall-btn-wrapper\">\r\n                    <Item \r\n                      className=\"mty-list-item\"\r\n                      activeStyle={{\r\n                        backgroundColor: '#ddd'\r\n                      }}\r\n                      onClick={() => {this.handleClickPlayallOrAddall(playAll)}}\r\n                    > \r\n                      <div className=\"playall-btn\">\r\n                        <img \r\n                          src={PlayIcon} \r\n                          alt=\"playicon\"\r\n                        />\r\n                        <span>播放全部</span>\r\n                        <span className=\"song-num\">\r\n                          共({songlist.length})首\r\n                        </span>\r\n                      </div>\r\n                    </Item>\r\n                  </div>\r\n                  {/* song list */}\r\n                  <List className={listContent ? '':'no-content'}>\r\n                    {listContent ? listContent : (\r\n                      isLoading ? (\r\n                        <div className=\"loading-box\"><Loading /></div>\r\n                      ) : (\r\n                        <div className=\"result-box\"><Result title=\"网络开小差了\" /></div>\r\n                        \r\n                      )\r\n                    )}\r\n                  </List>\r\n\r\n                </div>\r\n              </div>\r\n\r\n              {/* 模糊背景 可抽出为组件 */}\r\n              <div className=\"bg-wrap\">\r\n                <div \r\n                  className=\"fullscreen-blur-bg\" \r\n                  style={{\r\n                    backgroundImage: `url(${coverUrl}?param=336y336)`\r\n                  }}\r\n                >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </PlayerContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlaylistDetail;","import React from 'react';\r\nimport { List } from 'antd-mobile';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nimport PlayerContext from '../../context/PlayerContext';\r\nimport './Home.less';\r\n\r\nimport Search from '../Search/Search';\r\nimport BannerSlider from '../BannerSlider/BannerSlider';\r\nimport PlaylistCover from '../PlaylistCover/PlaylistCover.jsx';\r\nimport PlaylistDetail from '../PlaylistDetail/PlaylistDetail.jsx';\r\n\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\n// TODO: 无限加载\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      rcmdPlaylists: [\r\n        {\r\n          \"id\": 2406347748,\r\n          \"coverUrl\": \"http://p2.music.126.net/tkQ6Zb_eBdUsFAeD6PM-2A==/109951163547241213.jpg\",\r\n          \"name\": \"2018全美音乐奖提名名单（AMAs）\",\r\n          \"link\": \"/playlist?id=2406347748\",\r\n          \"playCount\": \"126万\",\r\n          \"author\": {\r\n            \"name\": \"DoubleRainbow_\",\r\n            \"homeLink\": \"/user/home?id=3226705\"\r\n          }\r\n        }, {\r\n          \"id\": 2439954234,\r\n          \"coverUrl\": \"http://p2.music.126.net/dBdq_Rs_pexuA8GqkZLcKA==/109951163599919632.jpg\",\r\n          \"name\": \"听首情歌说唱 | 做个甜甜的梦\",\r\n          \"link\": \"/playlist?id=2439954234\",\r\n          \"playCount\": \"211万\",\r\n          \"author\": {\r\n            \"name\": \"章若楠nn\",\r\n            \"homeLink\": \"/user/home?id=640698142\"\r\n          }\r\n        }, {\r\n          \"id\": 2497731034,\r\n          \"coverUrl\": \"http://p2.music.126.net/AtlN3uAvGczoL-xQN7FTtQ==/109951163643083559.jpg\",\r\n          \"name\": \"初恋糖配料表：你的马尾辫和衬衫味道\",\r\n          \"link\": \"/playlist?id=2497731034\",\r\n          \"playCount\": \"542万\",\r\n          \"author\": {\r\n            \"name\": \"驴子鬼\",\r\n            \"homeLink\": \"/user/home?id=246029257\"\r\n          }\r\n        }, {\r\n          \"id\": 2390539027,\r\n          \"coverUrl\": \"http://p2.music.126.net/8BZpZdDiDZatIiQMJnoKyg==/109951163736178562.jpg\",\r\n          \"name\": \"那些超带感的英文歌曲~『一秒沦陷』\",\r\n          \"link\": \"/playlist?id=2390539027\",\r\n          \"playCount\": \"351万\",\r\n          \"author\": {\r\n            \"name\": \"Mysterious-Box\",\r\n            \"homeLink\": \"/user/home?id=1558934331\"\r\n          }\r\n        }, {\r\n          \"id\": 2554253084,\r\n          \"coverUrl\": \"http://p2.music.126.net/mP8ulkyTDGmoj6jlZ_sblQ==/109951163722284832.jpg\",\r\n          \"name\": \"Future Bass丨醉寻心涧跳动的梦幻电子⚡️\",\r\n          \"link\": \"/playlist?id=2554253084\",\r\n          \"playCount\": \"61万\",\r\n          \"author\": {\r\n            \"name\": \"Kirin电子站\",\r\n            \"homeLink\": \"/user/home?id=1489420441\"\r\n          }\r\n        }, {\r\n          \"id\": 2312165875,\r\n          \"coverUrl\": \"http://p2.music.126.net/Cl0-NpZ0ESTDjJ1HmZ33KA==/109951163460576279.jpg\",\r\n          \"name\": \"100首华语民谣，因为懂得才有共鸣\",\r\n          \"link\": \"/playlist?id=2312165875\",\r\n          \"playCount\": \"1107万\",\r\n          \"author\": {\r\n            \"name\": \"情思天鹅\",\r\n            \"homeLink\": \"/user/home?id=108952364\"\r\n          }\r\n        }\r\n      ],\r\n      playlists: [],\r\n      showPlDetail: false,\r\n      clickedPl: {},\r\n    };\r\n    this.curPage = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPlaylists(this.curPage);\r\n  }\r\n\r\n  toggleShowPlDetail = () => {\r\n    this.setState(prevState => {\r\n      return { showPlDetail: !prevState.showPlDetail };\r\n    });\r\n  }\r\n\r\n  handleClickPlaylist = (ev) => {\r\n    // ev.stopPropagation();\r\n    const elem = ev.currentTarget;\r\n    // console.log(elem);\r\n    // console.log(ev.currentTarget.attributes);\r\n    // console.log(elem.hasAttribute('data-index'));\r\n\r\n    if (elem.hasAttribute('data-index')) {\r\n\r\n      const index = elem.getAttribute('data-index');\r\n      // console.log(index);\r\n      let pl = null;\r\n\r\n      this.setState(prevState => {\r\n        if (elem.getAttribute('data-plcate') === 'rcmd') {\r\n          pl = prevState.rcmdPlaylists[index];\r\n        } else {\r\n          pl = prevState.playlists[index];\r\n        }\r\n        return {\r\n          showPlDetail: true,\r\n          clickedPl: pl,\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  getPlaylists = (pageIndex) => {\r\n    const plsUrl = `${\r\n      process.env.PUBLIC_URL\r\n    }/api_mock_data/playlists/all/p${pageIndex}.json`;\r\n\r\n    window.fetch(plsUrl).then(\r\n      response => response.status === 200 ? response.json() : ''\r\n    ).then(\r\n      data => {\r\n        this.setState({ playlists: data });\r\n      }\r\n    ).catch(\r\n      reason => console.log(reason)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { rcmdPlaylists, playlists, showPlDetail, clickedPl } =this.state;\r\n\r\n    // tuijian gedan\r\n    const rcmdlist = rcmdPlaylists.map((playlist, idx) => {\r\n      const {\r\n        id,\r\n        coverUrl,\r\n        name,\r\n        playCount,\r\n      } = playlist;\r\n\r\n      return (\r\n        <li\r\n          key={id}\r\n          className=\"pl-li\"\r\n          data-index={idx}\r\n          data-plcate=\"rcmd\"\r\n          onClick={(ev) => this.handleClickPlaylist(ev)}\r\n        >\r\n          <div className=\"cover-wrapper\">\r\n            <PlaylistCover\r\n              src={`${coverUrl}?param=400y400`}\r\n              style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n              playCount={playCount}\r\n            />\r\n          </div>\r\n          <p className=\"dec\">{name}</p>\r\n        </li>\r\n      );\r\n    });\r\n    //  quanbu gedan\r\n    const allPlContent = playlists && playlists.map((playlist, idx) => {\r\n      const {\r\n        id,\r\n        coverUrl,\r\n        name,\r\n        playCount,\r\n        author,\r\n      } = playlist;\r\n\r\n      return (\r\n        <Item\r\n          key={id}\r\n          thumb={`${coverUrl}?param=200y200`}\r\n          onClick={(ev) => this.handleClickPlaylist(ev)}\r\n          multipleLine\r\n          data-index={idx}\r\n          data-plcate=\"all\"\r\n        >\r\n          {name} <Brief>{`${author.name} · ${playCount}次播放`}</Brief>\r\n        </Item>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <PlayerContext.Consumer>\r\n        {({playerState}) => (\r\n          <React.Fragment>\r\n            <Search />\r\n            <div\r\n              className=\"playlists\"\r\n              style={playerState.playingList.length ? {paddingBottom: '56px'} : {paddingBottom: '0px'}}\r\n            >\r\n              <BannerSlider/>\r\n              <div key=\"cate\" className=\"pl-cat\">\r\n                推荐歌单\r\n              </div>\r\n              <ul\r\n                key=\"cvrlst\"\r\n                className=\"pl-cvrlst\"\r\n              >\r\n                {rcmdlist}\r\n              </ul>\r\n              {/* all pl */}\r\n              <List renderHeader={() => '全部歌单'}>\r\n                {allPlContent}\r\n              </List>\r\n            </div>\r\n\r\n            <Transition\r\n              in={showPlDetail}\r\n              timeout={150}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              {(status) => {\r\n                return (\r\n                  <PlaylistDetail\r\n                    transitionClass={`slide-up slide-up-${status}`}\r\n                    playlistIntro={clickedPl}\r\n                    toggleShowPlDetail={this.toggleShowPlDetail}\r\n                  />\r\n                );\r\n              }}\r\n            </Transition>\r\n          </React.Fragment>\r\n        )}\r\n      </PlayerContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\nimport { List } from \"antd-mobile\";\n\nimport _ from 'lodash';\n\nimport CoverPlaceholder from '../../images/cover-placeholder.png';\nimport './MiniPlayer.less';\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\nclass MiniPlayer extends Component {\n\n  render() {\n    let {\n      transitionClass,\n      curSong,\n      isPauseIcon,\n      clickPlayPauseHandler,\n      toggleFullplayer,\n      togglePlayingList,\n    } = this.props;\n\n    // play plp btns\n    const extraContent = (\n      <div className=\"miniplayer-btns-wrapper\">\n        <div \n          className={`btn ${isPauseIcon ? 'pause' : 'play'}-icon`}\n          onClick={clickPlayPauseHandler}\n        ></div>\n        <div\n          className=\"btn playlist-icon\"\n          onClick={togglePlayingList}\n        ></div>\n      </div>\n    );\n\n    let contentItem = null;\n\n    if (_.isEmpty(curSong)) {\n      contentItem = (\n        <Item\n          className=\"miniplayer-content\"\n          extra={extraContent}\n          multipleLine\n        >\n          听我想听的歌\n        </Item>\n      );\n    } else {\n      const {\n        name,\n        artists,\n        album,\n      } = curSong;\n  \n      // album cover \n      let imgSrc = '';\n      // 判断条件可能要改\n      if (album.picUrl && album.picUrl.length && album.picUrl.includes('http')) {\n        imgSrc = `${album.picUrl}`;\n      } else {\n        imgSrc = CoverPlaceholder;\n      }\n\n      contentItem = (\n        <Item\n          className=\"miniplayer-content\"\n          thumb={imgSrc}\n          extra={extraContent}\n          onClick={toggleFullplayer}\n          activeStyle={{ backgroundColor: '#fff'}}\n          multipleLine\n        >\n          {name}\n          <Brief>{artists.map(val => val.name).join('/')}</Brief>\n        </Item>\n      );\n    }\n\n    return (\n      <div className={`miniplayer ${transitionClass}`}>\n        {contentItem}\n      </div>\n    );\n  }\n}\n \nexport default MiniPlayer;","import React, { Component } from 'react'\nimport BScroll from 'better-scroll';\n\nimport './Scroll.less';\n\nclass Scroll extends Component {\n\n  SWrapperRef = React.createRef();\n\n  componentDidMount() {\n    this.initScroll();\n  }\n\n  componentWillUnmount() { this.scroll && this.scroll.destroy(); }\n  \n  initScroll = () => {\n    if (!this.SWrapperRef.current) { return; }\n    this.scroll = new BScroll(this.SWrapperRef.current, {click: true});\n  }\n\n  refreshScroll = () => { this.scroll && this.scroll.refresh(); }\n\n  destroyScroll = () => { this.scroll.destroy(); }\n  \n  scrollToElement() {\n    this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments)\n  }\n\n  render() {\n    const { style, className, children, ...restProps } = this.props;\n\n    return (\n      <div \n        ref={this.SWrapperRef}\n        style={style}\n        className={`scroll-wrapper ${className}`}\n        {...restProps}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Scroll;","import React from 'react';\nimport { NavBar, Icon, Slider } from 'antd-mobile';\nimport { Transition } from 'react-transition-group';\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport CoverPlaceholder from '../../images/cover-placeholder.png';\nimport './FullPlayer.less';\n\nimport Scroll from '../Scroll/Scroll.jsx';\n\nclass FullPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      // lyric: [],\n      // timestampArr: [],\n      showCover: true,\n      showLyric: false,\n      // progress: 0,\n    };\n    this.ScrollRef = React.createRef();\n    this.ProgressWrapRef = React.createRef();\n    this.ProgressBarRef = React.createRef();\n    \n    // this.songId = 0;\n    this.diffSong = true;\n    this.curLyricIndex = -1;\n    this.curLyricIndexChange = false;\n    this.isTouching = false;\n    this.progress = 0;\n  }\n\n  componentDidMount() {\n    // console.log('fullplayer mount');\n    const ProgressBarElem = this.ProgressBarRef.current;\n    this.progressBarWidth = ProgressBarElem.clientWidth;\n  }\n\n  componentDidUpdate() {\n    if (this.state.showLyric) {\n      \n      if (this.diffSong) {\n        this.ScrollRef.current.scrollToElement('p.sentence',1000,false,true);\n      } else {\n        if (this.curLyricIndexChange && this.curLyricIndex >= 5) {\n          this.ScrollRef.current.scrollToElement('p.is-curSentence',1000,false,true);\n        }\n      }\n    }\n  }\n  handleTouchStart = (ev, fnPlay, fnPause) => {\n    if (_.isEmpty(this.curSong)) { return; }\n\n    this.isTouching = true;\n\n    const target = ev.target;\n    // console.log(ev.type);\n    // console.log(ev.targetTouches);\n\n    const ProgressBarElem = this.ProgressBarRef.current;\n    // this.progressBarWidth = ProgressBarElem.clientWidth;\n    // console.log('progressBarWidth', this.progressBarWidth);\n    this.progressBarOffsetLeft = ProgressBarElem.offsetLeft;\n    // console.log('offsetLeft', this.progressBarOffsetLeft);\n    this.touchmoveLeftEdge = this.progressBarOffsetLeft - 8;\n    this.touchmoveRightEdge = this.progressBarOffsetLeft + this.progressBarWidth + 8;\n    // console.log(this.touchmoveLeftEdge, this.touchmoveRightEdge);\n\n    this.prevTouchX = ev.targetTouches[0].clientX;\n    // console.log('prevTouchX', this.prevTouchX);\n\n    const ProgressWrapElem = this.ProgressWrapRef.current;\n    // console.log(ProgressWrapElem.offsetWidth);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this, fnPlay);\n    ProgressWrapElem.addEventListener('touchmove', this.handleTouchMove);\n    ProgressWrapElem.addEventListener('touchend', this.handleTouchEnd);\n\n    fnPause();\n  }\n\n  handleTouchMove = (ev) => {\n    // console.log(ev.type);\n    // console.log(ev.touches);\n    const nextTouchX = ev.touches[0].clientX;\n    // console.log('nextTouchX', nextTouchX);\n\n    if (this.touchmoveLeftEdge < nextTouchX && nextTouchX < this.touchmoveRightEdge) {\n      const deltaX = nextTouchX - this.prevTouchX;\n      this.prevTouchX = nextTouchX;\n      // console.log(deltaX);\n      let nextProgress = this.progress + deltaX;\n      if (nextProgress < 0) {\n        nextProgress = 0;\n      } else if (nextProgress > this.progressBarWidth) {\n        nextProgress = this.progressBarWidth;\n      }\n      this.progress = nextProgress;\n\n      this.props.updateCurrentTime((nextProgress / this.progressBarWidth));\n\n      // this.setState(prevState => {\n      //   let nextProgress = prevState.progress + deltaX;\n      //   if (nextProgress < 0) {\n      //     nextProgress = 0;\n      //   } else if (nextProgress > this.progressBarWidth) {\n      //     nextProgress = this.progressBarWidth;\n      //   }\n      //   return { progress: nextProgress };\n      // }, () => {this.props.updateCurrentTime((this.state.progress / this.progressBarWidth))});\n\n    }\n  }\n\n  handleTouchEnd(fnPlay, ev) {\n    // console.log(ev.type);\n    // console.log(ev.changedTouches);\n    this.isTouching = false;\n\n    const ProgressWrapElem = this.ProgressWrapRef.current;\n    ProgressWrapElem.removeEventListener('touchmove', this.handleTouchMove);\n    ProgressWrapElem.removeEventListener('touchend', this.handleTouchEnd);\n\n    fnPlay();\n  }\n\n  // getLyric = () => {\n  //   const lrcUrl = `https://api.mlwei.com/music/api/wy/?key=523077333&cache=1&type=lrc&id=${this.songId}`;\n  //   // console.log(lrcUrl);\n    \n  //   window.fetch(lrcUrl, {\n  //     method: 'GET',\n  //     headers: { 'Accept': '*' },\n  //     mode: 'cors'\n  //   }).then(\n  //     response => {\n  //       console.log(response);\n  //       return response.status === 200 ? response.text() : null;\n  //     }\n  //   ).then(\n  //     data => {\n  //       if (data) {\n          \n  //         // console.log(data);\n  //         const lrcArr = data.split('\\n');\n  //         // state\n  //         const \n  //           lyric = [],\n  //           timestampArr = [];\n  \n  //         lrcArr.forEach((lrc) => {\n  //           const matchPart = lrc.match(/\\[(.*)\\](.*)/);\n  \n  //           if (matchPart) {\n              \n  //             const \n  //               timestampParts = matchPart[1].trim().split(':'),\n  //               part1 = parseInt(timestampParts[0]) * 60,\n  //               part2 = parseFloat(timestampParts[1]),\n  //               timestamp = part1 + part2;\n              \n  //             if (!isNaN(timestamp)) {\n  //               lyric.push(matchPart[2].trim());\n  //               timestampArr.push(timestamp);\n  //             }\n  //           }\n  //         });\n  \n  //         console.log(lyric);\n  //         console.log(timestampArr);\n  \n  //         this.setState({\n  //           lyric: lyric,\n  //           timestampArr: timestampArr,\n  //           curLyricIndex: 0,\n  //         });\n  //       }\n  //     }\n  //   ).catch(\n  //     reason => {\n  //       console.log(reason);\n  //       this.setState({\n  //         lyric: [],\n  //         timestampArr: [],\n  //       });\n  //     }\n  //   );\n  // }\n\n  handleClickLyric = () => {\n    this.setState({\n      showCover: true,\n      showLyric: false,\n    });\n  }\n  handleClickCover = () => {\n    this.setState({\n      showCover: false,\n      showLyric: true,\n    });\n  }\n\n  render() {\n    // console.log('fullplayer render');\n    let {\n      transitionClass,\n      curSong,\n      diffSong,\n      playState,\n      mode,\n      clickPlayPauseHandler,\n      clickPrevBtnHandler,\n      clickNextBtnHandler,\n      clickModeBtnHandler,\n      // changeProgressHandler,\n      // afterChangeProgressHandler,\n      toggleFullplayer,\n      togglePlayingList,\n    } = this.props;\n\n    const {\n      // lyric,\n      // timestampArr,\n      showCover,\n      showLyric,\n      // progress,\n    } = this.state;\n\n    this.curSong = curSong;\n\n    if (_.isEmpty(curSong)) {\n      return (\n        <div className={`fullplayer ${transitionClass}`}>\n          <NavBar\n            className=\"my-fullplayer-navbar\"\n            icon={<Icon type=\"down\"/>}\n            onLeftClick={toggleFullplayer}\n          >\n            听我想听的歌\n          </NavBar>\n\n          <div className=\"mid-wrapper\">\n            <div className=\"cd-box\">\n              <div className=\"cd-wrapper\">\n                <div className=\"cd\">\n                  <img\n                    className=\"image\"\n                    src={CoverPlaceholder}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"background\"></div>\n        </div>\n      );\n    }\n\n    // else\n    const { id, name, artists, album} = curSong;\n\n    const {\n      duration,\n      curTime,\n      playProgress,\n      isPauseIcon,\n      lyric,\n      curLyricIndex,\n      curLyricIndexChange,\n    } = playState;\n\n    // this.diffSong = this.songId !== id;\n    // this.songId = id;\n    this.diffSong = diffSong;\n    this.curLyricIndex = curLyricIndex;\n    this.curLyricIndexChange = curLyricIndexChange;\n\n    const navBarTitleCnt = (\n      <div className=\"navbar-title-content\">\n        <p className=\"song-name f-thide\">{name}</p>\n        <p className=\"artists-name f-thide\">\n          - {artists.map(val => val.name).join('/')} -\n        </p>\n      </div>\n    );\n\n    // lyric\n    let \n      // curLyricIndex = 0,\n      lyricContent = null,\n      translateY = 0,\n      maxTranslateY = 0;\n\n    if (lyric.length) {\n      // curLyricIndex\n      // curLyricIndex = _.findLastIndex(timestampArr, val => val <= curTimestamp);\n      // this.curLyricIndexChange = this.curLyricIndex === curLyricIndex;\n      // this.curLyricIndex = curLyricIndex;\n      // lyricContent\n      lyricContent = lyric.map((val, idx) => {\n        const lrcCls = `sentence${\n          idx === curLyricIndex ? ' is-curSentence' : ''\n        }`;\n\n        const sentenceEl = (\n          <p \n            id={idx}\n            key={idx}\n            style={(val === '') ? {height: '18px'} : {}}\n            className={lrcCls}\n          >\n            {val}\n          </p>\n        );\n\n        return sentenceEl;\n      });\n\n      // 34px 为一行歌词的行高\n      translateY = (curLyricIndex <= 3) ? 0 : -(curLyricIndex - 3) * 40;\n      maxTranslateY =  -(lyric.length * 40);\n\n      if (translateY < maxTranslateY) {\n        translateY = maxTranslateY;\n      }\n    }\n\n    // album cover \n    let imgSrc = '';\n    // 判断条件可能要改\n    if (album.picUrl && album.picUrl.length && album.picUrl.includes('http')) {\n      imgSrc = `${album.picUrl}`;\n    } else {\n      imgSrc = CoverPlaceholder;\n    }\n\n    // playprogress\n    const playProgressWidth = this.progressBarWidth * parseFloat(playProgress);\n    this.progress = playProgressWidth;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ play, pause }) => {\n\n          return (\n            <div className={`fullplayer ${transitionClass}`}>\n              <NavBar\n                className=\"my-fullplayer-navbar\"\n                icon={<Icon type=\"down\"/>}\n                onLeftClick={toggleFullplayer}\n              >\n                {navBarTitleCnt}\n              </NavBar>\n\n              {/* cd */}\n              <Transition\n                in={showCover}\n                timeout={100}\n                mountOnEnter\n                unmountOnExit\n              >\n                {(status) => {\n                  return (\n                    <div className={`mid-wrapper fade fade-${status}`}>\n                      <div\n                        className=\"cd-box\"\n                        onClick={() => this.handleClickCover()}\n                      >\n                        <div className=\"cd-wrapper\">\n                          <div className=\"cd\">\n                            <img\n                              className=\"image\"\n                              src={imgSrc}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }}\n              </Transition>\n\n              {/* lyric */}\n              <Transition\n                in={showLyric}\n                timeout={100}\n                mountOnEnter\n                unmountOnExit\n              >\n                {(status) => {\n                  return (\n                    <Scroll\n                      ref={this.ScrollRef}\n                      className={`lyric-wrapper fade fade-${status}`}\n                      onClick={() => this.handleClickLyric()}\n                    >\n                      <div className=\"scroll-content\">\n                        {lyricContent ? (\n                          <div className=\"lyric\">\n                            {lyricContent}\n                          </div>\n                        ) : (\n                          <p className=\"no-lyric\">暂无歌词</p>\n                        )}\n                      </div>\n                    </Scroll>\n                  );\n                }}\n              </Transition>\n              \n              <div className=\"btm-wrapper\">\n                <div className=\"progress-wrapper\" ref={this.ProgressWrapRef}>\n\n                  <p className=\"time time-cur\">{curTime}</p>\n\n                  <div className=\"progress-bar-wrapper\">\n                    <div\n                      ref={this.ProgressBarRef}\n                      className=\"progress-bar\"\n                    >\n                      <div className=\"bar-inner\">\n                        <div\n                          className=\"progress\"\n                          style={{width: `${this.isTouching ? this.progress:playProgressWidth}px`}}\n                          // style={{width: `${playProgressWidth}px`}}\n                        ></div>\n                        <div\n                          className=\"progress-btn-wrapper\"\n                          style={{transform: `translate3d(${this.isTouching ? this.progress:playProgressWidth}px, 0px, 0px)`}}\n                          // style={{transform: `translate3d(${playProgressWidth}px, 0px, 0px)`}}\n                          onTouchStart={(ev) => this.handleTouchStart(ev, play, pause)}\n                        >\n                          <div className=\"progress-btn\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <Slider\n                    style={{\n                      marginLeft: 12,\n                      marginRight: 12,\n                      paddingTop: 22,\n                      paddingBottom: 24,\n                    }}\n                    defaultValue={0}\n                    min={0}\n                    max={100}\n                    step={0.1}\n                    value={progress}\n                    handleStyle={{\n                      marginLeft: '-8px',\n                      marginTop: '-7px',\n                      width: '16px',\n                      height: '16px',\n                      border: 'none',\n                    }}\n                    trackStyle={{\n                      backgroundColor: '#31c27c'\n                    }}\n                    railStyle={{\n                      backgroundColor: 'rgba(225,225,225, 0.4)'\n                    }}\n                    onChange={(value) => {\n                      pause();\n                      changeProgressHandler(value);\n                    }}\n                    onAfterChange={(curVal) => {\n                      afterChangeProgressHandler(curVal);\n                      playByIndex(curSongIndex);\n                    }}\n                  /> */}\n\n                  <p className=\"time time-dur\">{duration}</p>\n                </div>\n\n                <div className=\"operators\">\n                  <div\n                    className={`btn ${mode}-icon`}\n                    onClick={clickModeBtnHandler}\n                  ></div>\n                  <div\n                    className=\"btn prev-icon\"\n                    onClick={clickPrevBtnHandler}\n                  ></div>\n                  <div\n                    className={`btn ${isPauseIcon ? 'pause' : 'play'}-icon`}\n                    onClick={clickPlayPauseHandler}\n                  ></div>\n                  <div\n                    className=\"btn next-icon\"\n                    onClick={clickNextBtnHandler}\n                  ></div>\n                  <div\n                    className=\"btn list-icon\"\n                    onClick={togglePlayingList}\n                  ></div>\n                </div>\n              </div>\n\n              <div className=\"background\">\n                <img \n                  width=\"100%\"\n                  height=\"100%\"\n                  src={imgSrc}\n                />\n              </div>\n            </div>\n\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default FullPlayer;","import React from 'react';\nimport { List } from 'antd-mobile';\n\nimport PlayerContext from '../../context/PlayerContext';\n\nimport './PlayingList.less';\n\nconst Item = List.Item;\n\nclass PlayingList extends React.Component {\n\n  componentDidMount() {\n    window.document.querySelector('.playing-list .active-song').scrollIntoView();\n  }\n  \n  render() {\n    const { transitionClass, togglePlayingList } = this.props;\n    \n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, playByIndex, deleteSong, clearPlaylist }) => {\n          const {\n            playingList,\n            curSongIndex,\n          } = playerState;\n\n          const extraClearBtn = (\n            <div\n              className=\"btn delete-icon\"\n              onClick={() => clearPlaylist()}\n            ></div>\n          );\n\n          const listItemArr = playingList.map((song, idx) => {\n            const {\n              id,\n              name,\n              artists,\n            } = song;\n    \n            const extraCloseBtn = (\n              <div\n                className=\"btn close-icon\"\n                onClick={(ev) => {\n                  ev.stopPropagation();\n                  deleteSong(idx);\n                }}\n              ></div>\n            );\n\n            return (\n              <Item \n                key={id}\n                className={`${curSongIndex === idx ? 'active-song' : ''}`}\n                extra={extraCloseBtn}\n                onClick={() => playByIndex(idx)}\n              >\n                {name}\n                <span className=\"song-artists-alb\">\n                  {' - ' + artists.map(val => val.name).join('/')}\n                </span>\n              </Item>\n            );\n          });\n\n          return (\n            <div \n              className={`playing-list ${transitionClass}`}\n              onTouchStart={(ev) => ev.stopPropagation()}\n            >\n              <Item\n                extra={extraClearBtn}\n                multipleLine\n              >\n                播放列表\n                <span className=\"song-num\">\n                  共({playingList.length})首\n                </span>\n              </Item>\n              <List>\n                {listItemArr}\n              </List>\n              <Item\n                className=\"close-btn\"\n                onClick={togglePlayingList}\n                multipleLine\n              >\n                关闭\n              </Item>\n            </div>\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default PlayingList;","import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport _ from 'lodash';\n\nimport PlayerContext from '../../context/PlayerContext';\nimport MiniPlayer from '../MiniPlayer/MiniPlayer.jsx';\nimport FullPlayer from '../FullPlayer/FullPlayer.jsx';\nimport PlayingList from '../PlayingList/PlayingList.jsx';\n\n// import './Player.less';\n\nclass Player extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modeIndex: 0,\n      duration: '00:00',\n      curTime: '00:00',\n      playProgress: '0',\n      // 歌词相关\n      // curTimestamp: 0, \n      lyric: [],\n      timestampArr: [],\n      curLyricIndex: -1,\n      curLyricIndexChange: false,\n      isPauseIcon: false,\n      // showMiniplayer: false,\n      showFullplayer: false,\n      showPlayingList: false,\n    };\n    this.audioRef = React.createRef();\n    // this.handleChangeProgress = this.handleChangeProgress.bind(this);\n    // this.handleAfterChangeProgress = this.handleAfterChangeProgress.bind(this);\n\n    this.songId = 0; // lyric\n    this.diffSong = false; // lyric\n    this.curSongIndex = -1;\n    this.audioAmount = 0;\n    this.isPause = true; // 指示 进行播放还是暂停\n    this.songUrlApi = 'https://music.163.com/song/media/outer/url?id='; // ?id=350909 会返回一个重定向响应\n    this.currentSong = {};\n\n    this.playMode = [\n      {\n        desc: '列表循环',\n        className: 'loop',\n      },\n      {\n        desc: '单曲循环',\n        className: 'single',\n      },\n      {\n        desc: '随机播放',\n        className: 'random',\n      }\n    ];\n  }\n\n  componentDidMount() {\n    // console.log('player mount');\n    // this.getLyric();\n  }\n\n  componentDidUpdate() {\n    // console.log('player Update');\n    if (this.isNoAudio()) {\n      return;\n    }\n    if (this.isPause) {\n      if (!(this.audioRef.current.paused)) {\n        this.pauseAudio();\n      }\n    } else {\n      if (this.audioRef.current.paused) {\n        this.playAudio();\n      }\n    }\n    // lyric\n    // console.log(this.diffSong);\n    if (this.diffSong) {\n      this.getLyric();\n    }\n  }\n\n  getLyric = () => {\n    const lrcUrl = `https://api.mlwei.com/music/api/wy/?key=523077333&cache=1&type=lrc&id=${this.songId}`;\n    console.log(lrcUrl);\n    \n    window.fetch(lrcUrl, {\n      method: 'GET',\n      headers: { 'Accept': '*' },\n      mode: 'cors'\n    }).then(\n      response => {\n        // console.log(response);\n        return response.status === 200 ? response.text() : null;\n      }\n    ).then(\n      data => {\n        if (data) {\n          \n          // console.log(data);\n          const lrcArr = data.split('\\n');\n          // state\n          const \n            lyric = [],\n            timestampArr = [];\n  \n          lrcArr.forEach((lrc) => {\n            const matchPart = lrc.match(/\\[(.*)\\](.*)/);\n  \n            if (matchPart) {\n              \n              const \n                timestampParts = matchPart[1].trim().split(':'),\n                part1 = parseInt(timestampParts[0]) * 60,\n                part2 = parseFloat(timestampParts[1]),\n                timestamp = part1 + part2;\n              \n              if (!isNaN(timestamp)) {\n                lyric.push(matchPart[2].trim());\n                timestampArr.push(timestamp);\n              }\n            }\n          });\n  \n          console.log(lyric);\n          // console.log(timestampArr);\n  \n          this.setState({\n            lyric: lyric,\n            timestampArr: timestampArr,\n            curLyricIndex: -1,\n          });\n        }\n      }\n    ).catch(\n      reason => {\n        // console.log(reason);\n        this.setState({\n          lyric: [],\n          timestampArr: [],\n        });\n      }\n    );\n  }\n\n  playAudio() {\n    this.audioRef.current.play().then(() => {\n      // console.log('play.then');\n      this.setState({ isPauseIcon: true });\n    }, (reason) => {\n      console.log(reason);\n    });\n  }\n\n  pauseAudio() {\n    this.audioRef.current.pause();\n    this.setState({ isPauseIcon: false });\n  }\n\n  handleClickPlayPause(ev, funcPlay, funcPause) {\n    ev.stopPropagation();\n    if (this.isNoAudio()) {\n      return;\n    }\n    if (this.audioRef.current.paused) {\n      const index = this.curSongIndex;\n      funcPlay(index);\n    } else {\n      funcPause();\n    }\n  }\n\n  handleClickPrevBtn(funcPlay) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    this.setState({ playProgress: '0' });\n    const index = this.getIndex(true);\n    funcPlay(index);\n  }\n\n  handleClickNextBtn(funcPlay) {\n    if (this.isNoAudio()) {\n      return;\n    }\n    this.setState({ playProgress: '0' });\n    const index = this.getIndex();\n    funcPlay(index);\n  }\n\n  handleClickModeBtn() {\n    if (this.isNoAudio()) {\n      return;\n    }\n    const nextIndex = (this.state.modeIndex + 1) % this.playMode.length;\n\n    this.audioRef.current.loop = nextIndex === 1;\n    this.setState({ modeIndex: nextIndex });\n  }\n\n  // handleChangeProgress(value) {\n  //   if (this.isNoAudio()) {\n  //     return;\n  //   }\n  //   const\n  //     prevCurTime = this.state.curTime,\n  //     duration = this.audioRef.current.duration;\n\n  //   const\n  //     curTimeStr = this.timeFormat(parseFloat((value / 100 * duration).toFixed(6))),\n  //     progress = `${value}%`;\n\n  //     if (prevCurTime !== curTimeStr) {\n  //       this.setState({\n  //         curTime: curTimeStr,\n  //         playProgress: progress,\n  //       });\n  //     } else {\n  //       this.setState({ playProgress: progress });\n  //     }\n  // }\n\n  // handleAfterChangeProgress(value) {\n  //   if (this.isNoAudio()) {\n  //     return;\n  //   }\n  //   const audio = this.audioRef.current;\n  //   audio.currentTime = parseFloat((value / 100 * audio.duration).toFixed(6));\n  // }\n\n  toggleFullplayer = () => {\n    this.setState(state => ({\n      showFullplayer: !state.showFullplayer\n    }));\n  }\n\n  togglePlayingList = (ev) => {\n    ev.stopPropagation();\n    this.setState(state => ({\n      showPlayingList: !state.showPlayingList\n    }));\n  }\n  \n  // audio\n  handleDurationChange() {\n    // console.log('handleDurationChange');\n    this.setState({\n      duration: this.timeFormat(this.audioRef.current.duration),\n      playProgress: '0',\n      curTime: '00:00'\n    });\n  }\n  // use by fullplayer\n  updateCurrentTime = (playPercentage) => {\n    const \n      audioElem = this.audioRef.current,\n      duration = audioElem.duration;\n      \n    audioElem.currentTime = duration * playPercentage;\n  }\n\n  handleTimeUpdate() {\n    const\n      { curTime, curLyricIndex, timestampArr } = this.state,\n      { duration, currentTime } = this.audioRef.current;\n    \n    const\n      nextCurTime = this.timeFormat(currentTime),\n      nextPlayProgress = `${(currentTime / duration).toFixed(3)}`,\n      // nextPlayProgress = `${(currentTime / duration * 100).toFixed(2)}%`,\n      nextCurLyricIndex = _.findLastIndex(timestampArr, val => val <= currentTime);\n  \n    if (curTime !== nextCurTime) {\n      this.setState({\n        curTime: nextCurTime,\n        playProgress: nextPlayProgress,\n      });\n    } else if (currentTime === duration) {\n      this.setState({\n        playProgress: nextPlayProgress\n      });\n    }\n    // lyric\n    if (curLyricIndex !== nextCurLyricIndex) {\n      this.setState({\n        curLyricIndex: nextCurLyricIndex,\n        curLyricIndexChange: true,\n      });\n    } else {\n      this.setState({\n        curLyricIndexChange: false,\n      });\n    }\n  }\n\n  handleEnded(funcPlay) {\n    const index = this.getIndex();\n    this.setState({ loadProgress: '0', playProgress: '0' });\n    funcPlay(index);\n  }\n\n  handleAudioError() {\n    const audioElem = this.audioRef.current;\n    console.log(audioElem.error);\n    \n    // TODO 完善无版权歌曲处理\n    if (audioElem.error.code === 2) {\n      audioElem.load();\n      audioElem.currentTime = parseFloat(this.state.playProgress) / 100;\n      // console.log(this.state.playProgress);\n    }\n  }\n\n  // Util\n  isNoAudio() {\n    return (this.audioAmount === 0);\n  }\n\n  timeFormat(timeNum) {// mm:ss\n    const minutes = parseInt(`${timeNum / 60}`),  // 商\n          seconds = parseInt(`${timeNum % 60}`),  // 余数\n          minStr = minutes < 10 ? `0${minutes}` : `${minutes}`,\n          secStr = seconds < 10 ? `0${seconds}` : `${seconds}`;\n\n    return `${minStr}:${secStr}`;\n  }\n\n  getIndex(isPrev) {\n    if (isPrev === undefined) {\n      isPrev = false;\n    }\n    let index = 0;\n    switch (this.state.modeIndex) {\n      case 0:\n      case 1:\n        if (isPrev) {\n          index = (\n              this.curSongIndex - 1 + this.audioAmount\n            ) % this.audioAmount;\n        } else {\n          index = (this.curSongIndex + 1) % this.audioAmount;\n        }\n        break;\n      case 2:\n        index = parseInt(Math.random() * this.audioAmount);\n        break;\n      default:\n        break;\n    }\n    return index;\n  }\n\n  render() {\n    // console.log('player render');\n    const { showFullplayer, showPlayingList } = this.state;\n\n    return (\n      <PlayerContext.Consumer>\n        {({ playerState, playByIndex, pause }) => {\n          const {\n            playingList,\n            currentSong,\n            curSongIndex,\n            isPause,\n          } = playerState;\n          \n          const curSongId = currentSong.id;\n          {/* console.log(curSongId); */}\n          if (curSongId) {\n            this.diffSong = this.songId !== curSongId;\n            this.songId = curSongId;\n          }\n          this.curSongIndex = curSongIndex;\n          this.audioAmount = playingList.length;\n          this.isPause = isPause;\n          this.currentSong = currentSong;\n          this.isToReset = _.isEmpty(currentSong);\n\n          return (\n            <div className=\"audio-controls-panel\">\n              {/* music */}\n              <audio \n                ref={this.audioRef}\n                src={\n                  currentSong && currentSong.link ? `${this.songUrlApi}${currentSong.id}` : ''\n                }\n                onDurationChange={() => this.handleDurationChange()}\n                onTimeUpdate={() => this.handleTimeUpdate()}\n                onEnded={() => this.handleEnded(playByIndex)}\n                onError={() => this.handleAudioError()}\n              >\n              </audio>\n              \n              {/* mini full都用transition 包裹，currentSong为空时，做退出的效果。\n              且各自内部也对currentSong为空的情况做处理。 */}\n              <Transition\n                in={!this.isToReset}\n                timeout={150}\n                mountOnEnter\n                unmountOnExit\n              >\n                {(status) => {\n                  return (\n                    <MiniPlayer\n                      transitionClass={`slide-up slide-up-${status}`}\n                      curSong={currentSong}\n                      isPauseIcon={this.state.isPauseIcon}\n                      clickPlayPauseHandler={(ev) => this.handleClickPlayPause(ev, playByIndex, pause)}\n                      toggleFullplayer={this.toggleFullplayer}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n          \n              <Transition\n                in={this.isToReset ? false : showFullplayer}\n                timeout={250}\n                mountOnEnter\n                unmountOnExit\n                onExited={() => this.setState({showFullplayer: false})}\n              >\n                {(status) => {\n                  return (\n                    <FullPlayer\n                      transitionClass={`slide-up slide-up-${status}`}\n                      curSong={currentSong}\n                      diffSong={this.diffSong}\n                      playState={this.state}\n                      mode={this.playMode[this.state.modeIndex].className}\n                      clickPlayPauseHandler={(ev) => this.handleClickPlayPause(ev, playByIndex, pause)}\n                      clickPrevBtnHandler={() => this.handleClickPrevBtn(playByIndex)}\n                      clickNextBtnHandler={() => this.handleClickNextBtn(playByIndex)}\n                      clickModeBtnHandler={() => this.handleClickModeBtn()}\n                      changeProgressHandler={this.handleChangeProgress}\n                      afterChangeProgressHandler={this.handleAfterChangeProgress}\n                      toggleFullplayer={this.toggleFullplayer}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                      updateCurrentTime={this.updateCurrentTime}\n                    />\n                  );\n                }}\n              </Transition>\n              \n              {/* plp */}\n              <Transition\n                in={this.isToReset ? false : showPlayingList}\n                timeout={250}\n                mountOnEnter\n                unmountOnExit\n                onExited={() => this.setState({showPlayingList: false})}\n              >\n                {(status) => {\n                  return (\n                    <PlayingList\n                      transitionClass={`slide-up slide-up-${status}`}\n                      listData={playingList}\n                      curSongIndex={curSongIndex}\n                      togglePlayingList={(ev) => this.togglePlayingList(ev)}\n                    />\n                  );\n                }}\n              </Transition>\n            </div>\n          );\n        }}\n      </PlayerContext.Consumer>\n    );\n  }\n}\n\nexport default Player;","import React from 'react';\r\nimport l_array from 'lodash/array';\r\n\r\nimport PlayerContext from './context/PlayerContext';\r\nimport Home from './components/Home/Home.jsx';\r\nimport Player from './components/Player/Player.jsx';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playingList: [],\r\n      currentSong: {},\r\n      curSongIndex: -1,\r\n      isPause: true,\r\n      isLogin: false\r\n    };\r\n    // bind this to method\r\n    this.playByIndex = this.playByIndex.bind(this);\r\n    // this.pause = this.pause.bind(this);\r\n    this.deleteSong = this.deleteSong.bind(this);\r\n    this.clearPlaylist = this.clearPlaylist.bind(this);\r\n    this.playAll = this.playAll.bind(this);\r\n    this.addAll = this.addAll.bind(this);\r\n    this.playSong = this.playSong.bind(this);\r\n    this.addSongToNext = this.addSongToNext.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log('app mount');\r\n    const localData = window.localStorage.getItem('playData');\r\n    this.setState(JSON.parse(localData));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { playingList, currentSong, curSongIndex } = this.state;\r\n    window.localStorage.setItem('playData',JSON.stringify({ playingList, currentSong, curSongIndex }));\r\n  }\r\n\r\n  playByIndex(index) {\r\n    if (index >= 0) {\r\n      if (index === this.state.curSongIndex) {\r\n        if (this.state.isPause) {\r\n          this.setState({ isPause: false });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          currentSong: this.state.playingList[index],\r\n          curSongIndex: index,\r\n          isPause: false,\r\n        });\r\n      } \r\n    }\r\n  }\r\n\r\n  play = () => {\r\n    this.setState({ isPause: false });\r\n  }\r\n  pause = () => {\r\n    this.setState({ isPause: true });\r\n  }\r\n\r\n  // 删除歌曲\r\n  deleteSong(songIndex) {\r\n    const appState = this.state;\r\n\r\n    const playingList = appState.playingList;\r\n    let curSongIndex = appState.curSongIndex;\r\n\r\n    l_array.remove(playingList, (val, idx) => idx === songIndex);\r\n\r\n    if (playingList.length) {\r\n      \r\n      if (songIndex < curSongIndex) {\r\n        this.setState({\r\n          playingList: playingList,\r\n          curSongIndex: curSongIndex - 1,\r\n        });\r\n      } else if (songIndex === curSongIndex) {\r\n\r\n        curSongIndex = songIndex === playingList.length ? 0 : songIndex;\r\n\r\n        this.setState({\r\n          playingList: playingList,\r\n          currentSong: playingList[curSongIndex],\r\n          curSongIndex: curSongIndex,\r\n          isPause: false,\r\n        });\r\n      } else {\r\n        this.setState({ playingList: playingList });\r\n      }\r\n      \r\n    } else {\r\n      this.clearPlaylist();\r\n    }\r\n  }\r\n\r\n  clearPlaylist() {\r\n    this.setState({\r\n      playingList: [],\r\n      currentSong: {},\r\n      curSongIndex: -1,\r\n      isPause: true,\r\n    });\r\n  }\r\n\r\n  playAll(songlist) {\r\n    this.setState({\r\n      playingList: songlist,\r\n      curSongIndex: -1,\r\n    }, () => this.playByIndex(0));\r\n  }\r\n\r\n  addAll(songlist) {\r\n    const playingList = this.state.playingList;\r\n\r\n    if (playingList.length) {\r\n\r\n      // 歌单间重复的歌曲也被去重了\r\n      const songToAdd = l_array.differenceBy(songlist, playingList, 'id');\r\n      // console.log(songToAdd);\r\n\r\n      if (songToAdd.length) {\r\n        // 这一行直接以非 setState 的方式对 this.state 做了修改\r\n        playingList.splice(this.state.curSongIndex + 1, 0, ...songToAdd);\r\n        // 这一行只是单纯地要触发 render\r\n        this.setState({ playingList: playingList });\r\n      }\r\n    } else {\r\n      this.playAll(songlist);\r\n    }\r\n  }\r\n  // 添加并播放单首歌曲\r\n  playSong(song) {\r\n    const appState = this.state;\r\n    const playingList = appState.playingList;\r\n    const curSongIndex = appState.curSongIndex;\r\n    const indexToInsert = curSongIndex + 1;\r\n\r\n    if (playingList.length) {// 播放列表不为空\r\n\r\n      const matchedSongIdx = l_array.findIndex(playingList, ['id', song.id]);\r\n  \r\n      // 已有这首歌\r\n      if (matchedSongIdx !== -1) {\r\n        \r\n        if (matchedSongIdx === curSongIndex) {// 且为正在播放的歌\r\n          // 直接播放这首歌\r\n          this.playByIndex(matchedSongIdx);\r\n\r\n        } else if (matchedSongIdx < curSongIndex) {// 在正在播放的歌之前\r\n          // 添加到正播放的歌的后面\r\n          playingList.splice(indexToInsert, 0, song);\r\n          // 从原位置移除\r\n          playingList.splice(matchedSongIdx, 1);\r\n          // 更新 ui\r\n          this.setState({\r\n            playingList: playingList,\r\n            curSongIndex: curSongIndex - 1,\r\n          }, () => this.playByIndex(indexToInsert - 1));\r\n\r\n        } else {// 在正在播放的歌之后\r\n          // 从原位置移除\r\n          playingList.splice(matchedSongIdx, 1);\r\n          // 添加到正播放的歌的后面\r\n          playingList.splice(indexToInsert, 0, song);\r\n          // 更新 ui\r\n          this.setState({ playingList: playingList }, () => this.playByIndex(indexToInsert));\r\n        }\r\n\r\n      } else {// 没有这首歌\r\n        // 添加到正播放的歌的后面\r\n        playingList.splice(indexToInsert, 0, song);\r\n        // console.log(playingList);\r\n        // 更新 ui\r\n        this.setState({ playingList: playingList }, () => this.playByIndex(indexToInsert));\r\n      }\r\n\r\n    } else {// 播放列表为空\r\n      this.setState({ playingList: [song] }, () => this.playByIndex(indexToInsert));\r\n    }\r\n  }\r\n  // 下一首播放\r\n  addSongToNext(song) {\r\n    const appState = this.state;\r\n    const playingList = appState.playingList;\r\n    const curSongIndex = appState.curSongIndex;\r\n    const indexToInsert = curSongIndex + 1;\r\n\r\n    if (playingList.length) {// 播放列表不为空\r\n\r\n      const matchedSongIdx = l_array.findIndex(playingList, ['id', song.id]);\r\n  \r\n      // 已有这首歌\r\n      if (matchedSongIdx !== -1) {\r\n        \r\n        if (matchedSongIdx === curSongIndex) {// 且为正在播放的歌\r\n          // 直接播放这首歌\r\n          this.playByIndex(matchedSongIdx); \r\n\r\n        } else if (matchedSongIdx < curSongIndex) {// 在正在播放的歌之前\r\n          // 添加到正播放的歌的后面\r\n          playingList.splice(indexToInsert, 0, song);\r\n          // 从原位置移除\r\n          playingList.splice(matchedSongIdx, 1);\r\n          // 更新 ui\r\n          this.setState({\r\n            playingList: playingList,\r\n            curSongIndex: curSongIndex - 1,\r\n          });\r\n\r\n        } else {// 在正在播放的歌之后\r\n          // 从原位置移除\r\n          playingList.splice(matchedSongIdx, 1);\r\n          // 添加到正播放的歌的后面\r\n          playingList.splice(indexToInsert, 0, song);\r\n          // 更新 ui\r\n          this.setState({ playingList: playingList });\r\n        }\r\n\r\n      } else {// 没有这首歌\r\n        // 添加到正播放的歌的后面\r\n        playingList.splice(indexToInsert, 0, song);\r\n        // 更新 ui\r\n        this.setState({ playingList: playingList });\r\n      }\r\n\r\n    } else {// 播放列表为空\r\n      this.setState({ playingList: [song] }, () => this.playByIndex(0));\r\n    }\r\n\r\n  }\r\n  // render\r\n  render() {\r\n    // console.log('app render');\r\n    return (\r\n      \r\n        <PlayerContext.Provider \r\n          value={{\r\n            playerState: this.state,\r\n            playByIndex: this.playByIndex,\r\n            play: this.play,\r\n            pause: this.pause,\r\n            deleteSong: this.deleteSong,\r\n            clearPlaylist: this.clearPlaylist,\r\n            playAll: this.playAll,\r\n            addAll: this.addAll,\r\n            playSong: this.playSong,\r\n            addSongToNext: this.addSongToNext,\r\n          }}\r\n        >\r\n          <Home />\r\n          <Player />\r\n          \r\n        </PlayerContext.Provider>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport './index.less';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <App />\n  // </BrowserRouter>,\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cover-placeholder.d45643b2.png\";"],"sourceRoot":""}